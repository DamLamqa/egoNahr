{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./dist/scripts/jsonConversion.js","webpack:///./dist/scripts/main.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","_exports","NAME_LABEL","MARRIAGE_LABEL","BAPTISM_LABEL","OFFSPRING_LABEL","Node","id","fullName","firstParent","secondParent","spouse","offSpringList","this","ID","includes","isActor","Tie","source","target","tieType","tieStartYear","tieEndYear","nodeList","tieList","parseJSON","actorJSON","console","log","actorFullName","json","element","checkLabelExistence","data","text","getFullNameFromJSON","firstParentID","parents","firstParentName","thisFirstParent","pushActorToList","getFirstParentFromJSON","secondParentID","secondParentName","thisSecondParent","getSecondParentFromJSON","actorSpouse","spouseID","spouseName","thisSpouse","getSpouseID","rawOffspringArray","offsprings","length","thisChildID","thisChild","thisChildName","push","getOffspringList","centralActor","actor","firstParentToMarriageTie","secondParentToMarriageTie","relativeIDToString","parentsMarriageNode","marriageToCentralActorTie","createParentsUnionNode","actorSpouseID","actorMarriageNode","actorToMarriageTie","spouseToMarriageTie","marriageToOffspringTie","createCentralActorUnionNode","label","search","filter","e","relative","nameKey","myArray","getActorData","myActorJSON","getJSON","myActorData","http","XMLHttpRequest","params","open","setRequestHeader","onreadystatechange","readyState","status","JSON","parse","responseText","send","simulation","jsonConversion","svg","d3","select","width","attr","height","scaleOrdinal","schemeCategory20","assignOriginParentNodeToChild","originParent","dragstarted","event","active","alphaTarget","restart","fx","x","fy","y","dragged","dragended","thisGrandChild","j","getCentralActor","nodes","links","graph","forceSimulation","force","forceLink","forceManyBody","strength","forceCenter","link","append","selectAll","enter","node","drag","on","drawGraph"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","\"use strict\";\n\nvar _exports = module.exports = {};\n\nvar NAME_LABEL = \"Name\";\nvar MARRIAGE_LABEL = \"Marriage\";\nvar BAPTISM_LABEL = \"Baptism\";\nvar FUNERAL_LABEL = \"Funeral\";\nvar OFFSPRING_LABEL = \"Offspring\";\n\nvar Node = function Node(id, fullName, firstParent, secondParent, spouse, offSpringList) {\n    this.ID = \"\" + id;\n    this.fullName = fullName;\n    this.firstParent = firstParent;\n    this.secondParent = secondParent;\n    this.offSpringList = offSpringList;\n    this.spouse = spouse;\n    if (this.ID.includes(\"+\")) {\n        this.isActor = false;\n    } else this.isActor = true;\n};\n\nvar Tie = function Tie(source, target, tieType, tieStartYear, tieEndYear) {\n    this.source = source;\n    this.target = target;\n    this.tieType = tieType;\n    this.tieStartYear = tieStartYear;\n    this.tieEndYear = tieEndYear;\n};\n\nvar nodeList = [];\nvar tieList = [];\n\nfunction getJSON(id) {\n    var myActorData;\n    var http = new XMLHttpRequest();\n    var url = \"https://projectcornelia.be/source_browser/public/router.php\";\n    var params = \"q=\" + id + \"&s=ALL-SOURCES&w=search-by-option\";\n\n    // TODO: now synchronous call. to be fixed\n    http.open(\"POST\", url, false);\n\n    //Send the proper header information along with the request\n    http.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n\n    http.onreadystatechange = function () {\n        //Call a function when the state changes.\n        if (http.readyState == 4 && http.status == 200) {\n            myActorData = JSON.parse(http.responseText);\n        }\n    };\n    http.send(params);\n    return myActorData;\n}\n\nfunction parseJSON(id, actorJSON) {\n    var myActorData;\n    console.log(actorJSON);\n\n    // TODO: convert to date object\n\n    var actorFullName = getFullNameFromJSON(actorJSON);\n\n    var firstParent = getFirstParentFromJSON(actorJSON);\n    var secondParent = getSecondParentFromJSON(actorJSON);\n\n    // var firstGodParent = getFirstGodParentFromJSON(actorJSON);\n    // var secondGodParent = getSecondGodParentFromJSON(actorJSON);\n    //\n    // var actorBaptismDate = getBaptismDate(actorJSON);\n    // var actorBaptismPlace = getBaptismPlace(actorJSON);\n    // var actorBaptismSource = getBaptismSource(actorJSON);\n    //\n    // var actorFuneralDate = getFuneralDate(actorJSON);\n\n    var actorSpouse = getSpouseID(actorJSON);\n\n    var offSpringList = getOffspringList(actorJSON);\n\n    var centralActor = new Node(id, actorFullName, firstParent, secondParent, actorSpouse, offSpringList);\n\n    if (firstParent || secondParent) {\n        createParentsUnionNode(centralActor);\n    }\n\n    if (offSpringList || actorSpouse) {\n        createCentralActorUnionNode(centralActor);\n    }\n\n    pushActorToList(centralActor);\n\n    return centralActor;\n}\n\nfunction getFullNameFromJSON(json) {\n    var element = checkLabelExistence(NAME_LABEL, json);\n    console.log(element);\n    if (!element) return null;\n    var fullName = element.data[0][0].text;\n    if (fullName) {\n        return fullName;\n    }\n}\n\nfunction getFirstParentFromJSON(json) {\n    var element = checkLabelExistence(BAPTISM_LABEL, json);\n    if (!element) return null;\n    var firstParentID = element.data.parents.data[0][\"query-value\"];\n    var firstParentName = element.data.parents.data[0][\"query-text\"];\n    if (firstParentID) {\n        var thisFirstParent = new Node(firstParentID, firstParentName);\n        pushActorToList(thisFirstParent);\n        return thisFirstParent;\n    }\n}\n\nfunction getSecondParentFromJSON(json) {\n    var element = checkLabelExistence(BAPTISM_LABEL, json);\n    if (!element) return null;\n    var secondParentID = element.data.parents.data[2][\"query-value\"];\n    var secondParentName = element.data.parents.data[2][\"query-text\"];\n    if (secondParentID) {\n        var thisSecondParent = new Node(secondParentID, secondParentName);\n        pushActorToList(thisSecondParent);\n        return thisSecondParent;\n    }\n}\n\nfunction getFirstGodParentFromJSON(json) {\n    var element = checkLabelExistence(BAPTISM_LABEL, json);\n    if (!element) return null;\n    var firstGodParentID = element.data.godparents.data[0][\"query-text\"];\n    if (firstGodParentID) {\n        return firstGodParentID;\n    }\n}\n\nfunction getSecondGodParentFromJSON(json) {\n    var element = checkLabelExistence(BAPTISM_LABEL, json);\n    if (!element) return null;\n    var secondGodParentID = element.data.godparents.data[2][\"query-text\"];\n    if (secondGodParentID) {\n        return secondGodParentID;\n    }\n}\n\nfunction getBaptismPlace(json) {\n    var element = checkLabelExistence(BAPTISM_LABEL, json);\n    if (!element) return null;\n\n    var baptismPlace = element.value;\n    if (baptismPlace) {\n        return baptismPlace;\n    }\n}\n\nfunction getBaptismDate(json) {\n    var element = checkLabelExistence(BAPTISM_LABEL, json);\n    if (!element) return null;\n\n    var baptismDate = element.data.place.data[0].text;\n    if (baptismDate) {\n        return baptismDate;\n    }\n}\n\nfunction getBaptismSource(json) {\n    var element = checkLabelExistence(BAPTISM_LABEL, json);\n    if (!element) return null;\n\n    var baptismSource = element.data.source.data[0].text;\n    if (baptismSource) {\n        return baptismSource;\n    }\n}\n\nfunction getSpouseID(json) {\n    var element = checkLabelExistence(MARRIAGE_LABEL, json);\n    if (!element) return null;\n    var spouseID = element.data[0].data.spouse.data[0][\"query-value\"];\n    var spouseName = element.data[0].data.spouse.data[0][\"query-text\"];\n\n    if (spouseID) {\n        var thisSpouse = new Node(spouseID, spouseName);\n        pushActorToList(thisSpouse);\n        return thisSpouse;\n    }\n}\n\nfunction getFuneralDate(json) {\n    var element = checkLabelExistence(FUNERAL_LABEL, json);\n    if (!element) return null;\n\n    var funeralDate = element.value;\n    if (funeralDate) {\n        return funeralDate;\n    }\n}\n\nfunction getOffspringList(json) {\n    var element = checkLabelExistence(OFFSPRING_LABEL, json);\n    if (!element) return null;\n\n    var rawOffspringArray = element.data.offsprings.data;\n\n    if (rawOffspringArray) {\n        var offSpringNameList = [];\n        var offSpringList = [];\n        for (var i = 0; i < rawOffspringArray.length; i++) {\n            if (rawOffspringArray[i][\"query-type\"] === \"actor\") {\n                var thisChildID = rawOffspringArray[i][\"query-value\"];\n                var thisChild = new Node(thisChildID);\n                if (rawOffspringArray[i + 2][\"query-type\"] === \"year\") {\n                    var thisChildName = rawOffspringArray[i][\"query-text\"];\n                    thisChild.fullName = thisChildName;\n                }\n                offSpringList.push(thisChild);\n                pushActorToList(thisChild);\n            }\n        }\n        return offSpringList;\n    }\n}\n\nfunction getActorData(id) {\n    var myActorJSON = _exports.getJSON(id);\n    console.log(myActorJSON);\n    var myActorObject = parseJSON(id, myActorJSON);\n\n    return myActorObject;\n}\n\nfunction checkLabelExistence(label, json) {\n    var element = _exports.search(label, json);\n    if (!element || !element.data) {\n        return null;\n    } else {\n        return element;\n    }\n}\n\nfunction search(nameKey, myArray) {\n    for (var i = 0; i < myArray.length; i++) {\n        if (myArray[i].label === nameKey) {\n            return myArray[i];\n        }\n    }\n    return null;\n}\n\nfunction pushActorToList(actor) {\n    var isActorInList = nodeList.filter(function (e) {\n        return e.ID === actor.ID;\n    });\n    if (isActorInList.length === 0) {\n\n        nodeList.push(actor);\n    } else {\n        return;\n    }\n}\n\nfunction relativeIDToString(relative) {\n    var relativeID = null;\n    if (relative) relativeID = relative.ID;else relativeID = \"\";\n    return relativeID;\n}\n\nfunction createParentsUnionNode(actor) {\n    var firstParentToMarriageTie, secondParentToMarriageTie;\n\n    var firstParentID = relativeIDToString(actor.firstParent);\n    var secondParentID = relativeIDToString(actor.secondParent);\n\n    var parentsMarriageNode = new Node(firstParentID + \"+\" + secondParentID);\n    pushActorToList(parentsMarriageNode);\n\n    if (firstParentID.length > 0) {\n        firstParentToMarriageTie = new Tie(firstParentID, parentsMarriageNode.ID);\n    }\n    if (secondParentID.length > 0) {\n        secondParentToMarriageTie = new Tie(secondParentID, parentsMarriageNode.ID);\n    }\n\n    var marriageToCentralActorTie = new Tie(parentsMarriageNode.ID, actor.ID);\n\n    tieList.push(firstParentToMarriageTie, secondParentToMarriageTie, marriageToCentralActorTie);\n}\n\nfunction createCentralActorUnionNode(actor) {\n\n    var actorSpouseID = relativeIDToString(actor.spouse);\n    var actorMarriageNode = new Node(actor.ID + \"+\" + actorSpouseID);\n    pushActorToList(actorMarriageNode);\n    var actorToMarriageTie = new Tie(actor.ID, actorMarriageNode.ID);\n    tieList.push(actorToMarriageTie);\n\n    if (actor.spouse) {\n        var spouseToMarriageTie = new Tie(actor.spouse.ID, actorMarriageNode.ID);\n        tieList.push(spouseToMarriageTie);\n    }\n\n    if (actor.offSpringList) {\n        for (var i = 0; i < actor.offSpringList.length; i++) {\n            var marriageToOffspringTie = new Tie(actorMarriageNode.ID, actor.offSpringList[i].ID);\n            tieList.push(marriageToOffspringTie);\n        }\n    }\n}\n\n_exports.search = search;\n_exports.checkLabelExistence = checkLabelExistence;\n_exports.getActorData = getActorData;\n_exports.getJSON = getJSON;\n_exports.Node = Node;\n_exports.nodeList = nodeList;\n_exports.tieList = tieList;\n\n// export {exports};\n//# sourceMappingURL=jsonConversion.js.map","\"use strict\";\n\nvar jsonConversion = require('./jsonConversion.js');\n\nvar CENTRAL_DEPTH_LEVEL = 0;\n\n//  var ActorFinal = function (id, fullName, baptismDate, birthYear, birthPlace, deathYear, gender, occupation, firstAppearance, firstParent, secondParent, spouse, firstGodParent, secondGodParent, offSpringList) {\n//     this.ID = id;\n//     this.firstName = firstName;\n//     this.lastName = lastName;\n//     this.fullName = fullName;\n//     this.baptismDate = baptismDate;\n//     this.birthYear = birthYear;\n//     this.birthPlace = birthPlace;\n//     this.deathYear = deathYear;\n//     this.gender = gender;\n//     this.occupation = occupation;\n//     this.firstAppearance = firstAppearance;\n//     this.firstParent = firstParent;\n//     this.secondParent = secondParent;\n//     this.firstGodParent = firstGodParent;\n//     this.secondGodParent = secondGodParent;\n//     this.offSpringList = offSpringList;\n//\n//     this.spouse = spouse;\n// };\n\n\nvar simulation;\nvar svg = d3.select(\"svg\"),\n    width = +svg.attr(\"width\"),\n    height = +svg.attr(\"height\");\n\nvar color = d3.scaleOrdinal(d3.schemeCategory20);\n\nfunction getCentralActor(id) {\n    var thisChild = {},\n        thisGrandChild = {};\n    var centralActor = jsonConversion.getActorData(id);\n    if (centralActor.offSpringList) {\n        for (var i = 0; i < centralActor.offSpringList.length; i++) {\n            thisChild = jsonConversion.getActorData(centralActor.offSpringList[i].ID);\n\n            if (thisChild.offSpringList) {\n                for (var j = 0; j < thisChild.offSpringList.length; j++) {\n                    thisGrandChild = jsonConversion.getActorData(thisChild.offSpringList[j].ID);\n                    assignOriginParentNodeToChild(thisGrandChild, thisChild);\n                    thisChild.offSpringList[j] = thisGrandChild;\n                }\n            }\n            assignOriginParentNodeToChild(thisChild, centralActor);\n            centralActor.offSpringList[i] = thisChild;\n        }\n    }\n\n    console.log(centralActor);\n}\n\nfunction assignOriginParentNodeToChild(actor, originParent) {\n\n    if (actor.firstParent.ID = originParent.ID) {\n        actor.firstParent = originParent;\n    } else if (actor.secondParent.ID = originParent.ID) {\n        actor.secondParent = originParent;\n    }\n}\n\nfunction drawGraph(nodes, links) {\n\n    var graph = {};\n    graph[\"nodes\"] = nodes;\n    graph[\"links\"] = links;\n\n    simulation = d3.forceSimulation().force(\"link\", d3.forceLink().id(function (d) {\n        return \"\" + d.ID;\n    })).force(\"charge\", d3.forceManyBody().strength(-250)).force(\"center\", d3.forceCenter(width / 2, height / 2));\n\n    // graph.nodes.filter(function (d) {\n    //     if (d.type === \"root\") {\n    //         d.fx = 100;\n    //     }\n    //     else if (d.type === \"leaf\") {\n    //         d.fx = 500;\n    //     }\n    //\n    // });\n\n    var link = svg.append(\"g\").attr(\"class\", \"links\").selectAll(\"line\").data(graph.links).enter().append(\"line\");\n\n    var node = svg.append(\"g\").attr(\"class\", \"nodes\").selectAll(\"g\").data(graph.nodes).enter().append(\"g\");\n\n    var rectangle = node.append(\"rect\").attr(\"width\", function (d) {\n        if (d.isActor) {\n            return 60;\n        } else return 0;\n    }).attr(\"height\", 6).attr(\"x\", -15).attr(\"y\", -3).attr('fill', 'white').attr('stroke', 'black').call(d3.drag().on(\"start\", dragstarted).on(\"drag\", dragged).on(\"end\", dragended));\n\n    var labels = node.append(\"text\").text(function (d) {\n        if (d.isActor) return d.fullName;\n    }).attr('x', -10).attr('y', -10);\n\n    simulation.nodes(graph.nodes).on(\"tick\", ticked);\n\n    simulation.force(\"link\").links(graph.links);\n\n    function ticked() {\n        link.attr(\"x1\", function (d) {\n            return d.source.x;\n        }).attr(\"y1\", function (d) {\n            return d.source.y;\n        }).attr(\"x2\", function (d) {\n            return d.target.x;\n        }).attr(\"y2\", function (d) {\n            return d.target.y;\n        });\n\n        node.attr(\"transform\", function (d) {\n            return \"translate(\" + d.x + \",\" + d.y + \")\";\n        });\n    }\n}\n\nfunction dragstarted(d) {\n    if (!d3.event.active) simulation.alphaTarget(0.3).restart();\n    d.fx = d.x;\n    d.fy = d.y;\n}\n\nfunction dragged(d) {\n    d.fx = d3.event.x;\n    d.fy = d3.event.y;\n}\n\nfunction dragended(d) {\n    if (!d3.event.active) simulation.alphaTarget(0);\n    d.fx = null;\n    d.fy = null;\n}\n\nfunction traverseGraph(actor) {\n    console.log(actor);\n\n    if (actor.offSpringList) {\n        for (var i = 0; i < actor.offSpringList.length; i++) {\n            getActors(actor.offSpringList[i].ID);\n            if (actor.offSpringList[i].offSpringList) {\n                for (var j = 0; j < actor.offSpringList[i].offSpringList[j]; j++) {\n                    actor.offSpringList[i].offSpringList[j].depth = CENTRAL_DEPTH_LEVEL - 2;\n                }\n            }\n            actor.offSpringList[i].depth = CENTRAL_DEPTH_LEVEL - 1;\n\n            // console.log(getActors(actor.offSpringList[i].ID));\n        }\n    }\n    actor.depth = CENTRAL_DEPTH_LEVEL;\n\n    if (actor.firstParent) {\n        // getActors(actor.firstParent.ID);\n    }\n}\n\nfunction checkNode(a) {\n\n    if (a.offSpringList) {\n        // checkNode(a.offSpringList)\n    }\n    a.traversed = true;\n}\n\n// getActors(4);\n// getActors(42);\n// getActors(480);\n\nvar centralActor = getCentralActor(\"490\");\n\n// traverseGraph(centralActor);\n\n\nconsole.log(jsonConversion.nodeList);\ndrawGraph(jsonConversion.nodeList, jsonConversion.tieList);\n//# sourceMappingURL=main.js.map"],"sourceRoot":""}