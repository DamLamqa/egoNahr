{"map":"{\"version\":3,\"sources\":[\"webpack/bootstrap\",\"/Users/houda/WebstormProjects/egoNahr/dist/scripts/jsonConversion.js\",\"/Users/houda/WebstormProjects/egoNahr/dist/scripts/main.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3/dist/package.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-array/src/ascending.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-array/src/bisector.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-array/src/bisect.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-array/src/pairs.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-array/src/cross.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-array/src/descending.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-array/src/number.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-array/src/variance.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-array/src/deviation.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-array/src/extent.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-array/src/array.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-array/src/constant.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-array/src/identity.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-array/src/range.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-array/src/ticks.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-array/src/threshold/sturges.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-array/src/histogram.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-array/src/quantile.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-array/src/threshold/freedmanDiaconis.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-array/src/threshold/scott.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-array/src/max.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-array/src/mean.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-array/src/median.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-array/src/merge.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-array/src/min.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-array/src/permute.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-array/src/scan.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-array/src/shuffle.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-array/src/sum.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-array/src/transpose.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-array/src/zip.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-axis/src/array.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-axis/src/identity.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-axis/src/axis.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-dispatch/src/dispatch.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-selection/src/namespaces.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-selection/src/namespace.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-selection/src/creator.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-selection/src/selector.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-selection/src/selectorAll.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-selection/src/matcher.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-selection/src/selection/sparse.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-selection/src/selection/enter.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-selection/src/constant.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-selection/src/selection/data.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-selection/src/selection/sort.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-selection/src/selection/attr.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-selection/src/window.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-selection/src/selection/style.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-selection/src/selection/classed.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-selection/src/selection/text.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-selection/src/selection/html.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-selection/src/selection/raise.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-selection/src/selection/lower.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-selection/src/selection/insert.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-selection/src/selection/remove.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-selection/src/selection/clone.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-selection/src/selection/on.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-selection/src/selection/dispatch.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-selection/src/selection/index.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-selection/src/selection/select.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-selection/src/selection/selectAll.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-selection/src/selection/filter.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-selection/src/selection/exit.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-selection/src/selection/merge.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-selection/src/selection/order.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-selection/src/selection/call.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-selection/src/selection/nodes.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-selection/src/selection/node.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-selection/src/selection/size.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-selection/src/selection/empty.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-selection/src/selection/each.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-selection/src/selection/property.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-selection/src/selection/append.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-selection/src/selection/datum.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-selection/src/select.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-selection/src/create.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-selection/src/local.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-selection/src/sourceEvent.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-selection/src/point.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-selection/src/mouse.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-selection/src/selectAll.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-selection/src/touch.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-selection/src/touches.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-drag/src/noevent.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-drag/src/nodrag.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-drag/src/constant.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-drag/src/event.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-drag/src/drag.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-color/src/define.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-color/src/color.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-color/src/math.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-color/src/lab.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-color/src/cubehelix.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-interpolate/src/basis.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-interpolate/src/basisClosed.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-interpolate/src/constant.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-interpolate/src/color.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-interpolate/src/rgb.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-interpolate/src/array.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-interpolate/src/date.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-interpolate/src/number.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-interpolate/src/object.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-interpolate/src/string.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-interpolate/src/transform/parse.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-interpolate/src/value.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-interpolate/src/round.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-interpolate/src/transform/decompose.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-interpolate/src/transform/index.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-interpolate/src/zoom.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-interpolate/src/hsl.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-interpolate/src/lab.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-interpolate/src/hcl.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-interpolate/src/cubehelix.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-timer/src/timer.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-interpolate/src/quantize.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-timer/src/timeout.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-timer/src/interval.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-transition/src/transition/schedule.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-transition/src/interrupt.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-transition/src/transition/tween.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-transition/src/transition/interpolate.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-transition/src/transition/remove.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-transition/src/transition/selection.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-transition/src/transition/text.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-transition/src/transition/index.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-ease/src/linear.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-ease/src/quad.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-ease/src/cubic.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-transition/src/transition/select.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-transition/src/transition/selectAll.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-transition/src/transition/filter.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-transition/src/transition/merge.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-transition/src/transition/transition.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-transition/src/transition/on.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-transition/src/transition/attr.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-transition/src/transition/attrTween.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-transition/src/transition/style.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-transition/src/transition/styleTween.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-transition/src/transition/delay.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-transition/src/transition/duration.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-transition/src/transition/ease.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-ease/src/poly.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-ease/src/sin.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-ease/src/exp.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-ease/src/circle.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-ease/src/bounce.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-ease/src/back.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-ease/src/elastic.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-transition/src/selection/transition.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-transition/src/selection/index.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-transition/src/selection/interrupt.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-transition/src/active.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-brush/src/constant.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-brush/src/event.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-brush/src/noevent.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-brush/src/brush.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-chord/src/math.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-chord/src/chord.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-chord/src/array.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-chord/src/constant.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-path/src/path.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-chord/src/ribbon.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-collection/src/map.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-collection/src/nest.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-collection/src/set.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-collection/src/keys.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-collection/src/values.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-collection/src/entries.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-contour/src/array.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-contour/src/ascending.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-contour/src/area.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-contour/src/constant.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-contour/src/contains.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-contour/src/noop.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-contour/src/contours.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-contour/src/blur.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-contour/src/density.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-dsv/src/dsv.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-dsv/src/csv.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-dsv/src/tsv.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-fetch/src/blob.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-fetch/src/buffer.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-fetch/src/text.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-fetch/src/dsv.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-fetch/src/image.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-fetch/src/json.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-fetch/src/xml.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-force/src/center.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-force/src/constant.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-force/src/jiggle.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-quadtree/src/add.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-quadtree/src/cover.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-quadtree/src/quad.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-quadtree/src/x.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-quadtree/src/y.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-quadtree/src/quadtree.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-force/src/collide.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-quadtree/src/data.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-quadtree/src/extent.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-quadtree/src/find.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-quadtree/src/remove.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-quadtree/src/root.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-quadtree/src/size.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-quadtree/src/visit.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-quadtree/src/visitAfter.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-force/src/link.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-force/src/simulation.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-format/src/formatPrefixAuto.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-force/src/manyBody.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-force/src/radial.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-force/src/x.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-force/src/y.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-format/src/formatDecimal.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-format/src/exponent.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-format/src/formatRounded.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-format/src/formatTypes.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-format/src/formatDefault.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-format/src/formatSpecifier.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-format/src/identity.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-format/src/defaultLocale.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-format/src/locale.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-format/src/formatGroup.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-format/src/formatNumerals.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-format/src/precisionFixed.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-format/src/precisionPrefix.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-format/src/precisionRound.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-geo/src/adder.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-geo/src/math.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-geo/src/noop.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-geo/src/stream.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-geo/src/area.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-geo/src/cartesian.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-geo/src/bounds.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-geo/src/centroid.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-geo/src/constant.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-geo/src/compose.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-geo/src/rotation.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-geo/src/circle.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-geo/src/clip/buffer.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-geo/src/pointEqual.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-geo/src/clip/rejoin.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-geo/src/polygonContains.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-geo/src/clip/index.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-geo/src/clip/antimeridian.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-geo/src/clip/circle.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-geo/src/clip/line.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-geo/src/clip/rectangle.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-geo/src/clip/extent.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-geo/src/length.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-geo/src/distance.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-geo/src/contains.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-geo/src/graticule.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-geo/src/interpolate.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-geo/src/path/area.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-geo/src/identity.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-geo/src/path/bounds.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-geo/src/path/centroid.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-geo/src/path/context.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-geo/src/path/measure.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-geo/src/path/string.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-geo/src/path/index.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-geo/src/transform.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-geo/src/projection/fit.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-geo/src/projection/resample.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-geo/src/projection/index.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-geo/src/projection/conic.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-geo/src/projection/conicEqualArea.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-geo/src/projection/cylindricalEqualArea.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-geo/src/projection/albers.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-geo/src/projection/albersUsa.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-geo/src/projection/azimuthal.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-geo/src/projection/azimuthalEqualArea.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-geo/src/projection/azimuthalEquidistant.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-geo/src/projection/mercator.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-geo/src/projection/conicConformal.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-geo/src/projection/equirectangular.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-geo/src/projection/conicEquidistant.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-geo/src/projection/gnomonic.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-geo/src/projection/identity.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-geo/src/projection/naturalEarth1.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-geo/src/projection/orthographic.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-geo/src/projection/stereographic.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-geo/src/projection/transverseMercator.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-hierarchy/src/cluster.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-hierarchy/src/hierarchy/count.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-hierarchy/src/hierarchy/index.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-hierarchy/src/hierarchy/each.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-hierarchy/src/hierarchy/eachAfter.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-hierarchy/src/hierarchy/eachBefore.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-hierarchy/src/hierarchy/sum.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-hierarchy/src/hierarchy/sort.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-hierarchy/src/hierarchy/path.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-hierarchy/src/hierarchy/ancestors.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-hierarchy/src/hierarchy/descendants.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-hierarchy/src/hierarchy/leaves.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-hierarchy/src/hierarchy/links.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-hierarchy/src/array.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-hierarchy/src/pack/enclose.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-hierarchy/src/pack/siblings.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-hierarchy/src/accessors.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-hierarchy/src/constant.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-hierarchy/src/pack/index.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-hierarchy/src/treemap/round.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-hierarchy/src/treemap/dice.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-hierarchy/src/partition.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-hierarchy/src/stratify.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-hierarchy/src/tree.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-hierarchy/src/treemap/slice.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-hierarchy/src/treemap/squarify.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-hierarchy/src/treemap/index.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-hierarchy/src/treemap/binary.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-hierarchy/src/treemap/sliceDice.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-hierarchy/src/treemap/resquarify.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-polygon/src/area.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-polygon/src/centroid.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-polygon/src/cross.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-polygon/src/hull.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-polygon/src/contains.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-polygon/src/length.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-random/src/defaultSource.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-random/src/uniform.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-random/src/normal.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-random/src/logNormal.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-random/src/irwinHall.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-random/src/bates.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-random/src/exponential.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-scale/src/array.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-scale/src/ordinal.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-scale/src/band.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-scale/src/constant.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-scale/src/number.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-scale/src/continuous.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-scale/src/tickFormat.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-scale/src/linear.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-scale/src/identity.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-scale/src/nice.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-scale/src/log.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-scale/src/pow.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-scale/src/quantile.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-scale/src/quantize.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-scale/src/threshold.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-time/src/interval.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-time/src/millisecond.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-time/src/duration.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-time/src/second.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-time/src/minute.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-time/src/hour.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-time/src/day.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-time/src/week.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-time/src/month.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-time/src/year.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-time/src/utcMinute.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-time/src/utcHour.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-time/src/utcDay.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-time/src/utcWeek.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-time/src/utcMonth.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-time/src/utcYear.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-time-format/src/locale.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-time-format/src/defaultLocale.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-time-format/src/isoFormat.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-time-format/src/isoParse.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-scale/src/time.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-scale/src/utcTime.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-scale/src/sequential.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-scale-chromatic/src/colors.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-scale-chromatic/src/categorical/category10.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-scale-chromatic/src/categorical/Accent.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-scale-chromatic/src/categorical/Dark2.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-scale-chromatic/src/categorical/Paired.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-scale-chromatic/src/categorical/Pastel1.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-scale-chromatic/src/categorical/Pastel2.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-scale-chromatic/src/categorical/Set1.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-scale-chromatic/src/categorical/Set2.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-scale-chromatic/src/categorical/Set3.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-scale-chromatic/src/ramp.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-scale-chromatic/src/diverging/BrBG.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-scale-chromatic/src/diverging/PRGn.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-scale-chromatic/src/diverging/PiYG.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-scale-chromatic/src/diverging/PuOr.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-scale-chromatic/src/diverging/RdBu.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-scale-chromatic/src/diverging/RdGy.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-scale-chromatic/src/diverging/RdYlBu.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-scale-chromatic/src/diverging/RdYlGn.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-scale-chromatic/src/diverging/Spectral.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-scale-chromatic/src/sequential-multi/BuGn.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-scale-chromatic/src/sequential-multi/BuPu.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-scale-chromatic/src/sequential-multi/GnBu.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-scale-chromatic/src/sequential-multi/OrRd.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-scale-chromatic/src/sequential-multi/PuBuGn.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-scale-chromatic/src/sequential-multi/PuBu.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-scale-chromatic/src/sequential-multi/PuRd.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-scale-chromatic/src/sequential-multi/RdPu.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-scale-chromatic/src/sequential-multi/YlGnBu.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-scale-chromatic/src/sequential-multi/YlGn.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-scale-chromatic/src/sequential-multi/YlOrBr.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-scale-chromatic/src/sequential-multi/YlOrRd.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-scale-chromatic/src/sequential-single/Blues.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-scale-chromatic/src/sequential-single/Greens.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-scale-chromatic/src/sequential-single/Greys.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-scale-chromatic/src/sequential-single/Purples.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-scale-chromatic/src/sequential-single/Reds.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-scale-chromatic/src/sequential-single/Oranges.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-scale-chromatic/src/sequential-multi/cubehelix.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-scale-chromatic/src/sequential-multi/rainbow.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-scale-chromatic/src/sequential-multi/viridis.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-shape/src/constant.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-shape/src/math.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-shape/src/arc.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-shape/src/curve/linear.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-shape/src/point.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-shape/src/line.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-shape/src/area.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-shape/src/descending.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-shape/src/identity.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-shape/src/pie.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-shape/src/curve/radial.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-shape/src/lineRadial.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-shape/src/areaRadial.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-shape/src/pointRadial.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-shape/src/array.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-shape/src/link/index.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-shape/src/symbol/circle.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-shape/src/symbol/cross.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-shape/src/symbol/diamond.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-shape/src/symbol/star.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-shape/src/symbol/square.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-shape/src/symbol/triangle.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-shape/src/symbol/wye.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-shape/src/symbol.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-shape/src/noop.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-shape/src/curve/basis.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-shape/src/curve/basisClosed.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-shape/src/curve/basisOpen.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-shape/src/curve/bundle.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-shape/src/curve/cardinal.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-shape/src/curve/cardinalClosed.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-shape/src/curve/cardinalOpen.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-shape/src/curve/catmullRom.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-shape/src/curve/catmullRomClosed.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-shape/src/curve/catmullRomOpen.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-shape/src/curve/linearClosed.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-shape/src/curve/monotone.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-shape/src/curve/natural.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-shape/src/curve/step.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-shape/src/offset/none.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-shape/src/order/none.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-shape/src/stack.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-shape/src/offset/expand.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-shape/src/offset/diverging.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-shape/src/offset/silhouette.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-shape/src/offset/wiggle.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-shape/src/order/ascending.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-shape/src/order/descending.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-shape/src/order/insideOut.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-shape/src/order/reverse.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-voronoi/src/constant.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-voronoi/src/point.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-voronoi/src/RedBlackTree.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-voronoi/src/Edge.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-voronoi/src/Cell.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-voronoi/src/Circle.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-voronoi/src/Beach.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-voronoi/src/Diagram.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-voronoi/src/voronoi.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-zoom/src/constant.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-zoom/src/transform.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-zoom/src/noevent.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-zoom/src/zoom.js\",\"/Users/houda/WebstormProjects/egoNahr/node_modules/d3-zoom/src/event.js\"],\"names\":[\"installedModules\",\"__webpack_require__\",\"moduleId\",\"exports\",\"module\",\"i\",\"l\",\"modules\",\"call\",\"m\",\"c\",\"d\",\"name\",\"getter\",\"o\",\"Object\",\"defineProperty\",\"configurable\",\"enumerable\",\"get\",\"r\",\"value\",\"n\",\"__esModule\",\"object\",\"property\",\"prototype\",\"hasOwnProperty\",\"p\",\"s\",\"_exports\",\"NAME_LABEL\",\"MARRIAGE_LABEL\",\"BAPTISM_LABEL\",\"OFFSPRING_LABEL\",\"Node\",\"id\",\"fullName\",\"firstParent\",\"secondParent\",\"spouse\",\"offSpringList\",\"this\",\"ID\",\"includes\",\"isActor\",\"Tie\",\"source\",\"target\",\"tieType\",\"tieStartYear\",\"tieEndYear\",\"nodeList\",\"tieList\",\"parseJSON\",\"actorJSON\",\"actorFullName\",\"json\",\"element\",\"checkLabelExistence\",\"data\",\"console\",\"log\",\"text\",\"getFullNameFromJSON\",\"firstParentID\",\"parents\",\"firstParentName\",\"thisFirstParent\",\"pushActorToList\",\"getFirstParentFromJSON\",\"secondParentID\",\"secondParentName\",\"thisSecondParent\",\"getSecondParentFromJSON\",\"actorSpouse\",\"spouseID\",\"spouseName\",\"thisSpouse\",\"getSpouseID\",\"rawOffspringArray\",\"offsprings\",\"length\",\"thisChildID\",\"thisChild\",\"thisChildName\",\"push\",\"getOffspringList\",\"centralActor\",\"actor\",\"firstParentToMarriageTie\",\"secondParentToMarriageTie\",\"relativeIDToString\",\"parentsMarriageNode\",\"marriageToCentralActorTie\",\"createParentsUnionNode\",\"actorSpouseID\",\"actorMarriageNode\",\"actorToMarriageTie\",\"spouseToMarriageTie\",\"marriageToOffspringTie\",\"createCentralActorUnionNode\",\"label\",\"search\",\"filter\",\"e\",\"relative\",\"nameKey\",\"myArray\",\"getActorData\",\"getJSON\",\"myActorData\",\"http\",\"XMLHttpRequest\",\"params\",\"open\",\"setRequestHeader\",\"onreadystatechange\",\"readyState\",\"status\",\"JSON\",\"parse\",\"responseText\",\"send\",\"simulation\",\"jsonConversion\",\"d3\",\"svg\",\"select\",\"width\",\"attr\",\"height\",\"scaleOrdinal\",\"schemeCategory20\",\"getCentralActor\",\"thisGrandChild\",\"j\",\"assignOriginParentNodeToChild\",\"originParent\",\"dragstarted\",\"event\",\"active\",\"alphaTarget\",\"restart\",\"fx\",\"x\",\"fy\",\"y\",\"dragged\",\"dragended\",\"nodes\",\"links\",\"graph\",\"forceSimulation\",\"force\",\"forceLink\",\"forceManyBody\",\"strength\",\"forceCenter\",\"link\",\"append\",\"selectAll\",\"enter\",\"node\",\"drag\",\"on\",\"drawGraph\",\"src_ascending\",\"a\",\"b\",\"NaN\",\"bisector\",\"compare\",\"f\",\"left\",\"lo\",\"hi\",\"mid\",\"right\",\"bisect_ascendingBisect\",\"bisect_bisectRight\",\"bisect_bisectLeft\",\"bisect\",\"pairs\",\"array\",\"pair\",\"Array\",\"cross\",\"values0\",\"values1\",\"reduce\",\"i0\",\"i1\",\"value0\",\"n0\",\"n1\",\"values\",\"descending\",\"src_number\",\"variance\",\"valueof\",\"delta\",\"mean\",\"sum\",\"isNaN\",\"deviation\",\"v\",\"Math\",\"sqrt\",\"src_extent\",\"min\",\"max\",\"array_array\",\"slice\",\"map\",\"constant\",\"src_identity\",\"src_range\",\"start\",\"stop\",\"step\",\"arguments\",\"ceil\",\"range\",\"e10\",\"e5\",\"e2\",\"ticks\",\"count\",\"reverse\",\"tickIncrement\",\"isFinite\",\"floor\",\"power\",\"LN10\",\"error\",\"pow\",\"tickStep\",\"step0\",\"abs\",\"step1\",\"sturges\",\"LN2\",\"src_histogram\",\"domain\",\"threshold\",\"histogram\",\"xz\",\"x0\",\"x1\",\"tz\",\"isArray\",\"shift\",\"pop\",\"bin\",\"bins\",\"_\",\"thresholds\",\"src_quantile\",\"freedmanDiaconis\",\"sort\",\"scott\",\"src_max\",\"src_mean\",\"median\",\"numbers\",\"src_merge\",\"arrays\",\"merged\",\"src_min\",\"permute\",\"indexes\",\"permutes\",\"scan\",\"xi\",\"xj\",\"shuffle\",\"t\",\"random\",\"src_sum\",\"src_transpose\",\"matrix\",\"transpose_length\",\"transpose\",\"row\",\"zip\",\"array_slice\",\"d3_axis_src_identity\",\"axis_top\",\"axis_right\",\"axis_bottom\",\"axis_left\",\"axis_epsilon\",\"axis_translateX\",\"axis_translateY\",\"axis_entering\",\"__axis\",\"axis_axis\",\"orient\",\"scale\",\"tickArguments\",\"tickValues\",\"tickFormat\",\"tickSizeInner\",\"tickSizeOuter\",\"tickPadding\",\"k\",\"transform\",\"axis\",\"context\",\"apply\",\"format\",\"spacing\",\"range0\",\"range1\",\"position\",\"bandwidth\",\"offset\",\"round\",\"copy\",\"selection\",\"path\",\"tick\",\"order\",\"tickExit\",\"exit\",\"tickEnter\",\"line\",\"merge\",\"insert\",\"transition\",\"getAttribute\",\"parentNode\",\"remove\",\"each\",\"tickSize\",\"axis_axisTop\",\"axis_axisRight\",\"axis_axisBottom\",\"axis_axisLeft\",\"noop\",\"dispatch\",\"Error\",\"Dispatch\",\"dispatch_get\",\"type\",\"dispatch_set\",\"callback\",\"concat\",\"constructor\",\"typename\",\"types\",\"T\",\"trim\",\"split\",\"indexOf\",\"that\",\"args\",\"src_dispatch\",\"xhtml\",\"namespaces\",\"xlink\",\"xml\",\"xmlns\",\"namespace\",\"prefix\",\"space\",\"local\",\"creator\",\"fullname\",\"ownerDocument\",\"createElementNS\",\"document\",\"uri\",\"namespaceURI\",\"documentElement\",\"createElement\",\"none\",\"src_selector\",\"selector\",\"querySelector\",\"selectorAll_empty\",\"selectorAll\",\"querySelectorAll\",\"matcher\",\"matches\",\"matcher_element\",\"vendorMatches\",\"webkitMatchesSelector\",\"msMatchesSelector\",\"mozMatchesSelector\",\"oMatchesSelector\",\"src_matcher\",\"sparse\",\"update\",\"enter_EnterNode\",\"parent\",\"datum\",\"_next\",\"_parent\",\"__data__\",\"appendChild\",\"child\",\"insertBefore\",\"next\",\"data_keyPrefix\",\"data_bindIndex\",\"group\",\"groupLength\",\"dataLength\",\"data_bindKey\",\"key\",\"keyValue\",\"nodeByKeyValue\",\"keyValues\",\"sort_ascending\",\"src_window\",\"defaultView\",\"style_styleValue\",\"style\",\"getPropertyValue\",\"getComputedStyle\",\"classArray\",\"string\",\"classList\",\"ClassList\",\"_node\",\"_names\",\"classedAdd\",\"names\",\"list\",\"add\",\"classedRemove\",\"setAttribute\",\"join\",\"splice\",\"contains\",\"textRemove\",\"textContent\",\"htmlRemove\",\"innerHTML\",\"raise_raise\",\"nextSibling\",\"lower\",\"previousSibling\",\"firstChild\",\"insert_constantNull\",\"removeChild\",\"selection_cloneShallow\",\"cloneNode\",\"selection_cloneDeep\",\"filterEvents\",\"on_event\",\"mouseenter\",\"mouseleave\",\"filterContextListener\",\"listener\",\"index\",\"contextListener\",\"related\",\"relatedTarget\",\"compareDocumentPosition\",\"event1\",\"event0\",\"onRemove\",\"__on\",\"removeEventListener\",\"capture\",\"onAdd\",\"wrap\",\"addEventListener\",\"customEvent\",\"sourceEvent\",\"dispatch_dispatchEvent\",\"window\",\"CustomEvent\",\"createEvent\",\"initEvent\",\"bubbles\",\"cancelable\",\"detail\",\"dispatchEvent\",\"selection_root\",\"selection_Selection\",\"groups\",\"_groups\",\"_parents\",\"selection_selection\",\"subgroups\",\"subnode\",\"subgroup\",\"match\",\"size\",\"bind\",\"enterGroup\",\"updateGroup\",\"previous\",\"_enter\",\"_exit\",\"groups0\",\"groups1\",\"m0\",\"m1\",\"merges\",\"group0\",\"group1\",\"compareNode\",\"sortgroups\",\"sortgroup\",\"empty\",\"getAttributeNS\",\"removeAttributeNS\",\"removeAttribute\",\"setAttributeNS\",\"priority\",\"removeProperty\",\"setProperty\",\"classed\",\"html\",\"raise\",\"create\",\"before\",\"clone\",\"deep\",\"typenames\",\"on_parseTypenames\",\"src_selection\",\"src_select\",\"src_create\",\"nextId\",\"local_local\",\"Local\",\"toString\",\"set\",\"current\",\"src_point\",\"ownerSVGElement\",\"createSVGPoint\",\"point\",\"clientX\",\"clientY\",\"matrixTransform\",\"getScreenCTM\",\"inverse\",\"rect\",\"getBoundingClientRect\",\"clientLeft\",\"top\",\"clientTop\",\"mouse\",\"changedTouches\",\"src_selectAll\",\"src_touch\",\"touches\",\"identifier\",\"touch\",\"src_touches\",\"points\",\"noevent_nopropagation\",\"stopImmediatePropagation\",\"noevent\",\"preventDefault\",\"nodrag\",\"view\",\"root\",\"__noselect\",\"MozUserSelect\",\"nodrag_yesdrag\",\"noclick\",\"setTimeout\",\"d3_drag_src_constant\",\"DragEvent\",\"subject\",\"dx\",\"dy\",\"drag_defaultFilter\",\"button\",\"drag_defaultContainer\",\"drag_defaultSubject\",\"drag_defaultTouchable\",\"src_drag\",\"mousedownx\",\"mousedowny\",\"mousemoving\",\"touchending\",\"container\",\"touchable\",\"gestures\",\"listeners\",\"clickDistance2\",\"mousedowned\",\"touchstarted\",\"touchmoved\",\"touchended\",\"gesture\",\"beforestart\",\"mousemoved\",\"mouseupped\",\"clearTimeout\",\"sublisteners\",\"p0\",\"clickDistance\",\"define\",\"factory\",\"extend\",\"definition\",\"color_Color\",\"color_reI\",\"color_reN\",\"color_reP\",\"color_reHex3\",\"color_reHex6\",\"color_reRgbInteger\",\"RegExp\",\"color_reRgbPercent\",\"color_reRgbaInteger\",\"color_reRgbaPercent\",\"color_reHslPercent\",\"color_reHslaPercent\",\"color_named\",\"aliceblue\",\"antiquewhite\",\"aqua\",\"aquamarine\",\"azure\",\"beige\",\"bisque\",\"black\",\"blanchedalmond\",\"blue\",\"blueviolet\",\"brown\",\"burlywood\",\"cadetblue\",\"chartreuse\",\"chocolate\",\"coral\",\"cornflowerblue\",\"cornsilk\",\"crimson\",\"cyan\",\"darkblue\",\"darkcyan\",\"darkgoldenrod\",\"darkgray\",\"darkgreen\",\"darkgrey\",\"darkkhaki\",\"darkmagenta\",\"darkolivegreen\",\"darkorange\",\"darkorchid\",\"darkred\",\"darksalmon\",\"darkseagreen\",\"darkslateblue\",\"darkslategray\",\"darkslategrey\",\"darkturquoise\",\"darkviolet\",\"deeppink\",\"deepskyblue\",\"dimgray\",\"dimgrey\",\"dodgerblue\",\"firebrick\",\"floralwhite\",\"forestgreen\",\"fuchsia\",\"gainsboro\",\"ghostwhite\",\"gold\",\"goldenrod\",\"gray\",\"green\",\"greenyellow\",\"grey\",\"honeydew\",\"hotpink\",\"indianred\",\"indigo\",\"ivory\",\"khaki\",\"lavender\",\"lavenderblush\",\"lawngreen\",\"lemonchiffon\",\"lightblue\",\"lightcoral\",\"lightcyan\",\"lightgoldenrodyellow\",\"lightgray\",\"lightgreen\",\"lightgrey\",\"lightpink\",\"lightsalmon\",\"lightseagreen\",\"lightskyblue\",\"lightslategray\",\"lightslategrey\",\"lightsteelblue\",\"lightyellow\",\"lime\",\"limegreen\",\"linen\",\"magenta\",\"maroon\",\"mediumaquamarine\",\"mediumblue\",\"mediumorchid\",\"mediumpurple\",\"mediumseagreen\",\"mediumslateblue\",\"mediumspringgreen\",\"mediumturquoise\",\"mediumvioletred\",\"midnightblue\",\"mintcream\",\"mistyrose\",\"moccasin\",\"navajowhite\",\"navy\",\"oldlace\",\"olive\",\"olivedrab\",\"orange\",\"orangered\",\"orchid\",\"palegoldenrod\",\"palegreen\",\"paleturquoise\",\"palevioletred\",\"papayawhip\",\"peachpuff\",\"peru\",\"pink\",\"plum\",\"powderblue\",\"purple\",\"rebeccapurple\",\"red\",\"rosybrown\",\"royalblue\",\"saddlebrown\",\"salmon\",\"sandybrown\",\"seagreen\",\"seashell\",\"sienna\",\"silver\",\"skyblue\",\"slateblue\",\"slategray\",\"slategrey\",\"snow\",\"springgreen\",\"steelblue\",\"tan\",\"teal\",\"thistle\",\"tomato\",\"turquoise\",\"violet\",\"wheat\",\"white\",\"whitesmoke\",\"yellow\",\"yellowgreen\",\"color_color\",\"toLowerCase\",\"exec\",\"color_Rgb\",\"parseInt\",\"color_rgbn\",\"color_rgba\",\"color_hsla\",\"g\",\"color_rgbConvert\",\"rgb\",\"opacity\",\"color_rgb\",\"h\",\"color_Hsl\",\"color_hsl\",\"color_hslConvert\",\"color_hsl2rgb\",\"m2\",\"displayable\",\"brighter\",\"darker\",\"deg2rad\",\"PI\",\"rad2deg\",\"lab_Xn\",\"lab_Yn\",\"lab_Zn\",\"lab_t0\",\"lab_t1\",\"lab_t2\",\"lab_t3\",\"lab_labConvert\",\"lab_Lab\",\"lab_Hcl\",\"cos\",\"sin\",\"lab_rgb2xyz\",\"lab_xyz2lab\",\"lab_lab\",\"lab_lab2xyz\",\"lab_xyz2rgb\",\"lab_hcl\",\"atan2\",\"lab_hclConvert\",\"z\",\"cubehelix_C\",\"cubehelix_D\",\"cubehelix_E\",\"cubehelix_ED\",\"cubehelix_EB\",\"cubehelix_BC_DA\",\"cubehelix_cubehelix\",\"cubehelix_Cubehelix\",\"bl\",\"cubehelix_cubehelixConvert\",\"basis\",\"t1\",\"v0\",\"v1\",\"v2\",\"v3\",\"t2\",\"t3\",\"cosh\",\"sinh\",\"src_basis\",\"basisClosed\",\"d3_interpolate_src_constant\",\"color_linear\",\"color_hue\",\"color_gamma\",\"color_nogamma\",\"color_exponential\",\"rgbGamma\",\"color\",\"end\",\"gamma\",\"rgb_rgbSpline\",\"spline\",\"colors\",\"rgb_rgbBasis\",\"rgb_rgbBasisClosed\",\"src_array\",\"nb\",\"na\",\"src_value\",\"src_date\",\"Date\",\"setTime\",\"d3_interpolate_src_number\",\"src_object\",\"string_reA\",\"string_reB\",\"parse_cssNode\",\"parse_cssRoot\",\"parse_cssView\",\"parse_svgNode\",\"src_string\",\"am\",\"bm\",\"bs\",\"bi\",\"lastIndex\",\"q\",\"string_one\",\"string_zero\",\"src_rgb\",\"valueOf\",\"src_round\",\"degrees\",\"decompose_identity\",\"translateX\",\"translateY\",\"rotate\",\"skewX\",\"scaleX\",\"scaleY\",\"decompose\",\"atan\",\"transform_interpolateTransform\",\"pxComma\",\"pxParen\",\"degParen\",\"xa\",\"ya\",\"xb\",\"yb\",\"translate\",\"transform_interpolateTransformCss\",\"transform_interpolateTransformSvg\",\"baseVal\",\"consolidate\",\"rho\",\"SQRT2\",\"zoom_cosh\",\"exp\",\"src_zoom\",\"p1\",\"S\",\"ux0\",\"uy0\",\"w0\",\"ux1\",\"uy1\",\"w1\",\"d2\",\"d1\",\"b0\",\"b1\",\"r0\",\"r1\",\"coshr0\",\"u\",\"zoom_sinh\",\"duration\",\"hsl_hsl\",\"hue\",\"src_hsl\",\"hsl_hslLong\",\"src_lab_lab\",\"hcl_hcl\",\"src_hcl\",\"hcl_hclLong\",\"src_cubehelix_cubehelix\",\"cubehelixGamma\",\"cubehelix\",\"taskHead\",\"taskTail\",\"src_cubehelix\",\"cubehelix_cubehelixLong\",\"src_quantize\",\"interpolator\",\"samples\",\"timer_frame\",\"timeout\",\"timer_interval\",\"pokeDelay\",\"clockLast\",\"clockNow\",\"clockSkew\",\"clock\",\"performance\",\"now\",\"setFrame\",\"requestAnimationFrame\",\"clearNow\",\"Timer\",\"_call\",\"_time\",\"timer\",\"delay\",\"time\",\"timerFlush\",\"wake\",\"t0\",\"Infinity\",\"sleep\",\"nap\",\"poke\",\"clearInterval\",\"setInterval\",\"TypeError\",\"src_timeout\",\"elapsed\",\"src_interval\",\"total\",\"schedule_emptyOn\",\"schedule_emptyTween\",\"schedule_CREATED\",\"schedule_SCHEDULED\",\"schedule_STARTING\",\"schedule_STARTED\",\"schedule_RUNNING\",\"schedule_ENDING\",\"schedule_ENDED\",\"transition_schedule\",\"timing\",\"schedules\",\"__transition\",\"self\",\"tween\",\"state\",\"ease\",\"schedule_create\",\"schedule_init\",\"schedule\",\"schedule_get\",\"schedule_set\",\"interrupt\",\"tween_tweenValue\",\"_id\",\"transition_interpolate\",\"transition_selection_Selection\",\"transition_id\",\"transition_Transition\",\"_name\",\"src_transition_transition\",\"transition_newId\",\"transition_selection_prototype\",\"linear_linear\",\"quadIn\",\"quadOut\",\"quadInOut\",\"cubicIn\",\"cubicOut\",\"cubicInOut\",\"children\",\"inherit\",\"id0\",\"id1\",\"on0\",\"on1\",\"sit\",\"every\",\"on_start\",\"on_onFunction\",\"attrTween\",\"interpolate\",\"value00\",\"value10\",\"interpolate0\",\"value1\",\"_value\",\"styleTween\",\"transition_style_styleRemove\",\"style_styleRemoveEnd\",\"transition_style_styleFunction\",\"transition_style_styleConstant\",\"transition_text_textFunction\",\"transition_text_textConstant\",\"tween0\",\"tween1\",\"ease_easeConstant\",\"polyIn\",\"custom\",\"exponent\",\"polyOut\",\"polyInOut\",\"pi\",\"halfPi\",\"sinIn\",\"sinOut\",\"sinInOut\",\"expIn\",\"expOut\",\"expInOut\",\"circleIn\",\"circleOut\",\"circleInOut\",\"bounce_b1\",\"b2\",\"b3\",\"b4\",\"b5\",\"b6\",\"b7\",\"b8\",\"b9\",\"bounce_b0\",\"bounceIn\",\"bounceOut\",\"bounceInOut\",\"backIn\",\"overshoot\",\"backOut\",\"backInOut\",\"tau\",\"elasticIn\",\"asin\",\"amplitude\",\"period\",\"elasticOut\",\"elasticInOut\",\"transition_defaultTiming\",\"transition_inherit\",\"active_root\",\"src_active\",\"d3_brush_src_constant\",\"src_event\",\"src_noevent_nopropagation\",\"src_noevent\",\"brush_MODE_DRAG\",\"brush_MODE_SPACE\",\"brush_MODE_HANDLE\",\"brush_MODE_CENTER\",\"brush_X\",\"handles\",\"brush_type\",\"input\",\"output\",\"xy\",\"brush_Y\",\"brush_XY\",\"brush_cursors\",\"overlay\",\"w\",\"nw\",\"ne\",\"se\",\"sw\",\"brush_flipX\",\"brush_flipY\",\"brush_signsX\",\"brush_signsY\",\"brush_defaultFilter\",\"brush_defaultExtent\",\"brush_local\",\"__brush\",\"brush_empty\",\"extent\",\"brush_brushSelection\",\"dim\",\"brush_brushX\",\"brush_brush\",\"brush_brushY\",\"brush\",\"handleSize\",\"initialize\",\"handle\",\"redraw\",\"started\",\"emitter\",\"Emitter\",\"e0\",\"e1\",\"s0\",\"s1\",\"moving\",\"lockX\",\"lockY\",\"mode\",\"metaKey\",\"altKey\",\"signX\",\"signY\",\"W\",\"N\",\"E\",\"shifting\",\"shiftKey\",\"point0\",\"emit\",\"moved\",\"ended\",\"keyCode\",\"move\",\"point1\",\"selection0\",\"selection1\",\"starting\",\"math_pi\",\"math_halfPi\",\"math_tau\",\"math_max\",\"src_chord\",\"padAngle\",\"sortGroups\",\"sortSubgroups\",\"sortChords\",\"chord\",\"groupSums\",\"groupIndex\",\"subgroupIndex\",\"chords\",\"forEach\",\"di\",\"dj\",\"a0\",\"a1\",\"subindex\",\"startAngle\",\"endAngle\",\"src_array_slice\",\"d3_chord_src_constant\",\"path_pi\",\"path_tau\",\"tauEpsilon\",\"Path\",\"_x0\",\"_y0\",\"_x1\",\"_y1\",\"path_path\",\"moveTo\",\"closePath\",\"lineTo\",\"quadraticCurveTo\",\"y1\",\"bezierCurveTo\",\"x2\",\"y2\",\"arcTo\",\"y0\",\"x21\",\"y21\",\"x01\",\"y01\",\"l01_2\",\"x20\",\"y20\",\"l21_2\",\"l20_2\",\"l21\",\"l01\",\"acos\",\"t01\",\"t21\",\"arc\",\"ccw\",\"cw\",\"da\",\"src_path\",\"ribbon_defaultSource\",\"ribbon_defaultTarget\",\"ribbon_defaultRadius\",\"radius\",\"ribbon_defaultStartAngle\",\"ribbon_defaultEndAngle\",\"src_ribbon\",\"ribbon\",\"buffer\",\"argv\",\"sr\",\"sa0\",\"sa1\",\"sx0\",\"sy0\",\"tr\",\"ta0\",\"ta1\",\"Map\",\"map_map\",\"has\",\"clear\",\"keys\",\"entries\",\"src_map\",\"src_nest\",\"sortValues\",\"rollup\",\"nest\",\"sortKeys\",\"depth\",\"createResult\",\"setResult\",\"valuesByKey\",\"result\",\"nest_createObject\",\"nest_setObject\",\"nest_createMap\",\"nest_setMap\",\"sortKey\",\"set_Set\",\"set_proto\",\"set_set\",\"src_set\",\"src_keys\",\"src_values\",\"src_entries\",\"d3_contour_src_array_slice\",\"d3_contour_src_ascending\",\"src_area\",\"ring\",\"area\",\"d3_contour_src_constant\",\"hole\",\"ringContains\",\"yi\",\"pj\",\"yj\",\"segmentContains\",\"collinear\",\"src_noop\",\"contours_cases\",\"src_contours\",\"smooth\",\"smoothLinear\",\"contours\",\"contour\",\"polygons\",\"holes\",\"fragmentByStart\",\"fragmentByEnd\",\"stitch\",\"startIndex\",\"endIndex\",\"unshift\",\"isorings\",\"polygon\",\"coordinates\",\"xt\",\"yt\",\"_0\",\"_1\",\"blurX\",\"blurY\",\"density_defaultX\",\"density_defaultY\",\"src_density\",\"density\",\"Float32Array\",\"geometry\",\"transformPolygon\",\"transformRing\",\"transformPoint\",\"resize\",\"cellSize\",\"EOL\",\"EOF\",\"QUOTE\",\"NEWLINE\",\"RETURN\",\"objectConverter\",\"columns\",\"Function\",\"stringify\",\"src_dsv\",\"delimiter\",\"reFormat\",\"DELIMITER\",\"charCodeAt\",\"parseRows\",\"rows\",\"I\",\"eof\",\"eol\",\"token\",\"replace\",\"formatRow\",\"formatValue\",\"test\",\"convert\",\"customConverter\",\"columnSet\",\"column\",\"inferColumns\",\"formatRows\",\"csv_csv\",\"csv_csvParse\",\"csv_csvParseRows\",\"csv_csvFormat\",\"csv_csvFormatRows\",\"tsv_tsv\",\"tsv_tsvParse\",\"tsv_tsvParseRows\",\"tsv_tsvFormat\",\"tsv_tsvFormatRows\",\"responseBlob\",\"response\",\"ok\",\"statusText\",\"blob\",\"init\",\"fetch\",\"then\",\"responseArrayBuffer\",\"arrayBuffer\",\"src_buffer\",\"src_text\",\"dsv_dsvParse\",\"undefined\",\"dsv_dsv\",\"dsv_csv\",\"dsv_tsv\",\"src_image\",\"Promise\",\"resolve\",\"reject\",\"image\",\"Image\",\"onerror\",\"onload\",\"src\",\"responseJson\",\"xml_parser\",\"DOMParser\",\"parseFromString\",\"xml_html\",\"xml_svg\",\"src_center\",\"sx\",\"sy\",\"d3_force_src_constant\",\"jiggle\",\"tree\",\"xm\",\"ym\",\"xp\",\"yp\",\"bottom\",\"_root\",\"leaf\",\"_x\",\"_y\",\"src_quad\",\"x_defaultX\",\"y_defaultY\",\"quadtree_quadtree\",\"quadtree_Quadtree\",\"addAll\",\"quadtree_leaf_copy\",\"quadtree_treeProto\",\"collide_x\",\"vx\",\"collide_y\",\"vy\",\"cover\",\"yz\",\"visit\",\"find\",\"x3\",\"y3\",\"quads\",\"retainer\",\"removeAll\",\"visitAfter\",\"collide\",\"radii\",\"iterations\",\"ri\",\"ri2\",\"prepare\",\"quad\",\"rj\",\"link_index\",\"link_find\",\"nodeById\",\"nodeId\",\"strengths\",\"distances\",\"bias\",\"distance\",\"alpha\",\"initializeStrength\",\"initializeDistance\",\"simulation_x\",\"simulation_y\",\"formatPrefixAuto_prefixExponent\",\"simulation_initialRadius\",\"simulation_initialAngle\",\"src_simulation\",\"alphaMin\",\"alphaDecay\",\"velocityDecay\",\"forces\",\"stepper\",\"initializeNodes\",\"angle\",\"initializeForce\",\"closest\",\"distanceMin2\",\"distanceMax2\",\"theta2\",\"accumulate\",\"weight\",\"distanceMin\",\"distanceMax\",\"theta\",\"radial\",\"radiuses\",\"d3_force_src_x\",\"d3_force_src_y\",\"formatDecimal\",\"toExponential\",\"coefficient\",\"src_exponent\",\"formatRounded\",\"formatTypes\",\"\",\"toPrecision\",\"out\",\"%\",\"toFixed\",\"X\",\"toUpperCase\",\"formatSpecifier_re\",\"formatSpecifier_formatSpecifier\",\"specifier\",\"formatSpecifier_FormatSpecifier\",\"fill\",\"align\",\"sign\",\"symbol\",\"zero\",\"comma\",\"precision\",\"defaultLocale_locale\",\"defaultLocale_format\",\"defaultLocale_formatPrefix\",\"d3_format_src_identity\",\"locale_prefixes\",\"src_locale\",\"locale\",\"grouping\",\"thousands\",\"substring\",\"currency\",\"decimal\",\"numerals\",\"formatNumerals\",\"percent\",\"newFormat\",\"suffix\",\"formatType\",\"maybeSuffix\",\"valuePrefix\",\"valueSuffix\",\"valueNegative\",\"padding\",\"formatPrefix\",\"defaultLocale_defaultLocale\",\"precisionFixed\",\"precisionPrefix\",\"precisionRound\",\"adder\",\"Adder\",\"reset\",\"adder_add\",\"temp\",\"bv\",\"av\",\"math_epsilon\",\"src_math_pi\",\"src_math_halfPi\",\"quarterPi\",\"src_math_tau\",\"math_degrees\",\"radians\",\"math_cos\",\"math_log\",\"math_pow\",\"math_sin\",\"math_sign\",\"math_sqrt\",\"haversin\",\"noop_noop\",\"streamGeometry\",\"stream\",\"streamGeometryType\",\"streamObjectType\",\"Feature\",\"FeatureCollection\",\"features\",\"Sphere\",\"sphere\",\"Point\",\"MultiPoint\",\"LineString\",\"streamLine\",\"MultiLineString\",\"Polygon\",\"streamPolygon\",\"MultiPolygon\",\"GeometryCollection\",\"geometries\",\"closed\",\"coordinate\",\"lineStart\",\"lineEnd\",\"polygonStart\",\"polygonEnd\",\"area_lambda00\",\"area_phi00\",\"area_lambda0\",\"area_cosPhi0\",\"area_sinPhi0\",\"src_stream\",\"area_areaRingSum\",\"area_areaSum\",\"area_areaStream\",\"area_areaRingStart\",\"area_areaRingEnd\",\"areaRing\",\"area_areaPointFirst\",\"area_areaPoint\",\"lambda\",\"phi\",\"dLambda\",\"sdLambda\",\"adLambda\",\"cosPhi\",\"sinPhi\",\"d3_geo_src_area\",\"cartesian_spherical\",\"cartesian\",\"cartesian_cartesian\",\"spherical\",\"cartesian_cartesianDot\",\"cartesian_cartesianCross\",\"cartesian_cartesianAddInPlace\",\"cartesian_cartesianScale\",\"vector\",\"cartesian_cartesianNormalizeInPlace\",\"bounds_lambda0\",\"bounds_phi0\",\"bounds_lambda1\",\"bounds_phi1\",\"bounds_lambda2\",\"bounds_lambda00\",\"bounds_phi00\",\"bounds_p0\",\"bounds_ranges\",\"bounds_range\",\"bounds_deltaSum\",\"bounds_boundsStream\",\"bounds_boundsPoint\",\"bounds_boundsLineStart\",\"bounds_boundsLineEnd\",\"bounds_boundsRingPoint\",\"bounds_boundsRingStart\",\"bounds_boundsRingEnd\",\"bounds_linePoint\",\"normal\",\"inflection\",\"phii\",\"lambdai\",\"antimeridian\",\"bounds_angle\",\"lambda0\",\"lambda1\",\"bounds_rangeCompare\",\"bounds_rangeContains\",\"centroid_W0\",\"centroid_W1\",\"centroid_X0\",\"centroid_Y0\",\"centroid_Z0\",\"centroid_X1\",\"centroid_Y1\",\"centroid_Z1\",\"centroid_X2\",\"centroid_Y2\",\"centroid_Z2\",\"centroid_lambda00\",\"centroid_phi00\",\"centroid_x0\",\"centroid_y0\",\"centroid_z0\",\"bounds\",\"feature\",\"deltaMax\",\"centroid_centroidStream\",\"centroid_centroidPoint\",\"centroid_centroidLineStart\",\"centroid_centroidLineEnd\",\"centroid_centroidRingStart\",\"centroid_centroidRingEnd\",\"centroid_centroidPointCartesian\",\"centroid_centroidLinePointFirst\",\"centroid_centroidLinePoint\",\"centroid_centroidRingPointFirst\",\"centroid_centroidRingPoint\",\"cx\",\"cy\",\"cz\",\"d3_geo_src_constant\",\"compose\",\"invert\",\"rotation_rotationIdentity\",\"rotation_rotateRadians\",\"deltaLambda\",\"deltaPhi\",\"deltaGamma\",\"rotation_rotationLambda\",\"rotation_rotationPhiGamma\",\"rotation_forwardRotationLambda\",\"rotation\",\"cosDeltaPhi\",\"sinDeltaPhi\",\"cosDeltaGamma\",\"sinDeltaGamma\",\"src_rotation\",\"forward\",\"circle_circleStream\",\"direction\",\"cosRadius\",\"sinRadius\",\"circle_circleRadius\",\"src_circle\",\"center\",\"circle\",\"clip_buffer\",\"lines\",\"rejoin\",\"pointEqual\",\"rejoin_Intersection\",\"other\",\"entry\",\"segments\",\"compareIntersection\",\"startInside\",\"clip\",\"segment\",\"rejoin_link\",\"isSubject\",\"polygonContains_sum\",\"polygonContains\",\"winding\",\"phi0\",\"sinPhi0\",\"cosPhi0\",\"sinPhi1\",\"cosPhi1\",\"phi1\",\"absDelta\",\"intersection\",\"phiArc\",\"src_clip\",\"pointVisible\",\"clipLine\",\"sink\",\"ringBuffer\",\"ringSink\",\"polygonStarted\",\"pointRing\",\"ringStart\",\"ringEnd\",\"clip_compareIntersection\",\"pointLine\",\"clean\",\"ringSegments\",\"clip_validSegment\",\"sign0\",\"sign1\",\"sinLambda0Lambda1\",\"antimeridian_clipAntimeridianIntersect\",\"from\",\"to\",\"clip_circle\",\"cr\",\"smallRadius\",\"notHemisphere\",\"visible\",\"intersect\",\"two\",\"n2\",\"n2n2\",\"n1n2\",\"determinant\",\"c1\",\"c2\",\"n1xn2\",\"A\",\"uu\",\"polar\",\"q1\",\"code\",\"c0\",\"v00\",\"point2\",\"clip_line\",\"ax\",\"ay\",\"rectangle_clipMax\",\"rectangle_clipMin\",\"rectangle_clipRectangle\",\"corner\",\"comparePoint\",\"ca\",\"cb\",\"x__\",\"y__\",\"v__\",\"x_\",\"y_\",\"v_\",\"first\",\"activeStream\",\"bufferStream\",\"clipStream\",\"linePoint\",\"polygonInside\",\"cleanInside\",\"length_lambda0\",\"length_sinPhi0\",\"length_cosPhi0\",\"clip_extent\",\"cache\",\"cacheStream\",\"length_lengthSum\",\"length_lengthStream\",\"length_lengthPointFirst\",\"length_lengthLineEnd\",\"length_lengthPoint\",\"cosDelta\",\"src_length\",\"distance_coordinates\",\"distance_object\",\"src_distance\",\"contains_containsObjectType\",\"contains_containsGeometry\",\"contains_containsGeometryType\",\"contains_containsPoint\",\"contains_containsLine\",\"contains_containsPolygon\",\"ab\",\"contains_ringRadians\",\"contains_pointRadians\",\"src_contains\",\"graticule_graticuleX\",\"graticule_graticuleY\",\"graticule_graticule\",\"X1\",\"X0\",\"Y1\",\"Y0\",\"Y\",\"DX\",\"DY\",\"graticule\",\"outline\",\"extentMajor\",\"extentMinor\",\"stepMajor\",\"stepMinor\",\"graticule_graticule10\",\"area_x00\",\"area_y00\",\"area_x0\",\"area_y0\",\"src_interpolate\",\"cy0\",\"cy1\",\"sy1\",\"kx0\",\"ky0\",\"kx1\",\"ky1\",\"B\",\"d3_geo_src_identity\",\"path_area_areaSum\",\"path_area_areaRingSum\",\"path_area_areaStream\",\"path_area_areaRingStart\",\"path_area_areaRingEnd\",\"path_area_areaPointFirst\",\"path_area_areaPoint\",\"path_area\",\"bounds_x0\",\"bounds_y0\",\"bounds_x1\",\"bounds_y1\",\"centroid_x00\",\"centroid_y00\",\"path_centroid_x0\",\"path_centroid_y0\",\"path_bounds\",\"path_centroid_X0\",\"path_centroid_Y0\",\"path_centroid_Z0\",\"path_centroid_X1\",\"path_centroid_Y1\",\"path_centroid_Z1\",\"path_centroid_X2\",\"path_centroid_Y2\",\"path_centroid_Z2\",\"path_centroid_centroidStream\",\"path_centroid_centroidPoint\",\"path_centroid_centroidLineStart\",\"path_centroid_centroidLineEnd\",\"path_centroid_centroidRingStart\",\"path_centroid_centroidRingEnd\",\"centroid\",\"centroid_centroidPointFirstLine\",\"centroid_centroidPointLine\",\"centroid_centroidPointFirstRing\",\"centroid_centroidPointRing\",\"path_centroid\",\"context_PathContext\",\"_context\",\"_radius\",\"pointRadius\",\"_line\",\"_point\",\"measure_lengthRing\",\"measure_x00\",\"measure_y00\",\"measure_x0\",\"measure_y0\",\"measure_lengthSum\",\"measure_lengthStream\",\"measure_lengthPointFirst\",\"measure_lengthPoint\",\"measure\",\"PathString\",\"_string\",\"string_circle\",\"_circle\",\"projection\",\"projectionStream\",\"contextStream\",\"src_transform\",\"methods\",\"transformer\",\"TransformStream\",\"fit_fit\",\"fitBounds\",\"clipExtent\",\"fit_fitExtent\",\"fit_fitSize\",\"fit_fitWidth\",\"fit_fitHeight\",\"resample_maxDepth\",\"resample_cosMinDistance\",\"projection_resample\",\"project\",\"delta2\",\"resampleLineTo\",\"phi2\",\"lambda2\",\"dx2\",\"dy2\",\"dz\",\"lambda00\",\"x00\",\"y00\",\"a00\",\"b00\",\"c00\",\"resampleStream\",\"ringPoint\",\"resample_resample\",\"resample_resampleNone\",\"projection_transformRadians\",\"projection_scaleTranslateRotate\",\"cosAlpha\",\"sinAlpha\",\"ai\",\"ci\",\"fi\",\"projection_projection\",\"projection_projectionMutator\",\"projectAt\",\"projectResample\",\"projectTransform\",\"projectRotateTransform\",\"preclip\",\"clip_antimeridian\",\"postclip\",\"recenter\",\"projection_transformRotate\",\"clipAngle\",\"fitExtent\",\"fitSize\",\"fitWidth\",\"fitHeight\",\"conic_conicProjection\",\"parallels\",\"conicEqualArea_conicEqualAreaRaw\",\"cylindricalEqualArea_cylindricalEqualAreaRaw\",\"r0y\",\"conicEqualArea\",\"albers\",\"projection_albersUsa\",\"lower48Point\",\"alaskaPoint\",\"hawaiiPoint\",\"lower48\",\"alaska\",\"hawaii\",\"pointStream\",\"albersUsa\",\"streams\",\"azimuthal_azimuthalRaw\",\"azimuthal_azimuthalInvert\",\"sc\",\"cc\",\"azimuthalEqualArea_azimuthalEqualAreaRaw\",\"cxcy\",\"azimuthalEqualArea\",\"azimuthalEquidistant_azimuthalEquidistantRaw\",\"azimuthalEquidistant\",\"mercator_mercatorRaw\",\"mercator\",\"mercator_mercatorProjection\",\"reclip\",\"conicConformal_tany\",\"conicConformal_conicConformalRaw\",\"conicConformal\",\"equirectangular_equirectangularRaw\",\"equirectangular\",\"conicEquidistant_conicEquidistantRaw\",\"gy\",\"nx\",\"conicEquidistant\",\"gnomonic_gnomonicRaw\",\"gnomonic\",\"identity_scaleTranslate\",\"kx\",\"ky\",\"tx\",\"ty\",\"projection_identity\",\"reflectX\",\"reflectY\",\"naturalEarth1_naturalEarth1Raw\",\"phi4\",\"naturalEarth1\",\"orthographic_orthographicRaw\",\"orthographic\",\"stereographic_stereographicRaw\",\"stereographic\",\"transverseMercator_transverseMercatorRaw\",\"transverseMercator\",\"cluster_defaultSeparation\",\"meanXReduce\",\"maxYReduce\",\"cluster\",\"separation\",\"nodeSize\",\"previousNode\",\"eachAfter\",\"meanX\",\"maxY\",\"leafLeft\",\"leafRight\",\"count_count\",\"hierarchy_hierarchy\",\"childs\",\"hierarchy_Node\",\"valued\",\"hierarchy_defaultChildren\",\"eachBefore\",\"hierarchy_computeHeight\",\"hierarchy_copyData\",\"ancestor\",\"aNodes\",\"ancestors\",\"bNodes\",\"leastCommonAncestor\",\"descendants\",\"leaves\",\"d3_hierarchy_src_array_slice\",\"enclose\",\"circles\",\"array_shuffle\",\"enclose_enclosesWeak\",\"enclose_encloseBasis\",\"enclose_extendBasis\",\"enclose_enclosesWeakAll\",\"enclose_enclosesNot\",\"enclose_encloseBasis2\",\"enclose_encloseBasis3\",\"dr\",\"r2\",\"r21\",\"r3\",\"a2\",\"a3\",\"c3\",\"C\",\"siblings_place\",\"db\",\"dc\",\"siblings_intersects\",\"siblings_score\",\"siblings_Node\",\"siblings_packEnclose\",\"aa\",\"sj\",\"sk\",\"pack\",\"siblings\",\"required\",\"constantZero\",\"d3_hierarchy_src_constant\",\"pack_defaultRadius\",\"src_pack\",\"pack_radiusLeaf\",\"pack_packChildren\",\"pack_translateChild\",\"treemap_round\",\"dice\",\"src_partition\",\"partition\",\"positionNode\",\"stratify_keyPrefix\",\"stratify_preroot\",\"stratify_ambiguous\",\"stratify_defaultId\",\"stratify_defaultParentId\",\"parentId\",\"stratify\",\"nodeKey\",\"nodeByKey\",\"tree_defaultSeparation\",\"tree_nextLeft\",\"tree_nextRight\",\"tree_moveSubtree\",\"wm\",\"wp\",\"change\",\"tree_nextAncestor\",\"vim\",\"tree_TreeNode\",\"src_tree\",\"tree_treeRoot\",\"firstWalk\",\"secondWalk\",\"sizeNode\",\"tree_executeShifts\",\"midpoint\",\"vip\",\"vop\",\"vom\",\"sip\",\"sop\",\"sim\",\"som\",\"apportion\",\"treemap_slice\",\"squarify_phi\",\"squarify_squarifyRatio\",\"ratio\",\"nodeValue\",\"sumValue\",\"minValue\",\"maxValue\",\"newRatio\",\"minRatio\",\"beta\",\"squarify\",\"src_treemap\",\"tile\",\"paddingStack\",\"paddingInner\",\"paddingTop\",\"paddingRight\",\"paddingBottom\",\"paddingLeft\",\"treemap\",\"paddingOuter\",\"binary\",\"sums\",\"valueOffset\",\"valueTarget\",\"valueLeft\",\"valueRight\",\"xk\",\"yk\",\"sliceDice\",\"treemap_resquarify\",\"resquarify\",\"_squarify\",\"d3_polygon_src_area\",\"d3_polygon_src_centroid\",\"src_cross\",\"hull_lexicographicOrder\",\"hull_computeUpperHullIndexes\",\"hull\",\"sortedPoints\",\"flippedPoints\",\"upperIndexes\",\"lowerIndexes\",\"skipLeft\",\"skipRight\",\"d3_polygon_src_contains\",\"inside\",\"d3_polygon_src_length\",\"perimeter\",\"src_defaultSource\",\"uniform\",\"sourceRandomUniform\",\"randomUniform\",\"src_normal\",\"sourceRandomNormal\",\"randomNormal\",\"mu\",\"sigma\",\"logNormal\",\"sourceRandomLogNormal\",\"randomLogNormal\",\"irwinHall\",\"sourceRandomIrwinHall\",\"randomIrwinHall\",\"bates\",\"sourceRandomBates\",\"randomBates\",\"src_exponential\",\"sourceRandomExponential\",\"randomExponential\",\"d3_scale_src_array_array\",\"array_map\",\"d3_scale_src_array_slice\",\"ordinal_implicit\",\"ordinal_ordinal\",\"unknown\",\"band_band\",\"ordinalRange\",\"rescale\",\"rangeRound\",\"band_point\",\"band_pointish\",\"d3_scale_src_constant\",\"d3_scale_src_number\",\"continuous_unit\",\"continuous_deinterpolateLinear\",\"continuous_bimap\",\"deinterpolate\",\"reinterpolate\",\"d0\",\"continuous_polymap\",\"continuous_copy\",\"clamp\",\"continuous_continuous\",\"piecewise\",\"continuous_deinterpolateClamp\",\"continuous_reinterpolateClamp\",\"src_tickFormat\",\"linear_linearish\",\"nice\",\"src_linear_linear\",\"identity_identity\",\"interval\",\"log_deinterpolate\",\"log_reinterpolate\",\"log_pow10\",\"log_powp\",\"base\",\"log_logp\",\"log10\",\"log2\",\"log_reflect\",\"log_log\",\"logs\",\"pows\",\"pow_raise\",\"pow_pow\",\"pow_sqrt\",\"quantile_quantile\",\"invertExtent\",\"quantiles\",\"quantize_quantize\",\"threshold_threshold\",\"interval_t0\",\"interval_t1\",\"newInterval\",\"floori\",\"offseti\",\"field\",\"date\",\"millisecond_millisecond\",\"src_millisecond\",\"millisecond_milliseconds\",\"duration_durationMinute\",\"duration_durationWeek\",\"second_second\",\"getUTCSeconds\",\"second_seconds\",\"minute_minute\",\"getMinutes\",\"minute_minutes\",\"hour_hour\",\"getTimezoneOffset\",\"getHours\",\"src_hour\",\"hour_hours\",\"day_day\",\"setHours\",\"setDate\",\"getDate\",\"src_day\",\"day_days\",\"week_weekday\",\"getDay\",\"week_sunday\",\"week_monday\",\"week_tuesday\",\"week_wednesday\",\"week_thursday\",\"week_friday\",\"week_saturday\",\"week_sundays\",\"week_mondays\",\"week_tuesdays\",\"week_wednesdays\",\"week_thursdays\",\"week_fridays\",\"week_saturdays\",\"month_month\",\"setMonth\",\"getMonth\",\"getFullYear\",\"src_month\",\"month_months\",\"year_year\",\"setFullYear\",\"src_year\",\"year_years\",\"utcMinute_utcMinute\",\"setUTCSeconds\",\"getUTCMinutes\",\"src_utcMinute\",\"utcMinute_utcMinutes\",\"utcHour_utcHour\",\"setUTCMinutes\",\"getUTCHours\",\"src_utcHour\",\"utcHour_utcHours\",\"utcDay_utcDay\",\"setUTCHours\",\"setUTCDate\",\"getUTCDate\",\"utcDay_utcDays\",\"utcWeek_utcWeekday\",\"getUTCDay\",\"utcWeek_utcSunday\",\"utcWeek_utcMonday\",\"utcWeek_utcTuesday\",\"utcWeek_utcWednesday\",\"utcWeek_utcThursday\",\"utcWeek_utcFriday\",\"utcWeek_utcSaturday\",\"utcWeek_utcSundays\",\"utcWeek_utcMondays\",\"utcWeek_utcTuesdays\",\"utcWeek_utcWednesdays\",\"utcWeek_utcThursdays\",\"utcWeek_utcFridays\",\"utcWeek_utcSaturdays\",\"utcMonth_utcMonth\",\"setUTCMonth\",\"getUTCMonth\",\"getUTCFullYear\",\"src_utcMonth\",\"utcMonth_utcMonths\",\"utcYear_utcYear\",\"setUTCFullYear\",\"src_utcYear\",\"utcYear_utcYears\",\"locale_localDate\",\"H\",\"M\",\"L\",\"locale_utcDate\",\"UTC\",\"locale_newYear\",\"locale_formatLocale\",\"locale_dateTime\",\"dateTime\",\"locale_date\",\"locale_time\",\"locale_periods\",\"periods\",\"locale_weekdays\",\"days\",\"locale_shortWeekdays\",\"shortDays\",\"locale_months\",\"months\",\"locale_shortMonths\",\"shortMonths\",\"periodRe\",\"locale_formatRe\",\"periodLookup\",\"locale_formatLookup\",\"weekdayRe\",\"weekdayLookup\",\"shortWeekdayRe\",\"shortWeekdayLookup\",\"monthRe\",\"monthLookup\",\"shortMonthRe\",\"shortMonthLookup\",\"formats\",\"locale_formatDayOfMonth\",\"locale_formatMicroseconds\",\"locale_formatHour24\",\"locale_formatHour12\",\"locale_formatDayOfYear\",\"locale_formatMilliseconds\",\"locale_formatMonthNumber\",\"locale_formatMinutes\",\"Q\",\"locale_formatUnixTimestamp\",\"locale_formatUnixTimestampSeconds\",\"locale_formatSeconds\",\"locale_formatWeekdayNumberMonday\",\"U\",\"locale_formatWeekNumberSunday\",\"V\",\"locale_formatWeekNumberISO\",\"locale_formatWeekdayNumberSunday\",\"locale_formatWeekNumberMonday\",\"locale_formatYear\",\"locale_formatFullYear\",\"Z\",\"locale_formatZone\",\"locale_formatLiteralPercent\",\"utcFormats\",\"locale_formatUTCDayOfMonth\",\"locale_formatUTCMicroseconds\",\"locale_formatUTCHour24\",\"locale_formatUTCHour12\",\"locale_formatUTCDayOfYear\",\"locale_formatUTCMilliseconds\",\"locale_formatUTCMonthNumber\",\"locale_formatUTCMinutes\",\"locale_formatUTCSeconds\",\"locale_formatUTCWeekdayNumberMonday\",\"locale_formatUTCWeekNumberSunday\",\"locale_formatUTCWeekNumberISO\",\"locale_formatUTCWeekdayNumberSunday\",\"locale_formatUTCWeekNumberMonday\",\"locale_formatUTCYear\",\"locale_formatUTCFullYear\",\"locale_formatUTCZone\",\"parses\",\"parseSpecifier\",\"locale_parseDayOfMonth\",\"locale_parseMicroseconds\",\"locale_parseHour24\",\"locale_parseDayOfYear\",\"locale_parseMilliseconds\",\"locale_parseMonthNumber\",\"locale_parseMinutes\",\"locale_parseUnixTimestamp\",\"locale_parseUnixTimestampSeconds\",\"locale_parseSeconds\",\"locale_parseWeekdayNumberMonday\",\"locale_parseWeekNumberSunday\",\"locale_parseWeekNumberISO\",\"locale_parseWeekdayNumberSunday\",\"locale_parseWeekNumberMonday\",\"locale_parseYear\",\"locale_parseFullYear\",\"locale_parseZone\",\"locale_parseLiteralPercent\",\"pad\",\"locale_pads\",\"charAt\",\"newParse\",\"newDate\",\"week\",\"day\",\"src_utcDay\",\"utcFormat\",\"utcParse\",\"src_defaultLocale_locale\",\"defaultLocale_timeFormat\",\"defaultLocale_timeParse\",\"defaultLocale_utcFormat\",\"defaultLocale_utcParse\",\"-\",\"0\",\"locale_numberRe\",\"locale_percentRe\",\"locale_requoteRe\",\"locale_pad\",\"locale_requote\",\"getMilliseconds\",\"getSeconds\",\"getUTCMilliseconds\",\"dow\",\"src_defaultLocale_defaultLocale\",\"isoFormat\",\"toISOString\",\"isoParse\",\"time_durationSecond\",\"time_durationMinute\",\"time_durationHour\",\"time_durationDay\",\"time_durationWeek\",\"time_durationMonth\",\"time_durationYear\",\"time_date\",\"time_number\",\"time_calendar\",\"year\",\"month\",\"hour\",\"minute\",\"second\",\"millisecond\",\"formatMillisecond\",\"formatSecond\",\"formatMinute\",\"formatHour\",\"formatDay\",\"formatWeek\",\"formatMonth\",\"formatYear\",\"tickIntervals\",\"tickInterval\",\"src_time\",\"src_minute\",\"src_second\",\"utcTime\",\"sequential_sequential\",\"src_colors\",\"category10\",\"Accent\",\"Dark2\",\"Paired\",\"Pastel1\",\"Pastel2\",\"Set1\",\"Set2\",\"Set3\",\"src_ramp\",\"scheme\",\"BrBG_scheme\",\"BrBG\",\"PRGn_scheme\",\"PRGn\",\"PiYG_scheme\",\"PiYG\",\"PuOr_scheme\",\"PuOr\",\"RdBu_scheme\",\"RdBu\",\"RdGy_scheme\",\"RdGy\",\"RdYlBu_scheme\",\"RdYlBu\",\"RdYlGn_scheme\",\"RdYlGn\",\"Spectral_scheme\",\"Spectral\",\"BuGn_scheme\",\"BuGn\",\"BuPu_scheme\",\"BuPu\",\"GnBu_scheme\",\"GnBu\",\"OrRd_scheme\",\"OrRd\",\"PuBuGn_scheme\",\"PuBuGn\",\"PuBu_scheme\",\"PuBu\",\"PuRd_scheme\",\"PuRd\",\"RdPu_scheme\",\"RdPu\",\"YlGnBu_scheme\",\"YlGnBu\",\"YlGn_scheme\",\"YlGn\",\"YlOrBr_scheme\",\"YlOrBr\",\"YlOrRd_scheme\",\"YlOrRd\",\"Blues_scheme\",\"Blues\",\"Greens_scheme\",\"Greens\",\"Greys_scheme\",\"Greys\",\"Purples_scheme\",\"Purples\",\"Reds_scheme\",\"Reds\",\"Oranges_scheme\",\"Oranges\",\"sequential_multi_cubehelix\",\"rainbow_warm\",\"rainbow_cool\",\"rainbow_rainbow\",\"sequential_multi_rainbow\",\"ts\",\"viridis_ramp\",\"viridis_magma\",\"viridis_inferno\",\"viridis_plasma\",\"d3_shape_src_constant\",\"math_abs\",\"math_atan2\",\"src_math_cos\",\"src_math_max\",\"math_min\",\"src_math_sin\",\"src_math_sqrt\",\"src_math_epsilon\",\"d3_shape_src_math_pi\",\"d3_shape_src_math_halfPi\",\"d3_shape_src_math_tau\",\"math_asin\",\"arc_arcInnerRadius\",\"innerRadius\",\"arc_arcOuterRadius\",\"outerRadius\",\"arc_arcStartAngle\",\"arc_arcEndAngle\",\"arc_arcPadAngle\",\"arc_cornerTangents\",\"rc\",\"ox\",\"oy\",\"x11\",\"y11\",\"x10\",\"y10\",\"D\",\"cx0\",\"cx1\",\"dx0\",\"dy0\",\"dx1\",\"dy1\",\"src_arc\",\"cornerRadius\",\"padRadius\",\"a01\",\"a11\",\"a10\",\"da0\",\"da1\",\"ap\",\"rp\",\"rc0\",\"rc1\",\"oc\",\"x32\",\"y32\",\"arc_intersect\",\"bx\",\"by\",\"kc\",\"lc\",\"Linear\",\"areaStart\",\"areaEnd\",\"curve_linear\",\"point_x\",\"point_y\",\"defined\",\"curve\",\"defined0\",\"d3_shape_src_area\",\"x0z\",\"y0z\",\"arealine\",\"src_line\",\"lineX0\",\"lineY0\",\"lineY1\",\"lineX1\",\"src_descending\",\"d3_shape_src_identity\",\"src_pie\",\"pie\",\"arcs\",\"pa\",\"radial_curveRadialLinear\",\"radial_curveRadial\",\"radial_Radial\",\"_curve\",\"lineRadial_lineRadial\",\"src_lineRadial\",\"lineStartAngle\",\"lineEndAngle\",\"lineInnerRadius\",\"lineOuterRadius\",\"pointRadial\",\"d3_shape_src_array_slice\",\"link_linkSource\",\"link_linkTarget\",\"link_link\",\"link_curveHorizontal\",\"link_curveVertical\",\"link_curveRadial\",\"p2\",\"p3\",\"link_linkHorizontal\",\"link_linkVertical\",\"link_linkRadial\",\"symbol_circle\",\"draw\",\"symbol_cross\",\"tan30\",\"tan30_2\",\"diamond\",\"star_kr\",\"star_kx\",\"star_ky\",\"star\",\"square\",\"sqrt3\",\"triangle\",\"wye_s\",\"wye_k\",\"wye_a\",\"wye\",\"symbol_symbols\",\"src_symbol\",\"d3_shape_src_noop\",\"basis_point\",\"Basis\",\"curve_basis\",\"basisClosed_BasisClosed\",\"_x2\",\"_x3\",\"_x4\",\"_y2\",\"_y3\",\"_y4\",\"curve_basisClosed\",\"basisOpen_BasisOpen\",\"basisOpen\",\"bundle_Bundle\",\"_basis\",\"_beta\",\"curve_bundle\",\"bundle\",\"cardinal_point\",\"_k\",\"Cardinal\",\"tension\",\"cardinal\",\"cardinalClosed_CardinalClosed\",\"_x5\",\"_y5\",\"cardinalClosed\",\"cardinalOpen_CardinalOpen\",\"cardinalOpen\",\"catmullRom_point\",\"_l01_a\",\"_l01_2a\",\"_l12_a\",\"_l12_2a\",\"_l23_a\",\"_l23_2a\",\"catmullRom_CatmullRom\",\"_alpha\",\"x23\",\"y23\",\"curve_catmullRom\",\"catmullRom\",\"catmullRomClosed_CatmullRomClosed\",\"catmullRomClosed\",\"catmullRomOpen_CatmullRomOpen\",\"catmullRomOpen\",\"linearClosed_LinearClosed\",\"linearClosed\",\"monotone_sign\",\"slope3\",\"h0\",\"h1\",\"slope2\",\"monotone_point\",\"MonotoneX\",\"MonotoneY\",\"ReflectContext\",\"monotoneX\",\"monotoneY\",\"Natural\",\"controlPoints\",\"_t0\",\"px\",\"py\",\"natural\",\"Step\",\"_t\",\"curve_step\",\"stepBefore\",\"stepAfter\",\"offset_none\",\"series\",\"order_none\",\"stack_stackValue\",\"src_stack\",\"stack\",\"oz\",\"kz\",\"sz\",\"sij\",\"ki\",\"si\",\"expand\",\"diverging\",\"yn\",\"silhouette\",\"wiggle\",\"s2\",\"sij0\",\"s3\",\"order_ascending\",\"ascending_sum\",\"order_descending\",\"insideOut\",\"tops\",\"bottoms\",\"order_reverse\",\"d3_voronoi_src_constant\",\"src_point_x\",\"src_point_y\",\"RedBlackTree\",\"RedBlackNode\",\"R\",\"P\",\"RedBlackRotateLeft\",\"RedBlackRotateRight\",\"RedBlackFirst\",\"after\",\"grandpa\",\"uncle\",\"sibling\",\"src_RedBlackTree\",\"Edge_createEdge\",\"edge\",\"Diagram_edges\",\"Edge_setEdgeEnd\",\"Diagram_cells\",\"halfedges\",\"Edge_createBorderEdge\",\"vertex\",\"Edge_clipEdge\",\"Edge_connectEdge\",\"fm\",\"fb\",\"lx\",\"ly\",\"rx\",\"ry\",\"Cell_cellHalfedgeAngle\",\"cell\",\"site\",\"va\",\"vb\",\"Cell_cellHalfedgeStart\",\"Cell_cellHalfedgeEnd\",\"Circle_firstCircle\",\"Circle_circlePool\",\"Circle_attachCircle\",\"lArc\",\"rArc\",\"lSite\",\"cSite\",\"rSite\",\"Diagram_epsilon2\",\"ha\",\"hc\",\"Diagram_circles\",\"Circle_detachCircle\",\"Beach_beachPool\",\"Beach_createBeach\",\"beach\",\"Beach_detachBeach\",\"Diagram_beaches\",\"Beach_removeBeach\",\"disappearing\",\"Diagram_epsilon\",\"iArc\",\"nArcs\",\"Beach_addBeach\",\"dxl\",\"dxr\",\"directrix\",\"Beach_leftBreakPoint\",\"Beach_rightBreakPoint\",\"Cell_createCell\",\"newArc\",\"hb\",\"rfocx\",\"rfocy\",\"pby2\",\"lfocx\",\"lfocy\",\"plby2\",\"hl\",\"aby2\",\"Diagram_lexicographic\",\"Diagram_Diagram\",\"sites\",\"Cell_sortCellHalfedges\",\"Edge_clipEdges\",\"iCell\",\"iHalfedge\",\"nHalfedges\",\"startX\",\"startY\",\"endX\",\"endY\",\"nCells\",\"v01\",\"v11\",\"v10\",\"Cell_clipCells\",\"edges\",\"cells\",\"triangles\",\"_found\",\"src_voronoi\",\"voronoi\",\"d3_zoom_src_constant\",\"Transform\",\"applyX\",\"applyY\",\"location\",\"invertX\",\"invertY\",\"rescaleX\",\"rescaleY\",\"transform_identity\",\"transform_transform\",\"__zoom\",\"d3_zoom_src_noevent_nopropagation\",\"d3_zoom_src_noevent\",\"zoom_defaultFilter\",\"zoom_defaultExtent\",\"SVGElement\",\"clientWidth\",\"clientHeight\",\"zoom_defaultTransform\",\"zoom_defaultWheelDelta\",\"deltaY\",\"deltaMode\",\"zoom_defaultTouchable\",\"zoom_defaultConstrain\",\"translateExtent\",\"d3_zoom_src_zoom\",\"touchstarting\",\"constrain\",\"wheelDelta\",\"scaleExtent\",\"touchDelay\",\"wheelDelay\",\"zoom\",\"wheeled\",\"dblclicked\",\"Gesture\",\"wheel\",\"k1\",\"touch0\",\"touch1\",\"l0\",\"l1\",\"dp\",\"dl\",\"collection\",\"scaleBy\",\"scaleTo\",\"translateBy\",\"translateTo\"],\"mappings\":\"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\",\"sourcesContent\":[\" \\t// The module cache\\n \\tvar installedModules = {};\\n\\n \\t// The require function\\n \\tfunction __webpack_require__(moduleId) {\\n\\n \\t\\t// Check if module is in cache\\n \\t\\tif(installedModules[moduleId]) {\\n \\t\\t\\treturn installedModules[moduleId].exports;\\n \\t\\t}\\n \\t\\t// Create a new module (and put it into the cache)\\n \\t\\tvar module = installedModules[moduleId] = {\\n \\t\\t\\ti: moduleId,\\n \\t\\t\\tl: false,\\n \\t\\t\\texports: {}\\n \\t\\t};\\n\\n \\t\\t// Execute the module function\\n \\t\\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\\n\\n \\t\\t// Flag the module as loaded\\n \\t\\tmodule.l = true;\\n\\n \\t\\t// Return the exports of the module\\n \\t\\treturn module.exports;\\n \\t}\\n\\n\\n \\t// expose the modules object (__webpack_modules__)\\n \\t__webpack_require__.m = modules;\\n\\n \\t// expose the module cache\\n \\t__webpack_require__.c = installedModules;\\n\\n \\t// define getter function for harmony exports\\n \\t__webpack_require__.d = function(exports, name, getter) {\\n \\t\\tif(!__webpack_require__.o(exports, name)) {\\n \\t\\t\\tObject.defineProperty(exports, name, {\\n \\t\\t\\t\\tconfigurable: false,\\n \\t\\t\\t\\tenumerable: true,\\n \\t\\t\\t\\tget: getter\\n \\t\\t\\t});\\n \\t\\t}\\n \\t};\\n\\n \\t// define __esModule on exports\\n \\t__webpack_require__.r = function(exports) {\\n \\t\\tObject.defineProperty(exports, '__esModule', { value: true });\\n \\t};\\n\\n \\t// getDefaultExport function for compatibility with non-harmony modules\\n \\t__webpack_require__.n = function(module) {\\n \\t\\tvar getter = module && module.__esModule ?\\n \\t\\t\\tfunction getDefault() { return module['default']; } :\\n \\t\\t\\tfunction getModuleExports() { return module; };\\n \\t\\t__webpack_require__.d(getter, 'a', getter);\\n \\t\\treturn getter;\\n \\t};\\n\\n \\t// Object.prototype.hasOwnProperty.call\\n \\t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\\n\\n \\t// __webpack_public_path__\\n \\t__webpack_require__.p = \\\"\\\";\\n\\n\\n \\t// Load entry module and return exports\\n \\treturn __webpack_require__(__webpack_require__.s = 1);\\n\",\"\\\"use strict\\\";\\n\\nvar main = require('./main.js');\\n\\nvar _exports = module.exports = {};\\n\\nvar NAME_LABEL = \\\"Name\\\";\\nvar MARRIAGE_LABEL = \\\"Marriage\\\";\\nvar BAPTISM_LABEL = \\\"Baptism\\\";\\nvar FUNERAL_LABEL = \\\"Funeral\\\";\\nvar OFFSPRING_LABEL = \\\"Offspring\\\";\\n\\nvar Node = function Node(id, fullName, firstParent, secondParent, spouse, offSpringList) {\\n    this.ID = \\\"\\\" + id;\\n    this.fullName = fullName;\\n    this.firstParent = firstParent;\\n    this.secondParent = secondParent;\\n    this.offSpringList = offSpringList;\\n    this.spouse = spouse;\\n    if (this.ID.includes(\\\"+\\\")) {\\n        this.isActor = false;\\n    } else this.isActor = true;\\n};\\n\\nvar Tie = function Tie(source, target, tieType, tieStartYear, tieEndYear) {\\n    this.source = source;\\n    this.target = target;\\n    this.tieType = tieType;\\n    this.tieStartYear = tieStartYear;\\n    this.tieEndYear = tieEndYear;\\n};\\n\\nvar nodeList = [];\\nvar tieList = [];\\n\\nfunction getJSON(id) {\\n    var myActorData;\\n    var http = new XMLHttpRequest();\\n    var url = \\\"https://projectcornelia.be/source_browser/public/router.php\\\";\\n    var params = \\\"q=\\\" + id + \\\"&s=ALL-SOURCES&w=search-by-option\\\";\\n\\n    // TODO: now synchronous call. to be fixed\\n    http.open(\\\"POST\\\", url, false);\\n\\n    //Send the proper header information along with the request\\n    http.setRequestHeader(\\\"Content-type\\\", \\\"application/x-www-form-urlencoded\\\");\\n\\n    http.onreadystatechange = function () {\\n        //Call a function when the state changes.\\n        if (http.readyState == 4 && http.status == 200) {\\n            myActorData = JSON.parse(http.responseText);\\n        }\\n    };\\n    http.send(params);\\n    return myActorData;\\n}\\n\\nfunction parseJSON(id, actorJSON) {\\n    var myActorData;\\n\\n    // TODO: convert to date object\\n\\n    var actorFullName = getFullNameFromJSON(actorJSON);\\n    if (!actorFullName) {\\n        return null;\\n    }\\n\\n    var firstParent = getFirstParentFromJSON(actorJSON);\\n    var secondParent = getSecondParentFromJSON(actorJSON);\\n\\n    // var firstGodParent = getFirstGodParentFromJSON(actorJSON);\\n    // var secondGodParent = getSecondGodParentFromJSON(actorJSON);\\n    //\\n    // var actorBaptismDate = getBaptismDate(actorJSON);\\n    // var actorBaptismPlace = getBaptismPlace(actorJSON);\\n    // var actorBaptismSource = getBaptismSource(actorJSON);\\n    //\\n    // var actorFuneralDate = getFuneralDate(actorJSON);\\n\\n    var actorSpouse = getSpouseID(actorJSON);\\n\\n    var offSpringList = getOffspringList(actorJSON);\\n\\n    var centralActor = new Node(id, actorFullName, firstParent, secondParent, actorSpouse, offSpringList);\\n\\n    if (firstParent || secondParent) {\\n        createParentsUnionNode(centralActor);\\n    }\\n\\n    if (offSpringList || actorSpouse) {\\n        createCentralActorUnionNode(centralActor);\\n    }\\n\\n    pushActorToList(centralActor);\\n\\n    return centralActor;\\n}\\n\\nfunction getFullNameFromJSON(json) {\\n    var element = checkLabelExistence(NAME_LABEL, json);\\n    if (!element || !element.data || !element.data[0] || !element.data[0][0]) {\\n        console.log(element);\\n        return null;\\n    }\\n\\n    var fullName = element.data[0][0].text;\\n    if (fullName) {\\n        return fullName;\\n    }\\n}\\n\\nfunction getFirstParentFromJSON(json) {\\n    var element = checkLabelExistence(BAPTISM_LABEL, json);\\n    if (!element) return null;\\n    var firstParentID = element.data.parents.data[0][\\\"query-value\\\"];\\n    var firstParentName = element.data.parents.data[0][\\\"query-text\\\"];\\n    if (firstParentID) {\\n        var thisFirstParent = new Node(firstParentID, firstParentName);\\n        pushActorToList(thisFirstParent);\\n        return thisFirstParent;\\n    }\\n}\\n\\nfunction getSecondParentFromJSON(json) {\\n    var element = checkLabelExistence(BAPTISM_LABEL, json);\\n    if (!element) return null;\\n    var secondParentID = element.data.parents.data[2][\\\"query-value\\\"];\\n    var secondParentName = element.data.parents.data[2][\\\"query-text\\\"];\\n    if (secondParentID) {\\n        var thisSecondParent = new Node(secondParentID, secondParentName);\\n        pushActorToList(thisSecondParent);\\n        return thisSecondParent;\\n    }\\n}\\n\\nfunction getFirstGodParentFromJSON(json) {\\n    var element = checkLabelExistence(BAPTISM_LABEL, json);\\n    if (!element) return null;\\n    var firstGodParentID = element.data.godparents.data[0][\\\"query-text\\\"];\\n    if (firstGodParentID) {\\n        return firstGodParentID;\\n    }\\n}\\n\\nfunction getSecondGodParentFromJSON(json) {\\n    var element = checkLabelExistence(BAPTISM_LABEL, json);\\n    if (!element) return null;\\n    var secondGodParentID = element.data.godparents.data[2][\\\"query-text\\\"];\\n    if (secondGodParentID) {\\n        return secondGodParentID;\\n    }\\n}\\n\\nfunction getBaptismPlace(json) {\\n    var element = checkLabelExistence(BAPTISM_LABEL, json);\\n    if (!element) return null;\\n\\n    var baptismPlace = element.value;\\n    if (baptismPlace) {\\n        return baptismPlace;\\n    }\\n}\\n\\nfunction getBaptismDate(json) {\\n    var element = checkLabelExistence(BAPTISM_LABEL, json);\\n    if (!element) return null;\\n\\n    var baptismDate = element.data.place.data[0].text;\\n    if (baptismDate) {\\n        return baptismDate;\\n    }\\n}\\n\\nfunction getBaptismSource(json) {\\n    var element = checkLabelExistence(BAPTISM_LABEL, json);\\n    if (!element) return null;\\n\\n    var baptismSource = element.data.source.data[0].text;\\n    if (baptismSource) {\\n        return baptismSource;\\n    }\\n}\\n\\nfunction getSpouseID(json) {\\n    var element = checkLabelExistence(MARRIAGE_LABEL, json);\\n    if (!element) return null;\\n    var spouseID = element.data[0].data.spouse.data[0][\\\"query-value\\\"];\\n    var spouseName = element.data[0].data.spouse.data[0][\\\"query-text\\\"];\\n\\n    if (spouseID) {\\n        var thisSpouse = new Node(spouseID, spouseName);\\n        pushActorToList(thisSpouse);\\n        return thisSpouse;\\n    }\\n}\\n\\nfunction getFuneralDate(json) {\\n    var element = checkLabelExistence(FUNERAL_LABEL, json);\\n    if (!element) return null;\\n\\n    var funeralDate = element.value;\\n    if (funeralDate) {\\n        return funeralDate;\\n    }\\n}\\n\\nfunction getOffspringList(json) {\\n    var element = checkLabelExistence(OFFSPRING_LABEL, json);\\n    if (!element) return null;\\n\\n    var rawOffspringArray = element.data.offsprings.data;\\n\\n    if (rawOffspringArray) {\\n        var offSpringNameList = [];\\n        var offSpringList = [];\\n        for (var i = 0; i < rawOffspringArray.length; i++) {\\n            if (rawOffspringArray[i][\\\"query-type\\\"] === \\\"actor\\\") {\\n                var thisChildID = rawOffspringArray[i][\\\"query-value\\\"];\\n                var thisChild = new Node(thisChildID);\\n                if (rawOffspringArray[i + 2][\\\"query-type\\\"] === \\\"year\\\") {\\n                    var thisChildName = rawOffspringArray[i][\\\"query-text\\\"];\\n                    thisChild.fullName = thisChildName;\\n                }\\n                offSpringList.push(thisChild);\\n                pushActorToList(thisChild);\\n            }\\n        }\\n        return offSpringList;\\n    }\\n}\\n\\nfunction getActorData(id) {\\n    var myActorJSON = _exports.getJSON(id);\\n    var myActorObject = parseJSON(id, myActorJSON);\\n\\n    return myActorObject;\\n}\\n\\nfunction checkLabelExistence(label, json) {\\n    var element = _exports.search(label, json);\\n    if (!element || !element.data) {\\n        return null;\\n    } else {\\n        return element;\\n    }\\n}\\n\\nfunction search(nameKey, myArray) {\\n    for (var i = 0; i < myArray.length; i++) {\\n        if (myArray[i].label === nameKey) {\\n            return myArray[i];\\n        }\\n    }\\n    return null;\\n}\\n\\nfunction pushActorToList(actor) {\\n    var isActorInList = nodeList.filter(function (e) {\\n        return e.ID === actor.ID;\\n    });\\n    if (isActorInList.length === 0) {\\n\\n        nodeList.push(actor);\\n    } else {\\n        return;\\n    }\\n}\\n\\nfunction relativeIDToString(relative) {\\n    var relativeID = null;\\n    if (relative) relativeID = relative.ID;else relativeID = \\\"\\\";\\n    return relativeID;\\n}\\n\\nfunction createParentsUnionNode(actor) {\\n    var firstParentToMarriageTie, secondParentToMarriageTie;\\n\\n    var firstParentID = relativeIDToString(actor.firstParent);\\n    var secondParentID = relativeIDToString(actor.secondParent);\\n\\n    var parentsMarriageNode = new Node(firstParentID + \\\"+\\\" + secondParentID);\\n    pushActorToList(parentsMarriageNode);\\n\\n    if (firstParentID.length > 0) {\\n        firstParentToMarriageTie = new Tie(firstParentID, parentsMarriageNode.ID);\\n    }\\n    if (secondParentID.length > 0) {\\n        secondParentToMarriageTie = new Tie(secondParentID, parentsMarriageNode.ID);\\n    }\\n\\n    var marriageToCentralActorTie = new Tie(parentsMarriageNode.ID, actor.ID);\\n\\n    tieList.push(firstParentToMarriageTie, secondParentToMarriageTie, marriageToCentralActorTie);\\n}\\n\\nfunction createCentralActorUnionNode(actor) {\\n\\n    var actorSpouseID = relativeIDToString(actor.spouse);\\n    var actorMarriageNode = new Node(actor.ID + \\\"+\\\" + actorSpouseID);\\n    pushActorToList(actorMarriageNode);\\n    var actorToMarriageTie = new Tie(actor.ID, actorMarriageNode.ID);\\n    tieList.push(actorToMarriageTie);\\n\\n    if (actor.spouse) {\\n        var spouseToMarriageTie = new Tie(actor.spouse.ID, actorMarriageNode.ID);\\n        tieList.push(spouseToMarriageTie);\\n    }\\n\\n    if (actor.offSpringList) {\\n        for (var i = 0; i < actor.offSpringList.length; i++) {\\n            var marriageToOffspringTie = new Tie(actorMarriageNode.ID, actor.offSpringList[i].ID);\\n            tieList.push(marriageToOffspringTie);\\n        }\\n    }\\n}\\n\\n_exports.search = search;\\n_exports.checkLabelExistence = checkLabelExistence;\\n_exports.getActorData = getActorData;\\n_exports.getJSON = getJSON;\\n_exports.Node = Node;\\n_exports.nodeList = nodeList;\\n_exports.tieList = tieList;\\n\\n// export {exports};\\n//# sourceMappingURL=jsonConversion.js.map\",\"\\\"use strict\\\";\\n\\nvar jsonConversion = require('./jsonConversion.js');\\n// var exports = module.exports = {};\\nvar d3 = require(\\\"d3\\\");\\n\\nvar CENTRAL_DEPTH_LEVEL = 0;\\n\\n//  var ActorFinal = function (id, fullName, baptismDate, birthYear, birthPlace, deathYear, gender, occupation, firstAppearance, firstParent, secondParent, spouse, firstGodParent, secondGodParent, offSpringList) {\\n//     this.ID = id;\\n//     this.firstName = firstName;\\n//     this.lastName = lastName;\\n//     this.fullName = fullName;\\n//     this.baptismDate = baptismDate;\\n//     this.birthYear = birthYear;\\n//     this.birthPlace = birthPlace;\\n//     this.deathYear = deathYear;\\n//     this.gender = gender;\\n//     this.occupation = occupation;\\n//     this.firstAppearance = firstAppearance;\\n//     this.firstParent = firstParent;\\n//     this.secondParent = secondParent;\\n//     this.firstGodParent = firstGodParent;\\n//     this.secondGodParent = secondGodParent;\\n//     this.offSpringList = offSpringList;\\n//\\n//     this.spouse = spouse;\\n// };\\n\\n\\nvar simulation;\\nvar svg = d3.select(\\\"svg\\\"),\\n    width = +svg.attr(\\\"width\\\"),\\n    height = +svg.attr(\\\"height\\\");\\n\\nvar color = d3.scaleOrdinal(d3.schemeCategory20);\\n\\nfunction getCentralActor(id) {\\n    var thisChild = {},\\n        thisGrandChild = {};\\n    var centralActor = jsonConversion.getActorData(id);\\n    if (centralActor.offSpringList) {\\n        for (var i = 0; i < centralActor.offSpringList.length; i++) {\\n            thisChild = jsonConversion.getActorData(centralActor.offSpringList[i].ID);\\n\\n            if (thisChild.offSpringList) {\\n                for (var j = 0; j < thisChild.offSpringList.length; j++) {\\n                    thisGrandChild = jsonConversion.getActorData(thisChild.offSpringList[j].ID);\\n                    assignOriginParentNodeToChild(thisGrandChild, thisChild);\\n                    thisChild.offSpringList[j] = thisGrandChild;\\n                }\\n            }\\n            assignOriginParentNodeToChild(thisChild, centralActor);\\n            centralActor.offSpringList[i] = thisChild;\\n        }\\n    }\\n\\n    console.log(centralActor);\\n}\\n\\nfunction assignOriginParentNodeToChild(actor, originParent) {\\n\\n    if (actor.firstParent.ID = originParent.ID) {\\n        actor.firstParent = originParent;\\n    } else if (actor.secondParent.ID = originParent.ID) {\\n        actor.secondParent = originParent;\\n    }\\n}\\n\\nfunction drawGraph(nodes, links) {\\n\\n    var graph = {};\\n    graph[\\\"nodes\\\"] = nodes;\\n    graph[\\\"links\\\"] = links;\\n\\n    simulation = d3.forceSimulation().force(\\\"link\\\", d3.forceLink().id(function (d) {\\n        return \\\"\\\" + d.ID;\\n    })).force(\\\"charge\\\", d3.forceManyBody().strength(-250)).force(\\\"center\\\", d3.forceCenter(width / 2, height / 2));\\n\\n    // graph.nodes.filter(function (d) {\\n    //     if (d.type === \\\"root\\\") {\\n    //         d.fx = 100;\\n    //     }\\n    //     else if (d.type === \\\"leaf\\\") {\\n    //         d.fx = 500;\\n    //     }\\n    //\\n    // });\\n\\n    var link = svg.append(\\\"g\\\").attr(\\\"class\\\", \\\"links\\\").selectAll(\\\"line\\\").data(graph.links).enter().append(\\\"line\\\");\\n\\n    var node = svg.append(\\\"g\\\").attr(\\\"class\\\", \\\"nodes\\\").selectAll(\\\"g\\\").data(graph.nodes).enter().append(\\\"g\\\");\\n\\n    var rectangle = node.append(\\\"rect\\\").attr(\\\"width\\\", function (d) {\\n        if (d.isActor) {\\n            return 60;\\n        } else return 0;\\n    }).attr(\\\"height\\\", 6).attr(\\\"x\\\", -15).attr(\\\"y\\\", -3).attr('fill', 'white').attr('stroke', 'black').call(d3.drag().on(\\\"start\\\", dragstarted).on(\\\"drag\\\", dragged).on(\\\"end\\\", dragended));\\n\\n    var labels = node.append(\\\"text\\\").text(function (d) {\\n        if (d.isActor) return d.fullName;\\n    }).attr('x', -10).attr('y', -10);\\n\\n    simulation.nodes(graph.nodes).on(\\\"tick\\\", ticked);\\n\\n    simulation.force(\\\"link\\\").links(graph.links);\\n\\n    function ticked() {\\n        link.attr(\\\"x1\\\", function (d) {\\n            return d.source.x;\\n        }).attr(\\\"y1\\\", function (d) {\\n            return d.source.y;\\n        }).attr(\\\"x2\\\", function (d) {\\n            return d.target.x;\\n        }).attr(\\\"y2\\\", function (d) {\\n            return d.target.y;\\n        });\\n\\n        node.attr(\\\"transform\\\", function (d) {\\n            return \\\"translate(\\\" + d.x + \\\",\\\" + d.y + \\\")\\\";\\n        });\\n    }\\n}\\n\\nfunction dragstarted(d) {\\n    if (!d3.event.active) simulation.alphaTarget(0.3).restart();\\n    d.fx = d.x;\\n    d.fy = d.y;\\n}\\n\\nfunction dragged(d) {\\n    d.fx = d3.event.x;\\n    d.fy = d3.event.y;\\n}\\n\\nfunction dragended(d) {\\n    if (!d3.event.active) simulation.alphaTarget(0);\\n    d.fx = null;\\n    d.fy = null;\\n}\\n\\nfunction traverseGraph(actor) {\\n    console.log(actor);\\n\\n    if (actor.offSpringList) {\\n        for (var i = 0; i < actor.offSpringList.length; i++) {\\n            getActors(actor.offSpringList[i].ID);\\n            if (actor.offSpringList[i].offSpringList) {\\n                for (var j = 0; j < actor.offSpringList[i].offSpringList[j]; j++) {\\n                    actor.offSpringList[i].offSpringList[j].depth = CENTRAL_DEPTH_LEVEL - 2;\\n                }\\n            }\\n            actor.offSpringList[i].depth = CENTRAL_DEPTH_LEVEL - 1;\\n\\n            // console.log(getActors(actor.offSpringList[i].ID));\\n        }\\n    }\\n    actor.depth = CENTRAL_DEPTH_LEVEL;\\n\\n    if (actor.firstParent) {\\n        // getActors(actor.firstParent.ID);\\n    }\\n}\\n\\nfunction checkNode(a) {\\n\\n    if (a.offSpringList) {\\n        // checkNode(a.offSpringList)\\n    }\\n    a.traversed = true;\\n}\\n\\n// getActors(4);\\n// getActors(42);\\n// getActors(480);\\n\\nvar centralActor = getCentralActor(\\\"490\\\");\\nconsole.log(\\\"printing central actor\\\");\\nconsole.log(centralActor);\\n\\n// traverseGraph(centralActor);\\n\\nconsole.log(jsonConversion.nodeList);\\ndrawGraph(jsonConversion.nodeList, jsonConversion.tieList);\\n\\nexports.getCentralActor = getCentralActor;\\n//# sourceMappingURL=main.js.map\",\"export var name = \\\"d3\\\";\\nexport var version = \\\"5.0.0\\\";\\nexport var description = \\\"Data-Driven Documents\\\";\\nexport var keywords = [\\\"dom\\\",\\\"visualization\\\",\\\"svg\\\",\\\"animation\\\",\\\"canvas\\\"];\\nexport var homepage = \\\"https://d3js.org\\\";\\nexport var license = \\\"BSD-3-Clause\\\";\\nexport var author = {\\\"name\\\":\\\"Mike Bostock\\\",\\\"url\\\":\\\"https://bost.ocks.org/mike\\\"};\\nexport var main = \\\"dist/d3.node.js\\\";\\nexport var unpkg = \\\"dist/d3.min.js\\\";\\nexport var jsdelivr = \\\"dist/d3.min.js\\\";\\nexport var module = \\\"index\\\";\\nexport var repository = {\\\"type\\\":\\\"git\\\",\\\"url\\\":\\\"https://github.com/d3/d3.git\\\"};\\nexport var scripts = {\\\"pretest\\\":\\\"rimraf dist && mkdir dist && json2module package.json > dist/package.js && node rollup.node\\\",\\\"test\\\":\\\"tape 'test/**/*-test.js'\\\",\\\"prepublishOnly\\\":\\\"npm run test && rollup -c --banner \\\\\\\"$(preamble)\\\\\\\" && uglifyjs -b beautify=false,preamble=\\\\\\\"'$(preamble)'\\\\\\\" dist/d3.js -c negate_iife=false -m -o dist/d3.min.js\\\",\\\"postpublish\\\":\\\"git push && git push --tags && cd ../d3.github.com && git pull && cp ../d3/dist/d3.js d3.v5.js && cp ../d3/dist/d3.min.js d3.v5.min.js && git add d3.v5.js d3.v5.min.js && git commit -m \\\\\\\"d3 ${npm_package_version}\\\\\\\" && git push && cd - && cd ../d3-bower && git pull && cp ../d3/LICENSE ../d3/README.md ../d3/dist/d3.js ../d3/dist/d3.min.js . && git add -- LICENSE README.md d3.js d3.min.js && git commit -m \\\\\\\"${npm_package_version}\\\\\\\" && git tag -am \\\\\\\"${npm_package_version}\\\\\\\" v${npm_package_version} && git push && git push --tags && cd - && zip -j dist/d3.zip -- LICENSE README.md API.md CHANGES.md dist/d3.js dist/d3.min.js\\\"};\\nexport var devDependencies = {\\\"json2module\\\":\\\"0.0\\\",\\\"package-preamble\\\":\\\"0.1\\\",\\\"rimraf\\\":\\\"2\\\",\\\"rollup\\\":\\\"0.57\\\",\\\"rollup-plugin-ascii\\\":\\\"0.0\\\",\\\"rollup-plugin-node-resolve\\\":\\\"3\\\",\\\"tape\\\":\\\"4\\\",\\\"uglify-js\\\":\\\"3.2\\\"};\\nexport var dependencies = {\\\"d3-array\\\":\\\"1\\\",\\\"d3-axis\\\":\\\"1\\\",\\\"d3-brush\\\":\\\"1\\\",\\\"d3-chord\\\":\\\"1\\\",\\\"d3-collection\\\":\\\"1\\\",\\\"d3-color\\\":\\\"1\\\",\\\"d3-contour\\\":\\\"1\\\",\\\"d3-dispatch\\\":\\\"1\\\",\\\"d3-drag\\\":\\\"1\\\",\\\"d3-dsv\\\":\\\"1\\\",\\\"d3-ease\\\":\\\"1\\\",\\\"d3-fetch\\\":\\\"1\\\",\\\"d3-force\\\":\\\"1\\\",\\\"d3-format\\\":\\\"1\\\",\\\"d3-geo\\\":\\\"1\\\",\\\"d3-hierarchy\\\":\\\"1\\\",\\\"d3-interpolate\\\":\\\"1\\\",\\\"d3-path\\\":\\\"1\\\",\\\"d3-polygon\\\":\\\"1\\\",\\\"d3-quadtree\\\":\\\"1\\\",\\\"d3-random\\\":\\\"1\\\",\\\"d3-scale\\\":\\\"2\\\",\\\"d3-scale-chromatic\\\":\\\"1\\\",\\\"d3-selection\\\":\\\"1\\\",\\\"d3-shape\\\":\\\"1\\\",\\\"d3-time\\\":\\\"1\\\",\\\"d3-time-format\\\":\\\"2\\\",\\\"d3-timer\\\":\\\"1\\\",\\\"d3-transition\\\":\\\"1\\\",\\\"d3-voronoi\\\":\\\"1\\\",\\\"d3-zoom\\\":\\\"1\\\"};\\n\",\"export default function(a, b) {\\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\\n}\\n\",\"import ascending from \\\"./ascending\\\";\\n\\nexport default function(compare) {\\n  if (compare.length === 1) compare = ascendingComparator(compare);\\n  return {\\n    left: function(a, x, lo, hi) {\\n      if (lo == null) lo = 0;\\n      if (hi == null) hi = a.length;\\n      while (lo < hi) {\\n        var mid = lo + hi >>> 1;\\n        if (compare(a[mid], x) < 0) lo = mid + 1;\\n        else hi = mid;\\n      }\\n      return lo;\\n    },\\n    right: function(a, x, lo, hi) {\\n      if (lo == null) lo = 0;\\n      if (hi == null) hi = a.length;\\n      while (lo < hi) {\\n        var mid = lo + hi >>> 1;\\n        if (compare(a[mid], x) > 0) hi = mid;\\n        else lo = mid + 1;\\n      }\\n      return lo;\\n    }\\n  };\\n}\\n\\nfunction ascendingComparator(f) {\\n  return function(d, x) {\\n    return ascending(f(d), x);\\n  };\\n}\\n\",\"import ascending from \\\"./ascending\\\";\\nimport bisector from \\\"./bisector\\\";\\n\\nvar ascendingBisect = bisector(ascending);\\nexport var bisectRight = ascendingBisect.right;\\nexport var bisectLeft = ascendingBisect.left;\\nexport default bisectRight;\\n\",\"export default function(array, f) {\\n  if (f == null) f = pair;\\n  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\\n  while (i < n) pairs[i] = f(p, p = array[++i]);\\n  return pairs;\\n}\\n\\nexport function pair(a, b) {\\n  return [a, b];\\n}\\n\",\"import {pair} from \\\"./pairs\\\";\\n\\nexport default function(values0, values1, reduce) {\\n  var n0 = values0.length,\\n      n1 = values1.length,\\n      values = new Array(n0 * n1),\\n      i0,\\n      i1,\\n      i,\\n      value0;\\n\\n  if (reduce == null) reduce = pair;\\n\\n  for (i0 = i = 0; i0 < n0; ++i0) {\\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\\n      values[i] = reduce(value0, values1[i1]);\\n    }\\n  }\\n\\n  return values;\\n}\\n\",\"export default function(a, b) {\\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\\n}\\n\",\"export default function(x) {\\n  return x === null ? NaN : +x;\\n}\\n\",\"import number from \\\"./number\\\";\\n\\nexport default function(values, valueof) {\\n  var n = values.length,\\n      m = 0,\\n      i = -1,\\n      mean = 0,\\n      value,\\n      delta,\\n      sum = 0;\\n\\n  if (valueof == null) {\\n    while (++i < n) {\\n      if (!isNaN(value = number(values[i]))) {\\n        delta = value - mean;\\n        mean += delta / ++m;\\n        sum += delta * (value - mean);\\n      }\\n    }\\n  }\\n\\n  else {\\n    while (++i < n) {\\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\\n        delta = value - mean;\\n        mean += delta / ++m;\\n        sum += delta * (value - mean);\\n      }\\n    }\\n  }\\n\\n  if (m > 1) return sum / (m - 1);\\n}\\n\",\"import variance from \\\"./variance\\\";\\n\\nexport default function(array, f) {\\n  var v = variance(array, f);\\n  return v ? Math.sqrt(v) : v;\\n}\\n\",\"export default function(values, valueof) {\\n  var n = values.length,\\n      i = -1,\\n      value,\\n      min,\\n      max;\\n\\n  if (valueof == null) {\\n    while (++i < n) { // Find the first comparable value.\\n      if ((value = values[i]) != null && value >= value) {\\n        min = max = value;\\n        while (++i < n) { // Compare the remaining values.\\n          if ((value = values[i]) != null) {\\n            if (min > value) min = value;\\n            if (max < value) max = value;\\n          }\\n        }\\n      }\\n    }\\n  }\\n\\n  else {\\n    while (++i < n) { // Find the first comparable value.\\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\\n        min = max = value;\\n        while (++i < n) { // Compare the remaining values.\\n          if ((value = valueof(values[i], i, values)) != null) {\\n            if (min > value) min = value;\\n            if (max < value) max = value;\\n          }\\n        }\\n      }\\n    }\\n  }\\n\\n  return [min, max];\\n}\\n\",\"var array = Array.prototype;\\n\\nexport var slice = array.slice;\\nexport var map = array.map;\\n\",\"export default function(x) {\\n  return function() {\\n    return x;\\n  };\\n}\\n\",\"export default function(x) {\\n  return x;\\n}\\n\",\"export default function(start, stop, step) {\\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\\n\\n  var i = -1,\\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\\n      range = new Array(n);\\n\\n  while (++i < n) {\\n    range[i] = start + i * step;\\n  }\\n\\n  return range;\\n}\\n\",\"var e10 = Math.sqrt(50),\\n    e5 = Math.sqrt(10),\\n    e2 = Math.sqrt(2);\\n\\nexport default function(start, stop, count) {\\n  var reverse,\\n      i = -1,\\n      n,\\n      ticks,\\n      step;\\n\\n  stop = +stop, start = +start, count = +count;\\n  if (start === stop && count > 0) return [start];\\n  if (reverse = stop < start) n = start, start = stop, stop = n;\\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\\n\\n  if (step > 0) {\\n    start = Math.ceil(start / step);\\n    stop = Math.floor(stop / step);\\n    ticks = new Array(n = Math.ceil(stop - start + 1));\\n    while (++i < n) ticks[i] = (start + i) * step;\\n  } else {\\n    start = Math.floor(start * step);\\n    stop = Math.ceil(stop * step);\\n    ticks = new Array(n = Math.ceil(start - stop + 1));\\n    while (++i < n) ticks[i] = (start - i) / step;\\n  }\\n\\n  if (reverse) ticks.reverse();\\n\\n  return ticks;\\n}\\n\\nexport function tickIncrement(start, stop, count) {\\n  var step = (stop - start) / Math.max(0, count),\\n      power = Math.floor(Math.log(step) / Math.LN10),\\n      error = step / Math.pow(10, power);\\n  return power >= 0\\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\\n}\\n\\nexport function tickStep(start, stop, count) {\\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\\n      error = step0 / step1;\\n  if (error >= e10) step1 *= 10;\\n  else if (error >= e5) step1 *= 5;\\n  else if (error >= e2) step1 *= 2;\\n  return stop < start ? -step1 : step1;\\n}\\n\",\"export default function(values) {\\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\\n}\\n\",\"import {slice} from \\\"./array\\\";\\nimport bisect from \\\"./bisect\\\";\\nimport constant from \\\"./constant\\\";\\nimport extent from \\\"./extent\\\";\\nimport identity from \\\"./identity\\\";\\nimport range from \\\"./range\\\";\\nimport {tickStep} from \\\"./ticks\\\";\\nimport sturges from \\\"./threshold/sturges\\\";\\n\\nexport default function() {\\n  var value = identity,\\n      domain = extent,\\n      threshold = sturges;\\n\\n  function histogram(data) {\\n    var i,\\n        n = data.length,\\n        x,\\n        values = new Array(n);\\n\\n    for (i = 0; i < n; ++i) {\\n      values[i] = value(data[i], i, data);\\n    }\\n\\n    var xz = domain(values),\\n        x0 = xz[0],\\n        x1 = xz[1],\\n        tz = threshold(values, x0, x1);\\n\\n    // Convert number of thresholds into uniform thresholds.\\n    if (!Array.isArray(tz)) {\\n      tz = tickStep(x0, x1, tz);\\n      tz = range(Math.ceil(x0 / tz) * tz, Math.floor(x1 / tz) * tz, tz); // exclusive\\n    }\\n\\n    // Remove any thresholds outside the domain.\\n    var m = tz.length;\\n    while (tz[0] <= x0) tz.shift(), --m;\\n    while (tz[m - 1] > x1) tz.pop(), --m;\\n\\n    var bins = new Array(m + 1),\\n        bin;\\n\\n    // Initialize bins.\\n    for (i = 0; i <= m; ++i) {\\n      bin = bins[i] = [];\\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\\n      bin.x1 = i < m ? tz[i] : x1;\\n    }\\n\\n    // Assign data to bins by value, ignoring any outside the domain.\\n    for (i = 0; i < n; ++i) {\\n      x = values[i];\\n      if (x0 <= x && x <= x1) {\\n        bins[bisect(tz, x, 0, m)].push(data[i]);\\n      }\\n    }\\n\\n    return bins;\\n  }\\n\\n  histogram.value = function(_) {\\n    return arguments.length ? (value = typeof _ === \\\"function\\\" ? _ : constant(_), histogram) : value;\\n  };\\n\\n  histogram.domain = function(_) {\\n    return arguments.length ? (domain = typeof _ === \\\"function\\\" ? _ : constant([_[0], _[1]]), histogram) : domain;\\n  };\\n\\n  histogram.thresholds = function(_) {\\n    return arguments.length ? (threshold = typeof _ === \\\"function\\\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\\n  };\\n\\n  return histogram;\\n}\\n\",\"import number from \\\"./number\\\";\\n\\nexport default function(values, p, valueof) {\\n  if (valueof == null) valueof = number;\\n  if (!(n = values.length)) return;\\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\\n  var n,\\n      i = (n - 1) * p,\\n      i0 = Math.floor(i),\\n      value0 = +valueof(values[i0], i0, values),\\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\\n  return value0 + (value1 - value0) * (i - i0);\\n}\\n\",\"import {map} from \\\"../array\\\";\\nimport ascending from \\\"../ascending\\\";\\nimport number from \\\"../number\\\";\\nimport quantile from \\\"../quantile\\\";\\n\\nexport default function(values, min, max) {\\n  values = map.call(values, number).sort(ascending);\\n  return Math.ceil((max - min) / (2 * (quantile(values, 0.75) - quantile(values, 0.25)) * Math.pow(values.length, -1 / 3)));\\n}\\n\",\"import deviation from \\\"../deviation\\\";\\n\\nexport default function(values, min, max) {\\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\\n}\\n\",\"export default function(values, valueof) {\\n  var n = values.length,\\n      i = -1,\\n      value,\\n      max;\\n\\n  if (valueof == null) {\\n    while (++i < n) { // Find the first comparable value.\\n      if ((value = values[i]) != null && value >= value) {\\n        max = value;\\n        while (++i < n) { // Compare the remaining values.\\n          if ((value = values[i]) != null && value > max) {\\n            max = value;\\n          }\\n        }\\n      }\\n    }\\n  }\\n\\n  else {\\n    while (++i < n) { // Find the first comparable value.\\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\\n        max = value;\\n        while (++i < n) { // Compare the remaining values.\\n          if ((value = valueof(values[i], i, values)) != null && value > max) {\\n            max = value;\\n          }\\n        }\\n      }\\n    }\\n  }\\n\\n  return max;\\n}\\n\",\"import number from \\\"./number\\\";\\n\\nexport default function(values, valueof) {\\n  var n = values.length,\\n      m = n,\\n      i = -1,\\n      value,\\n      sum = 0;\\n\\n  if (valueof == null) {\\n    while (++i < n) {\\n      if (!isNaN(value = number(values[i]))) sum += value;\\n      else --m;\\n    }\\n  }\\n\\n  else {\\n    while (++i < n) {\\n      if (!isNaN(value = number(valueof(values[i], i, values)))) sum += value;\\n      else --m;\\n    }\\n  }\\n\\n  if (m) return sum / m;\\n}\\n\",\"import ascending from \\\"./ascending\\\";\\nimport number from \\\"./number\\\";\\nimport quantile from \\\"./quantile\\\";\\n\\nexport default function(values, valueof) {\\n  var n = values.length,\\n      i = -1,\\n      value,\\n      numbers = [];\\n\\n  if (valueof == null) {\\n    while (++i < n) {\\n      if (!isNaN(value = number(values[i]))) {\\n        numbers.push(value);\\n      }\\n    }\\n  }\\n\\n  else {\\n    while (++i < n) {\\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\\n        numbers.push(value);\\n      }\\n    }\\n  }\\n\\n  return quantile(numbers.sort(ascending), 0.5);\\n}\\n\",\"export default function(arrays) {\\n  var n = arrays.length,\\n      m,\\n      i = -1,\\n      j = 0,\\n      merged,\\n      array;\\n\\n  while (++i < n) j += arrays[i].length;\\n  merged = new Array(j);\\n\\n  while (--n >= 0) {\\n    array = arrays[n];\\n    m = array.length;\\n    while (--m >= 0) {\\n      merged[--j] = array[m];\\n    }\\n  }\\n\\n  return merged;\\n}\\n\",\"export default function(values, valueof) {\\n  var n = values.length,\\n      i = -1,\\n      value,\\n      min;\\n\\n  if (valueof == null) {\\n    while (++i < n) { // Find the first comparable value.\\n      if ((value = values[i]) != null && value >= value) {\\n        min = value;\\n        while (++i < n) { // Compare the remaining values.\\n          if ((value = values[i]) != null && min > value) {\\n            min = value;\\n          }\\n        }\\n      }\\n    }\\n  }\\n\\n  else {\\n    while (++i < n) { // Find the first comparable value.\\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\\n        min = value;\\n        while (++i < n) { // Compare the remaining values.\\n          if ((value = valueof(values[i], i, values)) != null && min > value) {\\n            min = value;\\n          }\\n        }\\n      }\\n    }\\n  }\\n\\n  return min;\\n}\\n\",\"export default function(array, indexes) {\\n  var i = indexes.length, permutes = new Array(i);\\n  while (i--) permutes[i] = array[indexes[i]];\\n  return permutes;\\n}\\n\",\"import ascending from \\\"./ascending\\\";\\n\\nexport default function(values, compare) {\\n  if (!(n = values.length)) return;\\n  var n,\\n      i = 0,\\n      j = 0,\\n      xi,\\n      xj = values[j];\\n\\n  if (compare == null) compare = ascending;\\n\\n  while (++i < n) {\\n    if (compare(xi = values[i], xj) < 0 || compare(xj, xj) !== 0) {\\n      xj = xi, j = i;\\n    }\\n  }\\n\\n  if (compare(xj, xj) === 0) return j;\\n}\\n\",\"export default function(array, i0, i1) {\\n  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\\n      t,\\n      i;\\n\\n  while (m) {\\n    i = Math.random() * m-- | 0;\\n    t = array[m + i0];\\n    array[m + i0] = array[i + i0];\\n    array[i + i0] = t;\\n  }\\n\\n  return array;\\n}\\n\",\"export default function(values, valueof) {\\n  var n = values.length,\\n      i = -1,\\n      value,\\n      sum = 0;\\n\\n  if (valueof == null) {\\n    while (++i < n) {\\n      if (value = +values[i]) sum += value; // Note: zero and null are equivalent.\\n    }\\n  }\\n\\n  else {\\n    while (++i < n) {\\n      if (value = +valueof(values[i], i, values)) sum += value;\\n    }\\n  }\\n\\n  return sum;\\n}\\n\",\"import min from \\\"./min\\\";\\n\\nexport default function(matrix) {\\n  if (!(n = matrix.length)) return [];\\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\\n      row[j] = matrix[j][i];\\n    }\\n  }\\n  return transpose;\\n}\\n\\nfunction length(d) {\\n  return d.length;\\n}\\n\",\"import transpose from \\\"./transpose\\\";\\n\\nexport default function() {\\n  return transpose(arguments);\\n}\\n\",\"export var slice = Array.prototype.slice;\\n\",\"export default function(x) {\\n  return x;\\n}\\n\",\"import {slice} from \\\"./array\\\";\\nimport identity from \\\"./identity\\\";\\n\\nvar top = 1,\\n    right = 2,\\n    bottom = 3,\\n    left = 4,\\n    epsilon = 1e-6;\\n\\nfunction translateX(x) {\\n  return \\\"translate(\\\" + (x + 0.5) + \\\",0)\\\";\\n}\\n\\nfunction translateY(y) {\\n  return \\\"translate(0,\\\" + (y + 0.5) + \\\")\\\";\\n}\\n\\nfunction number(scale) {\\n  return function(d) {\\n    return +scale(d);\\n  };\\n}\\n\\nfunction center(scale) {\\n  var offset = Math.max(0, scale.bandwidth() - 1) / 2; // Adjust for 0.5px offset.\\n  if (scale.round()) offset = Math.round(offset);\\n  return function(d) {\\n    return +scale(d) + offset;\\n  };\\n}\\n\\nfunction entering() {\\n  return !this.__axis;\\n}\\n\\nfunction axis(orient, scale) {\\n  var tickArguments = [],\\n      tickValues = null,\\n      tickFormat = null,\\n      tickSizeInner = 6,\\n      tickSizeOuter = 6,\\n      tickPadding = 3,\\n      k = orient === top || orient === left ? -1 : 1,\\n      x = orient === left || orient === right ? \\\"x\\\" : \\\"y\\\",\\n      transform = orient === top || orient === bottom ? translateX : translateY;\\n\\n  function axis(context) {\\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity) : tickFormat,\\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\\n        range = scale.range(),\\n        range0 = +range[0] + 0.5,\\n        range1 = +range[range.length - 1] + 0.5,\\n        position = (scale.bandwidth ? center : number)(scale.copy()),\\n        selection = context.selection ? context.selection() : context,\\n        path = selection.selectAll(\\\".domain\\\").data([null]),\\n        tick = selection.selectAll(\\\".tick\\\").data(values, scale).order(),\\n        tickExit = tick.exit(),\\n        tickEnter = tick.enter().append(\\\"g\\\").attr(\\\"class\\\", \\\"tick\\\"),\\n        line = tick.select(\\\"line\\\"),\\n        text = tick.select(\\\"text\\\");\\n\\n    path = path.merge(path.enter().insert(\\\"path\\\", \\\".tick\\\")\\n        .attr(\\\"class\\\", \\\"domain\\\")\\n        .attr(\\\"stroke\\\", \\\"#000\\\"));\\n\\n    tick = tick.merge(tickEnter);\\n\\n    line = line.merge(tickEnter.append(\\\"line\\\")\\n        .attr(\\\"stroke\\\", \\\"#000\\\")\\n        .attr(x + \\\"2\\\", k * tickSizeInner));\\n\\n    text = text.merge(tickEnter.append(\\\"text\\\")\\n        .attr(\\\"fill\\\", \\\"#000\\\")\\n        .attr(x, k * spacing)\\n        .attr(\\\"dy\\\", orient === top ? \\\"0em\\\" : orient === bottom ? \\\"0.71em\\\" : \\\"0.32em\\\"));\\n\\n    if (context !== selection) {\\n      path = path.transition(context);\\n      tick = tick.transition(context);\\n      line = line.transition(context);\\n      text = text.transition(context);\\n\\n      tickExit = tickExit.transition(context)\\n          .attr(\\\"opacity\\\", epsilon)\\n          .attr(\\\"transform\\\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\\\"transform\\\"); });\\n\\n      tickEnter\\n          .attr(\\\"opacity\\\", epsilon)\\n          .attr(\\\"transform\\\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\\n    }\\n\\n    tickExit.remove();\\n\\n    path\\n        .attr(\\\"d\\\", orient === left || orient == right\\n            ? \\\"M\\\" + k * tickSizeOuter + \\\",\\\" + range0 + \\\"H0.5V\\\" + range1 + \\\"H\\\" + k * tickSizeOuter\\n            : \\\"M\\\" + range0 + \\\",\\\" + k * tickSizeOuter + \\\"V0.5H\\\" + range1 + \\\"V\\\" + k * tickSizeOuter);\\n\\n    tick\\n        .attr(\\\"opacity\\\", 1)\\n        .attr(\\\"transform\\\", function(d) { return transform(position(d)); });\\n\\n    line\\n        .attr(x + \\\"2\\\", k * tickSizeInner);\\n\\n    text\\n        .attr(x, k * spacing)\\n        .text(format);\\n\\n    selection.filter(entering)\\n        .attr(\\\"fill\\\", \\\"none\\\")\\n        .attr(\\\"font-size\\\", 10)\\n        .attr(\\\"font-family\\\", \\\"sans-serif\\\")\\n        .attr(\\\"text-anchor\\\", orient === right ? \\\"start\\\" : orient === left ? \\\"end\\\" : \\\"middle\\\");\\n\\n    selection\\n        .each(function() { this.__axis = position; });\\n  }\\n\\n  axis.scale = function(_) {\\n    return arguments.length ? (scale = _, axis) : scale;\\n  };\\n\\n  axis.ticks = function() {\\n    return tickArguments = slice.call(arguments), axis;\\n  };\\n\\n  axis.tickArguments = function(_) {\\n    return arguments.length ? (tickArguments = _ == null ? [] : slice.call(_), axis) : tickArguments.slice();\\n  };\\n\\n  axis.tickValues = function(_) {\\n    return arguments.length ? (tickValues = _ == null ? null : slice.call(_), axis) : tickValues && tickValues.slice();\\n  };\\n\\n  axis.tickFormat = function(_) {\\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\\n  };\\n\\n  axis.tickSize = function(_) {\\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\\n  };\\n\\n  axis.tickSizeInner = function(_) {\\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\\n  };\\n\\n  axis.tickSizeOuter = function(_) {\\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\\n  };\\n\\n  axis.tickPadding = function(_) {\\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\\n  };\\n\\n  return axis;\\n}\\n\\nexport function axisTop(scale) {\\n  return axis(top, scale);\\n}\\n\\nexport function axisRight(scale) {\\n  return axis(right, scale);\\n}\\n\\nexport function axisBottom(scale) {\\n  return axis(bottom, scale);\\n}\\n\\nexport function axisLeft(scale) {\\n  return axis(left, scale);\\n}\\n\",\"var noop = {value: function() {}};\\n\\nfunction dispatch() {\\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\\n    if (!(t = arguments[i] + \\\"\\\") || (t in _)) throw new Error(\\\"illegal type: \\\" + t);\\n    _[t] = [];\\n  }\\n  return new Dispatch(_);\\n}\\n\\nfunction Dispatch(_) {\\n  this._ = _;\\n}\\n\\nfunction parseTypenames(typenames, types) {\\n  return typenames.trim().split(/^|\\\\s+/).map(function(t) {\\n    var name = \\\"\\\", i = t.indexOf(\\\".\\\");\\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\\n    if (t && !types.hasOwnProperty(t)) throw new Error(\\\"unknown type: \\\" + t);\\n    return {type: t, name: name};\\n  });\\n}\\n\\nDispatch.prototype = dispatch.prototype = {\\n  constructor: Dispatch,\\n  on: function(typename, callback) {\\n    var _ = this._,\\n        T = parseTypenames(typename + \\\"\\\", _),\\n        t,\\n        i = -1,\\n        n = T.length;\\n\\n    // If no callback was specified, return the callback of the given type and name.\\n    if (arguments.length < 2) {\\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\\n      return;\\n    }\\n\\n    // If a type was specified, set the callback for the given type and name.\\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\\n    if (callback != null && typeof callback !== \\\"function\\\") throw new Error(\\\"invalid callback: \\\" + callback);\\n    while (++i < n) {\\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\\n    }\\n\\n    return this;\\n  },\\n  copy: function() {\\n    var copy = {}, _ = this._;\\n    for (var t in _) copy[t] = _[t].slice();\\n    return new Dispatch(copy);\\n  },\\n  call: function(type, that) {\\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\\n    if (!this._.hasOwnProperty(type)) throw new Error(\\\"unknown type: \\\" + type);\\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\\n  },\\n  apply: function(type, that, args) {\\n    if (!this._.hasOwnProperty(type)) throw new Error(\\\"unknown type: \\\" + type);\\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\\n  }\\n};\\n\\nfunction get(type, name) {\\n  for (var i = 0, n = type.length, c; i < n; ++i) {\\n    if ((c = type[i]).name === name) {\\n      return c.value;\\n    }\\n  }\\n}\\n\\nfunction set(type, name, callback) {\\n  for (var i = 0, n = type.length; i < n; ++i) {\\n    if (type[i].name === name) {\\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\\n      break;\\n    }\\n  }\\n  if (callback != null) type.push({name: name, value: callback});\\n  return type;\\n}\\n\\nexport default dispatch;\\n\",\"export var xhtml = \\\"http://www.w3.org/1999/xhtml\\\";\\n\\nexport default {\\n  svg: \\\"http://www.w3.org/2000/svg\\\",\\n  xhtml: xhtml,\\n  xlink: \\\"http://www.w3.org/1999/xlink\\\",\\n  xml: \\\"http://www.w3.org/XML/1998/namespace\\\",\\n  xmlns: \\\"http://www.w3.org/2000/xmlns/\\\"\\n};\\n\",\"import namespaces from \\\"./namespaces\\\";\\n\\nexport default function(name) {\\n  var prefix = name += \\\"\\\", i = prefix.indexOf(\\\":\\\");\\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \\\"xmlns\\\") name = name.slice(i + 1);\\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\\n}\\n\",\"import namespace from \\\"./namespace\\\";\\nimport {xhtml} from \\\"./namespaces\\\";\\n\\nfunction creatorInherit(name) {\\n  return function() {\\n    var document = this.ownerDocument,\\n        uri = this.namespaceURI;\\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\\n        ? document.createElement(name)\\n        : document.createElementNS(uri, name);\\n  };\\n}\\n\\nfunction creatorFixed(fullname) {\\n  return function() {\\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\\n  };\\n}\\n\\nexport default function(name) {\\n  var fullname = namespace(name);\\n  return (fullname.local\\n      ? creatorFixed\\n      : creatorInherit)(fullname);\\n}\\n\",\"function none() {}\\n\\nexport default function(selector) {\\n  return selector == null ? none : function() {\\n    return this.querySelector(selector);\\n  };\\n}\\n\",\"function empty() {\\n  return [];\\n}\\n\\nexport default function(selector) {\\n  return selector == null ? empty : function() {\\n    return this.querySelectorAll(selector);\\n  };\\n}\\n\",\"var matcher = function(selector) {\\n  return function() {\\n    return this.matches(selector);\\n  };\\n};\\n\\nif (typeof document !== \\\"undefined\\\") {\\n  var element = document.documentElement;\\n  if (!element.matches) {\\n    var vendorMatches = element.webkitMatchesSelector\\n        || element.msMatchesSelector\\n        || element.mozMatchesSelector\\n        || element.oMatchesSelector;\\n    matcher = function(selector) {\\n      return function() {\\n        return vendorMatches.call(this, selector);\\n      };\\n    };\\n  }\\n}\\n\\nexport default matcher;\\n\",\"export default function(update) {\\n  return new Array(update.length);\\n}\\n\",\"import sparse from \\\"./sparse\\\";\\nimport {Selection} from \\\"./index\\\";\\n\\nexport default function() {\\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\\n}\\n\\nexport function EnterNode(parent, datum) {\\n  this.ownerDocument = parent.ownerDocument;\\n  this.namespaceURI = parent.namespaceURI;\\n  this._next = null;\\n  this._parent = parent;\\n  this.__data__ = datum;\\n}\\n\\nEnterNode.prototype = {\\n  constructor: EnterNode,\\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\\n};\\n\",\"export default function(x) {\\n  return function() {\\n    return x;\\n  };\\n}\\n\",\"import {Selection} from \\\"./index\\\";\\nimport {EnterNode} from \\\"./enter\\\";\\nimport constant from \\\"../constant\\\";\\n\\nvar keyPrefix = \\\"$\\\"; // Protect against keys like “__proto__”.\\n\\nfunction bindIndex(parent, group, enter, update, exit, data) {\\n  var i = 0,\\n      node,\\n      groupLength = group.length,\\n      dataLength = data.length;\\n\\n  // Put any non-null nodes that fit into update.\\n  // Put any null nodes into enter.\\n  // Put any remaining data into enter.\\n  for (; i < dataLength; ++i) {\\n    if (node = group[i]) {\\n      node.__data__ = data[i];\\n      update[i] = node;\\n    } else {\\n      enter[i] = new EnterNode(parent, data[i]);\\n    }\\n  }\\n\\n  // Put any non-null nodes that don’t fit into exit.\\n  for (; i < groupLength; ++i) {\\n    if (node = group[i]) {\\n      exit[i] = node;\\n    }\\n  }\\n}\\n\\nfunction bindKey(parent, group, enter, update, exit, data, key) {\\n  var i,\\n      node,\\n      nodeByKeyValue = {},\\n      groupLength = group.length,\\n      dataLength = data.length,\\n      keyValues = new Array(groupLength),\\n      keyValue;\\n\\n  // Compute the key for each node.\\n  // If multiple nodes have the same key, the duplicates are added to exit.\\n  for (i = 0; i < groupLength; ++i) {\\n    if (node = group[i]) {\\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\\n      if (keyValue in nodeByKeyValue) {\\n        exit[i] = node;\\n      } else {\\n        nodeByKeyValue[keyValue] = node;\\n      }\\n    }\\n  }\\n\\n  // Compute the key for each datum.\\n  // If there a node associated with this key, join and add it to update.\\n  // If there is not (or the key is a duplicate), add it to enter.\\n  for (i = 0; i < dataLength; ++i) {\\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\\n    if (node = nodeByKeyValue[keyValue]) {\\n      update[i] = node;\\n      node.__data__ = data[i];\\n      nodeByKeyValue[keyValue] = null;\\n    } else {\\n      enter[i] = new EnterNode(parent, data[i]);\\n    }\\n  }\\n\\n  // Add any remaining nodes that were not bound to data to exit.\\n  for (i = 0; i < groupLength; ++i) {\\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\\n      exit[i] = node;\\n    }\\n  }\\n}\\n\\nexport default function(value, key) {\\n  if (!value) {\\n    data = new Array(this.size()), j = -1;\\n    this.each(function(d) { data[++j] = d; });\\n    return data;\\n  }\\n\\n  var bind = key ? bindKey : bindIndex,\\n      parents = this._parents,\\n      groups = this._groups;\\n\\n  if (typeof value !== \\\"function\\\") value = constant(value);\\n\\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\\n    var parent = parents[j],\\n        group = groups[j],\\n        groupLength = group.length,\\n        data = value.call(parent, parent && parent.__data__, j, parents),\\n        dataLength = data.length,\\n        enterGroup = enter[j] = new Array(dataLength),\\n        updateGroup = update[j] = new Array(dataLength),\\n        exitGroup = exit[j] = new Array(groupLength);\\n\\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\\n\\n    // Now connect the enter nodes to their following update node, such that\\n    // appendChild can insert the materialized enter node before this node,\\n    // rather than at the end of the parent node.\\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\\n      if (previous = enterGroup[i0]) {\\n        if (i0 >= i1) i1 = i0 + 1;\\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\\n        previous._next = next || null;\\n      }\\n    }\\n  }\\n\\n  update = new Selection(update, parents);\\n  update._enter = enter;\\n  update._exit = exit;\\n  return update;\\n}\\n\",\"import {Selection} from \\\"./index\\\";\\n\\nexport default function(compare) {\\n  if (!compare) compare = ascending;\\n\\n  function compareNode(a, b) {\\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\\n  }\\n\\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\\n      if (node = group[i]) {\\n        sortgroup[i] = node;\\n      }\\n    }\\n    sortgroup.sort(compareNode);\\n  }\\n\\n  return new Selection(sortgroups, this._parents).order();\\n}\\n\\nfunction ascending(a, b) {\\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\\n}\\n\",\"import namespace from \\\"../namespace\\\";\\n\\nfunction attrRemove(name) {\\n  return function() {\\n    this.removeAttribute(name);\\n  };\\n}\\n\\nfunction attrRemoveNS(fullname) {\\n  return function() {\\n    this.removeAttributeNS(fullname.space, fullname.local);\\n  };\\n}\\n\\nfunction attrConstant(name, value) {\\n  return function() {\\n    this.setAttribute(name, value);\\n  };\\n}\\n\\nfunction attrConstantNS(fullname, value) {\\n  return function() {\\n    this.setAttributeNS(fullname.space, fullname.local, value);\\n  };\\n}\\n\\nfunction attrFunction(name, value) {\\n  return function() {\\n    var v = value.apply(this, arguments);\\n    if (v == null) this.removeAttribute(name);\\n    else this.setAttribute(name, v);\\n  };\\n}\\n\\nfunction attrFunctionNS(fullname, value) {\\n  return function() {\\n    var v = value.apply(this, arguments);\\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\\n    else this.setAttributeNS(fullname.space, fullname.local, v);\\n  };\\n}\\n\\nexport default function(name, value) {\\n  var fullname = namespace(name);\\n\\n  if (arguments.length < 2) {\\n    var node = this.node();\\n    return fullname.local\\n        ? node.getAttributeNS(fullname.space, fullname.local)\\n        : node.getAttribute(fullname);\\n  }\\n\\n  return this.each((value == null\\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \\\"function\\\"\\n      ? (fullname.local ? attrFunctionNS : attrFunction)\\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\\n}\\n\",\"export default function(node) {\\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\\n      || (node.document && node) // node is a Window\\n      || node.defaultView; // node is a Document\\n}\\n\",\"import defaultView from \\\"../window\\\";\\n\\nfunction styleRemove(name) {\\n  return function() {\\n    this.style.removeProperty(name);\\n  };\\n}\\n\\nfunction styleConstant(name, value, priority) {\\n  return function() {\\n    this.style.setProperty(name, value, priority);\\n  };\\n}\\n\\nfunction styleFunction(name, value, priority) {\\n  return function() {\\n    var v = value.apply(this, arguments);\\n    if (v == null) this.style.removeProperty(name);\\n    else this.style.setProperty(name, v, priority);\\n  };\\n}\\n\\nexport default function(name, value, priority) {\\n  return arguments.length > 1\\n      ? this.each((value == null\\n            ? styleRemove : typeof value === \\\"function\\\"\\n            ? styleFunction\\n            : styleConstant)(name, value, priority == null ? \\\"\\\" : priority))\\n      : styleValue(this.node(), name);\\n}\\n\\nexport function styleValue(node, name) {\\n  return node.style.getPropertyValue(name)\\n      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\\n}\\n\",\"function classArray(string) {\\n  return string.trim().split(/^|\\\\s+/);\\n}\\n\\nfunction classList(node) {\\n  return node.classList || new ClassList(node);\\n}\\n\\nfunction ClassList(node) {\\n  this._node = node;\\n  this._names = classArray(node.getAttribute(\\\"class\\\") || \\\"\\\");\\n}\\n\\nClassList.prototype = {\\n  add: function(name) {\\n    var i = this._names.indexOf(name);\\n    if (i < 0) {\\n      this._names.push(name);\\n      this._node.setAttribute(\\\"class\\\", this._names.join(\\\" \\\"));\\n    }\\n  },\\n  remove: function(name) {\\n    var i = this._names.indexOf(name);\\n    if (i >= 0) {\\n      this._names.splice(i, 1);\\n      this._node.setAttribute(\\\"class\\\", this._names.join(\\\" \\\"));\\n    }\\n  },\\n  contains: function(name) {\\n    return this._names.indexOf(name) >= 0;\\n  }\\n};\\n\\nfunction classedAdd(node, names) {\\n  var list = classList(node), i = -1, n = names.length;\\n  while (++i < n) list.add(names[i]);\\n}\\n\\nfunction classedRemove(node, names) {\\n  var list = classList(node), i = -1, n = names.length;\\n  while (++i < n) list.remove(names[i]);\\n}\\n\\nfunction classedTrue(names) {\\n  return function() {\\n    classedAdd(this, names);\\n  };\\n}\\n\\nfunction classedFalse(names) {\\n  return function() {\\n    classedRemove(this, names);\\n  };\\n}\\n\\nfunction classedFunction(names, value) {\\n  return function() {\\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\\n  };\\n}\\n\\nexport default function(name, value) {\\n  var names = classArray(name + \\\"\\\");\\n\\n  if (arguments.length < 2) {\\n    var list = classList(this.node()), i = -1, n = names.length;\\n    while (++i < n) if (!list.contains(names[i])) return false;\\n    return true;\\n  }\\n\\n  return this.each((typeof value === \\\"function\\\"\\n      ? classedFunction : value\\n      ? classedTrue\\n      : classedFalse)(names, value));\\n}\\n\",\"function textRemove() {\\n  this.textContent = \\\"\\\";\\n}\\n\\nfunction textConstant(value) {\\n  return function() {\\n    this.textContent = value;\\n  };\\n}\\n\\nfunction textFunction(value) {\\n  return function() {\\n    var v = value.apply(this, arguments);\\n    this.textContent = v == null ? \\\"\\\" : v;\\n  };\\n}\\n\\nexport default function(value) {\\n  return arguments.length\\n      ? this.each(value == null\\n          ? textRemove : (typeof value === \\\"function\\\"\\n          ? textFunction\\n          : textConstant)(value))\\n      : this.node().textContent;\\n}\\n\",\"function htmlRemove() {\\n  this.innerHTML = \\\"\\\";\\n}\\n\\nfunction htmlConstant(value) {\\n  return function() {\\n    this.innerHTML = value;\\n  };\\n}\\n\\nfunction htmlFunction(value) {\\n  return function() {\\n    var v = value.apply(this, arguments);\\n    this.innerHTML = v == null ? \\\"\\\" : v;\\n  };\\n}\\n\\nexport default function(value) {\\n  return arguments.length\\n      ? this.each(value == null\\n          ? htmlRemove : (typeof value === \\\"function\\\"\\n          ? htmlFunction\\n          : htmlConstant)(value))\\n      : this.node().innerHTML;\\n}\\n\",\"function raise() {\\n  if (this.nextSibling) this.parentNode.appendChild(this);\\n}\\n\\nexport default function() {\\n  return this.each(raise);\\n}\\n\",\"function lower() {\\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\\n}\\n\\nexport default function() {\\n  return this.each(lower);\\n}\\n\",\"import creator from \\\"../creator\\\";\\nimport selector from \\\"../selector\\\";\\n\\nfunction constantNull() {\\n  return null;\\n}\\n\\nexport default function(name, before) {\\n  var create = typeof name === \\\"function\\\" ? name : creator(name),\\n      select = before == null ? constantNull : typeof before === \\\"function\\\" ? before : selector(before);\\n  return this.select(function() {\\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\\n  });\\n}\\n\",\"function remove() {\\n  var parent = this.parentNode;\\n  if (parent) parent.removeChild(this);\\n}\\n\\nexport default function() {\\n  return this.each(remove);\\n}\\n\",\"function selection_cloneShallow() {\\n  return this.parentNode.insertBefore(this.cloneNode(false), this.nextSibling);\\n}\\n\\nfunction selection_cloneDeep() {\\n  return this.parentNode.insertBefore(this.cloneNode(true), this.nextSibling);\\n}\\n\\nexport default function(deep) {\\n  return this.select(deep ? selection_cloneDeep : selection_cloneShallow);\\n}\\n\",\"var filterEvents = {};\\n\\nexport var event = null;\\n\\nif (typeof document !== \\\"undefined\\\") {\\n  var element = document.documentElement;\\n  if (!(\\\"onmouseenter\\\" in element)) {\\n    filterEvents = {mouseenter: \\\"mouseover\\\", mouseleave: \\\"mouseout\\\"};\\n  }\\n}\\n\\nfunction filterContextListener(listener, index, group) {\\n  listener = contextListener(listener, index, group);\\n  return function(event) {\\n    var related = event.relatedTarget;\\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\\n      listener.call(this, event);\\n    }\\n  };\\n}\\n\\nfunction contextListener(listener, index, group) {\\n  return function(event1) {\\n    var event0 = event; // Events can be reentrant (e.g., focus).\\n    event = event1;\\n    try {\\n      listener.call(this, this.__data__, index, group);\\n    } finally {\\n      event = event0;\\n    }\\n  };\\n}\\n\\nfunction parseTypenames(typenames) {\\n  return typenames.trim().split(/^|\\\\s+/).map(function(t) {\\n    var name = \\\"\\\", i = t.indexOf(\\\".\\\");\\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\\n    return {type: t, name: name};\\n  });\\n}\\n\\nfunction onRemove(typename) {\\n  return function() {\\n    var on = this.__on;\\n    if (!on) return;\\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\\n        this.removeEventListener(o.type, o.listener, o.capture);\\n      } else {\\n        on[++i] = o;\\n      }\\n    }\\n    if (++i) on.length = i;\\n    else delete this.__on;\\n  };\\n}\\n\\nfunction onAdd(typename, value, capture) {\\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\\n  return function(d, i, group) {\\n    var on = this.__on, o, listener = wrap(value, i, group);\\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\\n        this.removeEventListener(o.type, o.listener, o.capture);\\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\\n        o.value = value;\\n        return;\\n      }\\n    }\\n    this.addEventListener(typename.type, listener, capture);\\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\\n    if (!on) this.__on = [o];\\n    else on.push(o);\\n  };\\n}\\n\\nexport default function(typename, value, capture) {\\n  var typenames = parseTypenames(typename + \\\"\\\"), i, n = typenames.length, t;\\n\\n  if (arguments.length < 2) {\\n    var on = this.node().__on;\\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\\n      for (i = 0, o = on[j]; i < n; ++i) {\\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\\n          return o.value;\\n        }\\n      }\\n    }\\n    return;\\n  }\\n\\n  on = value ? onAdd : onRemove;\\n  if (capture == null) capture = false;\\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\\n  return this;\\n}\\n\\nexport function customEvent(event1, listener, that, args) {\\n  var event0 = event;\\n  event1.sourceEvent = event;\\n  event = event1;\\n  try {\\n    return listener.apply(that, args);\\n  } finally {\\n    event = event0;\\n  }\\n}\\n\",\"import defaultView from \\\"../window\\\";\\n\\nfunction dispatchEvent(node, type, params) {\\n  var window = defaultView(node),\\n      event = window.CustomEvent;\\n\\n  if (typeof event === \\\"function\\\") {\\n    event = new event(type, params);\\n  } else {\\n    event = window.document.createEvent(\\\"Event\\\");\\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\\n    else event.initEvent(type, false, false);\\n  }\\n\\n  node.dispatchEvent(event);\\n}\\n\\nfunction dispatchConstant(type, params) {\\n  return function() {\\n    return dispatchEvent(this, type, params);\\n  };\\n}\\n\\nfunction dispatchFunction(type, params) {\\n  return function() {\\n    return dispatchEvent(this, type, params.apply(this, arguments));\\n  };\\n}\\n\\nexport default function(type, params) {\\n  return this.each((typeof params === \\\"function\\\"\\n      ? dispatchFunction\\n      : dispatchConstant)(type, params));\\n}\\n\",\"import selection_select from \\\"./select\\\";\\nimport selection_selectAll from \\\"./selectAll\\\";\\nimport selection_filter from \\\"./filter\\\";\\nimport selection_data from \\\"./data\\\";\\nimport selection_enter from \\\"./enter\\\";\\nimport selection_exit from \\\"./exit\\\";\\nimport selection_merge from \\\"./merge\\\";\\nimport selection_order from \\\"./order\\\";\\nimport selection_sort from \\\"./sort\\\";\\nimport selection_call from \\\"./call\\\";\\nimport selection_nodes from \\\"./nodes\\\";\\nimport selection_node from \\\"./node\\\";\\nimport selection_size from \\\"./size\\\";\\nimport selection_empty from \\\"./empty\\\";\\nimport selection_each from \\\"./each\\\";\\nimport selection_attr from \\\"./attr\\\";\\nimport selection_style from \\\"./style\\\";\\nimport selection_property from \\\"./property\\\";\\nimport selection_classed from \\\"./classed\\\";\\nimport selection_text from \\\"./text\\\";\\nimport selection_html from \\\"./html\\\";\\nimport selection_raise from \\\"./raise\\\";\\nimport selection_lower from \\\"./lower\\\";\\nimport selection_append from \\\"./append\\\";\\nimport selection_insert from \\\"./insert\\\";\\nimport selection_remove from \\\"./remove\\\";\\nimport selection_clone from \\\"./clone\\\";\\nimport selection_datum from \\\"./datum\\\";\\nimport selection_on from \\\"./on\\\";\\nimport selection_dispatch from \\\"./dispatch\\\";\\n\\nexport var root = [null];\\n\\nexport function Selection(groups, parents) {\\n  this._groups = groups;\\n  this._parents = parents;\\n}\\n\\nfunction selection() {\\n  return new Selection([[document.documentElement]], root);\\n}\\n\\nSelection.prototype = selection.prototype = {\\n  constructor: Selection,\\n  select: selection_select,\\n  selectAll: selection_selectAll,\\n  filter: selection_filter,\\n  data: selection_data,\\n  enter: selection_enter,\\n  exit: selection_exit,\\n  merge: selection_merge,\\n  order: selection_order,\\n  sort: selection_sort,\\n  call: selection_call,\\n  nodes: selection_nodes,\\n  node: selection_node,\\n  size: selection_size,\\n  empty: selection_empty,\\n  each: selection_each,\\n  attr: selection_attr,\\n  style: selection_style,\\n  property: selection_property,\\n  classed: selection_classed,\\n  text: selection_text,\\n  html: selection_html,\\n  raise: selection_raise,\\n  lower: selection_lower,\\n  append: selection_append,\\n  insert: selection_insert,\\n  remove: selection_remove,\\n  clone: selection_clone,\\n  datum: selection_datum,\\n  on: selection_on,\\n  dispatch: selection_dispatch\\n};\\n\\nexport default selection;\\n\",\"import {Selection} from \\\"./index\\\";\\nimport selector from \\\"../selector\\\";\\n\\nexport default function(select) {\\n  if (typeof select !== \\\"function\\\") select = selector(select);\\n\\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\\n        if (\\\"__data__\\\" in node) subnode.__data__ = node.__data__;\\n        subgroup[i] = subnode;\\n      }\\n    }\\n  }\\n\\n  return new Selection(subgroups, this._parents);\\n}\\n\",\"import {Selection} from \\\"./index\\\";\\nimport selectorAll from \\\"../selectorAll\\\";\\n\\nexport default function(select) {\\n  if (typeof select !== \\\"function\\\") select = selectorAll(select);\\n\\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\\n      if (node = group[i]) {\\n        subgroups.push(select.call(node, node.__data__, i, group));\\n        parents.push(node);\\n      }\\n    }\\n  }\\n\\n  return new Selection(subgroups, parents);\\n}\\n\",\"import {Selection} from \\\"./index\\\";\\nimport matcher from \\\"../matcher\\\";\\n\\nexport default function(match) {\\n  if (typeof match !== \\\"function\\\") match = matcher(match);\\n\\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\\n        subgroup.push(node);\\n      }\\n    }\\n  }\\n\\n  return new Selection(subgroups, this._parents);\\n}\\n\",\"import sparse from \\\"./sparse\\\";\\nimport {Selection} from \\\"./index\\\";\\n\\nexport default function() {\\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\\n}\\n\",\"import {Selection} from \\\"./index\\\";\\n\\nexport default function(selection) {\\n\\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\\n      if (node = group0[i] || group1[i]) {\\n        merge[i] = node;\\n      }\\n    }\\n  }\\n\\n  for (; j < m0; ++j) {\\n    merges[j] = groups0[j];\\n  }\\n\\n  return new Selection(merges, this._parents);\\n}\\n\",\"export default function() {\\n\\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\\n      if (node = group[i]) {\\n        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\\n        next = node;\\n      }\\n    }\\n  }\\n\\n  return this;\\n}\\n\",\"export default function() {\\n  var callback = arguments[0];\\n  arguments[0] = this;\\n  callback.apply(null, arguments);\\n  return this;\\n}\\n\",\"export default function() {\\n  var nodes = new Array(this.size()), i = -1;\\n  this.each(function() { nodes[++i] = this; });\\n  return nodes;\\n}\\n\",\"export default function() {\\n\\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\\n      var node = group[i];\\n      if (node) return node;\\n    }\\n  }\\n\\n  return null;\\n}\\n\",\"export default function() {\\n  var size = 0;\\n  this.each(function() { ++size; });\\n  return size;\\n}\\n\",\"export default function() {\\n  return !this.node();\\n}\\n\",\"export default function(callback) {\\n\\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\\n    }\\n  }\\n\\n  return this;\\n}\\n\",\"function propertyRemove(name) {\\n  return function() {\\n    delete this[name];\\n  };\\n}\\n\\nfunction propertyConstant(name, value) {\\n  return function() {\\n    this[name] = value;\\n  };\\n}\\n\\nfunction propertyFunction(name, value) {\\n  return function() {\\n    var v = value.apply(this, arguments);\\n    if (v == null) delete this[name];\\n    else this[name] = v;\\n  };\\n}\\n\\nexport default function(name, value) {\\n  return arguments.length > 1\\n      ? this.each((value == null\\n          ? propertyRemove : typeof value === \\\"function\\\"\\n          ? propertyFunction\\n          : propertyConstant)(name, value))\\n      : this.node()[name];\\n}\\n\",\"import creator from \\\"../creator\\\";\\n\\nexport default function(name) {\\n  var create = typeof name === \\\"function\\\" ? name : creator(name);\\n  return this.select(function() {\\n    return this.appendChild(create.apply(this, arguments));\\n  });\\n}\\n\",\"export default function(value) {\\n  return arguments.length\\n      ? this.property(\\\"__data__\\\", value)\\n      : this.node().__data__;\\n}\\n\",\"import {Selection, root} from \\\"./selection/index\\\";\\n\\nexport default function(selector) {\\n  return typeof selector === \\\"string\\\"\\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\\n      : new Selection([[selector]], root);\\n}\\n\",\"import creator from \\\"./creator\\\";\\nimport select from \\\"./select\\\";\\n\\nexport default function(name) {\\n  return select(creator(name).call(document.documentElement));\\n}\\n\",\"var nextId = 0;\\n\\nexport default function local() {\\n  return new Local;\\n}\\n\\nfunction Local() {\\n  this._ = \\\"@\\\" + (++nextId).toString(36);\\n}\\n\\nLocal.prototype = local.prototype = {\\n  constructor: Local,\\n  get: function(node) {\\n    var id = this._;\\n    while (!(id in node)) if (!(node = node.parentNode)) return;\\n    return node[id];\\n  },\\n  set: function(node, value) {\\n    return node[this._] = value;\\n  },\\n  remove: function(node) {\\n    return this._ in node && delete node[this._];\\n  },\\n  toString: function() {\\n    return this._;\\n  }\\n};\\n\",\"import {event} from \\\"./selection/on\\\";\\n\\nexport default function() {\\n  var current = event, source;\\n  while (source = current.sourceEvent) current = source;\\n  return current;\\n}\\n\",\"export default function(node, event) {\\n  var svg = node.ownerSVGElement || node;\\n\\n  if (svg.createSVGPoint) {\\n    var point = svg.createSVGPoint();\\n    point.x = event.clientX, point.y = event.clientY;\\n    point = point.matrixTransform(node.getScreenCTM().inverse());\\n    return [point.x, point.y];\\n  }\\n\\n  var rect = node.getBoundingClientRect();\\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\\n}\\n\",\"import sourceEvent from \\\"./sourceEvent\\\";\\nimport point from \\\"./point\\\";\\n\\nexport default function(node) {\\n  var event = sourceEvent();\\n  if (event.changedTouches) event = event.changedTouches[0];\\n  return point(node, event);\\n}\\n\",\"import {Selection, root} from \\\"./selection/index\\\";\\n\\nexport default function(selector) {\\n  return typeof selector === \\\"string\\\"\\n      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\\n      : new Selection([selector == null ? [] : selector], root);\\n}\\n\",\"import sourceEvent from \\\"./sourceEvent\\\";\\nimport point from \\\"./point\\\";\\n\\nexport default function(node, touches, identifier) {\\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\\n\\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\\n    if ((touch = touches[i]).identifier === identifier) {\\n      return point(node, touch);\\n    }\\n  }\\n\\n  return null;\\n}\\n\",\"import sourceEvent from \\\"./sourceEvent\\\";\\nimport point from \\\"./point\\\";\\n\\nexport default function(node, touches) {\\n  if (touches == null) touches = sourceEvent().touches;\\n\\n  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\\n    points[i] = point(node, touches[i]);\\n  }\\n\\n  return points;\\n}\\n\",\"import {event} from \\\"d3-selection\\\";\\n\\nexport function nopropagation() {\\n  event.stopImmediatePropagation();\\n}\\n\\nexport default function() {\\n  event.preventDefault();\\n  event.stopImmediatePropagation();\\n}\\n\",\"import {select} from \\\"d3-selection\\\";\\nimport noevent from \\\"./noevent\\\";\\n\\nexport default function(view) {\\n  var root = view.document.documentElement,\\n      selection = select(view).on(\\\"dragstart.drag\\\", noevent, true);\\n  if (\\\"onselectstart\\\" in root) {\\n    selection.on(\\\"selectstart.drag\\\", noevent, true);\\n  } else {\\n    root.__noselect = root.style.MozUserSelect;\\n    root.style.MozUserSelect = \\\"none\\\";\\n  }\\n}\\n\\nexport function yesdrag(view, noclick) {\\n  var root = view.document.documentElement,\\n      selection = select(view).on(\\\"dragstart.drag\\\", null);\\n  if (noclick) {\\n    selection.on(\\\"click.drag\\\", noevent, true);\\n    setTimeout(function() { selection.on(\\\"click.drag\\\", null); }, 0);\\n  }\\n  if (\\\"onselectstart\\\" in root) {\\n    selection.on(\\\"selectstart.drag\\\", null);\\n  } else {\\n    root.style.MozUserSelect = root.__noselect;\\n    delete root.__noselect;\\n  }\\n}\\n\",\"export default function(x) {\\n  return function() {\\n    return x;\\n  };\\n}\\n\",\"export default function DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\\n  this.target = target;\\n  this.type = type;\\n  this.subject = subject;\\n  this.identifier = id;\\n  this.active = active;\\n  this.x = x;\\n  this.y = y;\\n  this.dx = dx;\\n  this.dy = dy;\\n  this._ = dispatch;\\n}\\n\\nDragEvent.prototype.on = function() {\\n  var value = this._.on.apply(this._, arguments);\\n  return value === this._ ? this : value;\\n};\\n\",\"import {dispatch} from \\\"d3-dispatch\\\";\\nimport {event, customEvent, select, mouse, touch} from \\\"d3-selection\\\";\\nimport nodrag, {yesdrag} from \\\"./nodrag\\\";\\nimport noevent, {nopropagation} from \\\"./noevent\\\";\\nimport constant from \\\"./constant\\\";\\nimport DragEvent from \\\"./event\\\";\\n\\n// Ignore right-click, since that should open the context menu.\\nfunction defaultFilter() {\\n  return !event.button;\\n}\\n\\nfunction defaultContainer() {\\n  return this.parentNode;\\n}\\n\\nfunction defaultSubject(d) {\\n  return d == null ? {x: event.x, y: event.y} : d;\\n}\\n\\nfunction defaultTouchable() {\\n  return \\\"ontouchstart\\\" in this;\\n}\\n\\nexport default function() {\\n  var filter = defaultFilter,\\n      container = defaultContainer,\\n      subject = defaultSubject,\\n      touchable = defaultTouchable,\\n      gestures = {},\\n      listeners = dispatch(\\\"start\\\", \\\"drag\\\", \\\"end\\\"),\\n      active = 0,\\n      mousedownx,\\n      mousedowny,\\n      mousemoving,\\n      touchending,\\n      clickDistance2 = 0;\\n\\n  function drag(selection) {\\n    selection\\n        .on(\\\"mousedown.drag\\\", mousedowned)\\n      .filter(touchable)\\n        .on(\\\"touchstart.drag\\\", touchstarted)\\n        .on(\\\"touchmove.drag\\\", touchmoved)\\n        .on(\\\"touchend.drag touchcancel.drag\\\", touchended)\\n        .style(\\\"touch-action\\\", \\\"none\\\")\\n        .style(\\\"-webkit-tap-highlight-color\\\", \\\"rgba(0,0,0,0)\\\");\\n  }\\n\\n  function mousedowned() {\\n    if (touchending || !filter.apply(this, arguments)) return;\\n    var gesture = beforestart(\\\"mouse\\\", container.apply(this, arguments), mouse, this, arguments);\\n    if (!gesture) return;\\n    select(event.view).on(\\\"mousemove.drag\\\", mousemoved, true).on(\\\"mouseup.drag\\\", mouseupped, true);\\n    nodrag(event.view);\\n    nopropagation();\\n    mousemoving = false;\\n    mousedownx = event.clientX;\\n    mousedowny = event.clientY;\\n    gesture(\\\"start\\\");\\n  }\\n\\n  function mousemoved() {\\n    noevent();\\n    if (!mousemoving) {\\n      var dx = event.clientX - mousedownx, dy = event.clientY - mousedowny;\\n      mousemoving = dx * dx + dy * dy > clickDistance2;\\n    }\\n    gestures.mouse(\\\"drag\\\");\\n  }\\n\\n  function mouseupped() {\\n    select(event.view).on(\\\"mousemove.drag mouseup.drag\\\", null);\\n    yesdrag(event.view, mousemoving);\\n    noevent();\\n    gestures.mouse(\\\"end\\\");\\n  }\\n\\n  function touchstarted() {\\n    if (!filter.apply(this, arguments)) return;\\n    var touches = event.changedTouches,\\n        c = container.apply(this, arguments),\\n        n = touches.length, i, gesture;\\n\\n    for (i = 0; i < n; ++i) {\\n      if (gesture = beforestart(touches[i].identifier, c, touch, this, arguments)) {\\n        nopropagation();\\n        gesture(\\\"start\\\");\\n      }\\n    }\\n  }\\n\\n  function touchmoved() {\\n    var touches = event.changedTouches,\\n        n = touches.length, i, gesture;\\n\\n    for (i = 0; i < n; ++i) {\\n      if (gesture = gestures[touches[i].identifier]) {\\n        noevent();\\n        gesture(\\\"drag\\\");\\n      }\\n    }\\n  }\\n\\n  function touchended() {\\n    var touches = event.changedTouches,\\n        n = touches.length, i, gesture;\\n\\n    if (touchending) clearTimeout(touchending);\\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\\n    for (i = 0; i < n; ++i) {\\n      if (gesture = gestures[touches[i].identifier]) {\\n        nopropagation();\\n        gesture(\\\"end\\\");\\n      }\\n    }\\n  }\\n\\n  function beforestart(id, container, point, that, args) {\\n    var p = point(container, id), s, dx, dy,\\n        sublisteners = listeners.copy();\\n\\n    if (!customEvent(new DragEvent(drag, \\\"beforestart\\\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\\n      if ((event.subject = s = subject.apply(that, args)) == null) return false;\\n      dx = s.x - p[0] || 0;\\n      dy = s.y - p[1] || 0;\\n      return true;\\n    })) return;\\n\\n    return function gesture(type) {\\n      var p0 = p, n;\\n      switch (type) {\\n        case \\\"start\\\": gestures[id] = gesture, n = active++; break;\\n        case \\\"end\\\": delete gestures[id], --active; // nobreak\\n        case \\\"drag\\\": p = point(container, id), n = active; break;\\n      }\\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\\n    };\\n  }\\n\\n  drag.filter = function(_) {\\n    return arguments.length ? (filter = typeof _ === \\\"function\\\" ? _ : constant(!!_), drag) : filter;\\n  };\\n\\n  drag.container = function(_) {\\n    return arguments.length ? (container = typeof _ === \\\"function\\\" ? _ : constant(_), drag) : container;\\n  };\\n\\n  drag.subject = function(_) {\\n    return arguments.length ? (subject = typeof _ === \\\"function\\\" ? _ : constant(_), drag) : subject;\\n  };\\n\\n  drag.touchable = function(_) {\\n    return arguments.length ? (touchable = typeof _ === \\\"function\\\" ? _ : constant(!!_), drag) : touchable;\\n  };\\n\\n  drag.on = function() {\\n    var value = listeners.on.apply(listeners, arguments);\\n    return value === listeners ? drag : value;\\n  };\\n\\n  drag.clickDistance = function(_) {\\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\\n  };\\n\\n  return drag;\\n}\\n\",\"export default function(constructor, factory, prototype) {\\n  constructor.prototype = factory.prototype = prototype;\\n  prototype.constructor = constructor;\\n}\\n\\nexport function extend(parent, definition) {\\n  var prototype = Object.create(parent.prototype);\\n  for (var key in definition) prototype[key] = definition[key];\\n  return prototype;\\n}\\n\",\"import define, {extend} from \\\"./define\\\";\\n\\nexport function Color() {}\\n\\nexport var darker = 0.7;\\nexport var brighter = 1 / darker;\\n\\nvar reI = \\\"\\\\\\\\s*([+-]?\\\\\\\\d+)\\\\\\\\s*\\\",\\n    reN = \\\"\\\\\\\\s*([+-]?\\\\\\\\d*\\\\\\\\.?\\\\\\\\d+(?:[eE][+-]?\\\\\\\\d+)?)\\\\\\\\s*\\\",\\n    reP = \\\"\\\\\\\\s*([+-]?\\\\\\\\d*\\\\\\\\.?\\\\\\\\d+(?:[eE][+-]?\\\\\\\\d+)?)%\\\\\\\\s*\\\",\\n    reHex3 = /^#([0-9a-f]{3})$/,\\n    reHex6 = /^#([0-9a-f]{6})$/,\\n    reRgbInteger = new RegExp(\\\"^rgb\\\\\\\\(\\\" + [reI, reI, reI] + \\\"\\\\\\\\)$\\\"),\\n    reRgbPercent = new RegExp(\\\"^rgb\\\\\\\\(\\\" + [reP, reP, reP] + \\\"\\\\\\\\)$\\\"),\\n    reRgbaInteger = new RegExp(\\\"^rgba\\\\\\\\(\\\" + [reI, reI, reI, reN] + \\\"\\\\\\\\)$\\\"),\\n    reRgbaPercent = new RegExp(\\\"^rgba\\\\\\\\(\\\" + [reP, reP, reP, reN] + \\\"\\\\\\\\)$\\\"),\\n    reHslPercent = new RegExp(\\\"^hsl\\\\\\\\(\\\" + [reN, reP, reP] + \\\"\\\\\\\\)$\\\"),\\n    reHslaPercent = new RegExp(\\\"^hsla\\\\\\\\(\\\" + [reN, reP, reP, reN] + \\\"\\\\\\\\)$\\\");\\n\\nvar named = {\\n  aliceblue: 0xf0f8ff,\\n  antiquewhite: 0xfaebd7,\\n  aqua: 0x00ffff,\\n  aquamarine: 0x7fffd4,\\n  azure: 0xf0ffff,\\n  beige: 0xf5f5dc,\\n  bisque: 0xffe4c4,\\n  black: 0x000000,\\n  blanchedalmond: 0xffebcd,\\n  blue: 0x0000ff,\\n  blueviolet: 0x8a2be2,\\n  brown: 0xa52a2a,\\n  burlywood: 0xdeb887,\\n  cadetblue: 0x5f9ea0,\\n  chartreuse: 0x7fff00,\\n  chocolate: 0xd2691e,\\n  coral: 0xff7f50,\\n  cornflowerblue: 0x6495ed,\\n  cornsilk: 0xfff8dc,\\n  crimson: 0xdc143c,\\n  cyan: 0x00ffff,\\n  darkblue: 0x00008b,\\n  darkcyan: 0x008b8b,\\n  darkgoldenrod: 0xb8860b,\\n  darkgray: 0xa9a9a9,\\n  darkgreen: 0x006400,\\n  darkgrey: 0xa9a9a9,\\n  darkkhaki: 0xbdb76b,\\n  darkmagenta: 0x8b008b,\\n  darkolivegreen: 0x556b2f,\\n  darkorange: 0xff8c00,\\n  darkorchid: 0x9932cc,\\n  darkred: 0x8b0000,\\n  darksalmon: 0xe9967a,\\n  darkseagreen: 0x8fbc8f,\\n  darkslateblue: 0x483d8b,\\n  darkslategray: 0x2f4f4f,\\n  darkslategrey: 0x2f4f4f,\\n  darkturquoise: 0x00ced1,\\n  darkviolet: 0x9400d3,\\n  deeppink: 0xff1493,\\n  deepskyblue: 0x00bfff,\\n  dimgray: 0x696969,\\n  dimgrey: 0x696969,\\n  dodgerblue: 0x1e90ff,\\n  firebrick: 0xb22222,\\n  floralwhite: 0xfffaf0,\\n  forestgreen: 0x228b22,\\n  fuchsia: 0xff00ff,\\n  gainsboro: 0xdcdcdc,\\n  ghostwhite: 0xf8f8ff,\\n  gold: 0xffd700,\\n  goldenrod: 0xdaa520,\\n  gray: 0x808080,\\n  green: 0x008000,\\n  greenyellow: 0xadff2f,\\n  grey: 0x808080,\\n  honeydew: 0xf0fff0,\\n  hotpink: 0xff69b4,\\n  indianred: 0xcd5c5c,\\n  indigo: 0x4b0082,\\n  ivory: 0xfffff0,\\n  khaki: 0xf0e68c,\\n  lavender: 0xe6e6fa,\\n  lavenderblush: 0xfff0f5,\\n  lawngreen: 0x7cfc00,\\n  lemonchiffon: 0xfffacd,\\n  lightblue: 0xadd8e6,\\n  lightcoral: 0xf08080,\\n  lightcyan: 0xe0ffff,\\n  lightgoldenrodyellow: 0xfafad2,\\n  lightgray: 0xd3d3d3,\\n  lightgreen: 0x90ee90,\\n  lightgrey: 0xd3d3d3,\\n  lightpink: 0xffb6c1,\\n  lightsalmon: 0xffa07a,\\n  lightseagreen: 0x20b2aa,\\n  lightskyblue: 0x87cefa,\\n  lightslategray: 0x778899,\\n  lightslategrey: 0x778899,\\n  lightsteelblue: 0xb0c4de,\\n  lightyellow: 0xffffe0,\\n  lime: 0x00ff00,\\n  limegreen: 0x32cd32,\\n  linen: 0xfaf0e6,\\n  magenta: 0xff00ff,\\n  maroon: 0x800000,\\n  mediumaquamarine: 0x66cdaa,\\n  mediumblue: 0x0000cd,\\n  mediumorchid: 0xba55d3,\\n  mediumpurple: 0x9370db,\\n  mediumseagreen: 0x3cb371,\\n  mediumslateblue: 0x7b68ee,\\n  mediumspringgreen: 0x00fa9a,\\n  mediumturquoise: 0x48d1cc,\\n  mediumvioletred: 0xc71585,\\n  midnightblue: 0x191970,\\n  mintcream: 0xf5fffa,\\n  mistyrose: 0xffe4e1,\\n  moccasin: 0xffe4b5,\\n  navajowhite: 0xffdead,\\n  navy: 0x000080,\\n  oldlace: 0xfdf5e6,\\n  olive: 0x808000,\\n  olivedrab: 0x6b8e23,\\n  orange: 0xffa500,\\n  orangered: 0xff4500,\\n  orchid: 0xda70d6,\\n  palegoldenrod: 0xeee8aa,\\n  palegreen: 0x98fb98,\\n  paleturquoise: 0xafeeee,\\n  palevioletred: 0xdb7093,\\n  papayawhip: 0xffefd5,\\n  peachpuff: 0xffdab9,\\n  peru: 0xcd853f,\\n  pink: 0xffc0cb,\\n  plum: 0xdda0dd,\\n  powderblue: 0xb0e0e6,\\n  purple: 0x800080,\\n  rebeccapurple: 0x663399,\\n  red: 0xff0000,\\n  rosybrown: 0xbc8f8f,\\n  royalblue: 0x4169e1,\\n  saddlebrown: 0x8b4513,\\n  salmon: 0xfa8072,\\n  sandybrown: 0xf4a460,\\n  seagreen: 0x2e8b57,\\n  seashell: 0xfff5ee,\\n  sienna: 0xa0522d,\\n  silver: 0xc0c0c0,\\n  skyblue: 0x87ceeb,\\n  slateblue: 0x6a5acd,\\n  slategray: 0x708090,\\n  slategrey: 0x708090,\\n  snow: 0xfffafa,\\n  springgreen: 0x00ff7f,\\n  steelblue: 0x4682b4,\\n  tan: 0xd2b48c,\\n  teal: 0x008080,\\n  thistle: 0xd8bfd8,\\n  tomato: 0xff6347,\\n  turquoise: 0x40e0d0,\\n  violet: 0xee82ee,\\n  wheat: 0xf5deb3,\\n  white: 0xffffff,\\n  whitesmoke: 0xf5f5f5,\\n  yellow: 0xffff00,\\n  yellowgreen: 0x9acd32\\n};\\n\\ndefine(Color, color, {\\n  displayable: function() {\\n    return this.rgb().displayable();\\n  },\\n  toString: function() {\\n    return this.rgb() + \\\"\\\";\\n  }\\n});\\n\\nexport default function color(format) {\\n  var m;\\n  format = (format + \\\"\\\").trim().toLowerCase();\\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\\n      : named.hasOwnProperty(format) ? rgbn(named[format])\\n      : format === \\\"transparent\\\" ? new Rgb(NaN, NaN, NaN, 0)\\n      : null;\\n}\\n\\nfunction rgbn(n) {\\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\\n}\\n\\nfunction rgba(r, g, b, a) {\\n  if (a <= 0) r = g = b = NaN;\\n  return new Rgb(r, g, b, a);\\n}\\n\\nexport function rgbConvert(o) {\\n  if (!(o instanceof Color)) o = color(o);\\n  if (!o) return new Rgb;\\n  o = o.rgb();\\n  return new Rgb(o.r, o.g, o.b, o.opacity);\\n}\\n\\nexport function rgb(r, g, b, opacity) {\\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\\n}\\n\\nexport function Rgb(r, g, b, opacity) {\\n  this.r = +r;\\n  this.g = +g;\\n  this.b = +b;\\n  this.opacity = +opacity;\\n}\\n\\ndefine(Rgb, rgb, extend(Color, {\\n  brighter: function(k) {\\n    k = k == null ? brighter : Math.pow(brighter, k);\\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\\n  },\\n  darker: function(k) {\\n    k = k == null ? darker : Math.pow(darker, k);\\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\\n  },\\n  rgb: function() {\\n    return this;\\n  },\\n  displayable: function() {\\n    return (0 <= this.r && this.r <= 255)\\n        && (0 <= this.g && this.g <= 255)\\n        && (0 <= this.b && this.b <= 255)\\n        && (0 <= this.opacity && this.opacity <= 1);\\n  },\\n  toString: function() {\\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\\n    return (a === 1 ? \\\"rgb(\\\" : \\\"rgba(\\\")\\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \\\", \\\"\\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \\\", \\\"\\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\\n        + (a === 1 ? \\\")\\\" : \\\", \\\" + a + \\\")\\\");\\n  }\\n}));\\n\\nfunction hsla(h, s, l, a) {\\n  if (a <= 0) h = s = l = NaN;\\n  else if (l <= 0 || l >= 1) h = s = NaN;\\n  else if (s <= 0) h = NaN;\\n  return new Hsl(h, s, l, a);\\n}\\n\\nexport function hslConvert(o) {\\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\\n  if (!(o instanceof Color)) o = color(o);\\n  if (!o) return new Hsl;\\n  if (o instanceof Hsl) return o;\\n  o = o.rgb();\\n  var r = o.r / 255,\\n      g = o.g / 255,\\n      b = o.b / 255,\\n      min = Math.min(r, g, b),\\n      max = Math.max(r, g, b),\\n      h = NaN,\\n      s = max - min,\\n      l = (max + min) / 2;\\n  if (s) {\\n    if (r === max) h = (g - b) / s + (g < b) * 6;\\n    else if (g === max) h = (b - r) / s + 2;\\n    else h = (r - g) / s + 4;\\n    s /= l < 0.5 ? max + min : 2 - max - min;\\n    h *= 60;\\n  } else {\\n    s = l > 0 && l < 1 ? 0 : h;\\n  }\\n  return new Hsl(h, s, l, o.opacity);\\n}\\n\\nexport function hsl(h, s, l, opacity) {\\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\\n}\\n\\nfunction Hsl(h, s, l, opacity) {\\n  this.h = +h;\\n  this.s = +s;\\n  this.l = +l;\\n  this.opacity = +opacity;\\n}\\n\\ndefine(Hsl, hsl, extend(Color, {\\n  brighter: function(k) {\\n    k = k == null ? brighter : Math.pow(brighter, k);\\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\\n  },\\n  darker: function(k) {\\n    k = k == null ? darker : Math.pow(darker, k);\\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\\n  },\\n  rgb: function() {\\n    var h = this.h % 360 + (this.h < 0) * 360,\\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\\n        l = this.l,\\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\\n        m1 = 2 * l - m2;\\n    return new Rgb(\\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\\n      hsl2rgb(h, m1, m2),\\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\\n      this.opacity\\n    );\\n  },\\n  displayable: function() {\\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\\n        && (0 <= this.l && this.l <= 1)\\n        && (0 <= this.opacity && this.opacity <= 1);\\n  }\\n}));\\n\\n/* From FvD 13.37, CSS Color Module Level 3 */\\nfunction hsl2rgb(h, m1, m2) {\\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\\n      : h < 180 ? m2\\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\\n      : m1) * 255;\\n}\\n\",\"export var deg2rad = Math.PI / 180;\\nexport var rad2deg = 180 / Math.PI;\\n\",\"import define, {extend} from \\\"./define\\\";\\nimport {Color, rgbConvert, Rgb} from \\\"./color\\\";\\nimport {deg2rad, rad2deg} from \\\"./math\\\";\\n\\nvar Kn = 18,\\n    Xn = 0.950470, // D65 standard referent\\n    Yn = 1,\\n    Zn = 1.088830,\\n    t0 = 4 / 29,\\n    t1 = 6 / 29,\\n    t2 = 3 * t1 * t1,\\n    t3 = t1 * t1 * t1;\\n\\nfunction labConvert(o) {\\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\\n  if (o instanceof Hcl) {\\n    var h = o.h * deg2rad;\\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\\n  }\\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\\n  var b = rgb2xyz(o.r),\\n      a = rgb2xyz(o.g),\\n      l = rgb2xyz(o.b),\\n      x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\\n      y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\\n      z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\\n}\\n\\nexport default function lab(l, a, b, opacity) {\\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\\n}\\n\\nexport function Lab(l, a, b, opacity) {\\n  this.l = +l;\\n  this.a = +a;\\n  this.b = +b;\\n  this.opacity = +opacity;\\n}\\n\\ndefine(Lab, lab, extend(Color, {\\n  brighter: function(k) {\\n    return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\\n  },\\n  darker: function(k) {\\n    return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\\n  },\\n  rgb: function() {\\n    var y = (this.l + 16) / 116,\\n        x = isNaN(this.a) ? y : y + this.a / 500,\\n        z = isNaN(this.b) ? y : y - this.b / 200;\\n    y = Yn * lab2xyz(y);\\n    x = Xn * lab2xyz(x);\\n    z = Zn * lab2xyz(z);\\n    return new Rgb(\\n      xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\\n      xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\\n      xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\\n      this.opacity\\n    );\\n  }\\n}));\\n\\nfunction xyz2lab(t) {\\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\\n}\\n\\nfunction lab2xyz(t) {\\n  return t > t1 ? t * t * t : t2 * (t - t0);\\n}\\n\\nfunction xyz2rgb(x) {\\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\\n}\\n\\nfunction rgb2xyz(x) {\\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\\n}\\n\\nfunction hclConvert(o) {\\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\\n  if (!(o instanceof Lab)) o = labConvert(o);\\n  var h = Math.atan2(o.b, o.a) * rad2deg;\\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\\n}\\n\\nexport function hcl(h, c, l, opacity) {\\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\\n}\\n\\nexport function Hcl(h, c, l, opacity) {\\n  this.h = +h;\\n  this.c = +c;\\n  this.l = +l;\\n  this.opacity = +opacity;\\n}\\n\\ndefine(Hcl, hcl, extend(Color, {\\n  brighter: function(k) {\\n    return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);\\n  },\\n  darker: function(k) {\\n    return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);\\n  },\\n  rgb: function() {\\n    return labConvert(this).rgb();\\n  }\\n}));\\n\",\"import define, {extend} from \\\"./define\\\";\\nimport {Color, rgbConvert, Rgb, darker, brighter} from \\\"./color\\\";\\nimport {deg2rad, rad2deg} from \\\"./math\\\";\\n\\nvar A = -0.14861,\\n    B = +1.78277,\\n    C = -0.29227,\\n    D = -0.90649,\\n    E = +1.97294,\\n    ED = E * D,\\n    EB = E * B,\\n    BC_DA = B * C - D * A;\\n\\nfunction cubehelixConvert(o) {\\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\\n  var r = o.r / 255,\\n      g = o.g / 255,\\n      b = o.b / 255,\\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\\n      bl = b - l,\\n      k = (E * (g - l) - C * bl) / D,\\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\\n}\\n\\nexport default function cubehelix(h, s, l, opacity) {\\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\\n}\\n\\nexport function Cubehelix(h, s, l, opacity) {\\n  this.h = +h;\\n  this.s = +s;\\n  this.l = +l;\\n  this.opacity = +opacity;\\n}\\n\\ndefine(Cubehelix, cubehelix, extend(Color, {\\n  brighter: function(k) {\\n    k = k == null ? brighter : Math.pow(brighter, k);\\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\\n  },\\n  darker: function(k) {\\n    k = k == null ? darker : Math.pow(darker, k);\\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\\n  },\\n  rgb: function() {\\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\\n        l = +this.l,\\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\\n        cosh = Math.cos(h),\\n        sinh = Math.sin(h);\\n    return new Rgb(\\n      255 * (l + a * (A * cosh + B * sinh)),\\n      255 * (l + a * (C * cosh + D * sinh)),\\n      255 * (l + a * (E * cosh)),\\n      this.opacity\\n    );\\n  }\\n}));\\n\",\"export function basis(t1, v0, v1, v2, v3) {\\n  var t2 = t1 * t1, t3 = t2 * t1;\\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\\n      + (4 - 6 * t2 + 3 * t3) * v1\\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\\n      + t3 * v3) / 6;\\n}\\n\\nexport default function(values) {\\n  var n = values.length - 1;\\n  return function(t) {\\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\\n        v1 = values[i],\\n        v2 = values[i + 1],\\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\\n    return basis((t - i / n) * n, v0, v1, v2, v3);\\n  };\\n}\\n\",\"import {basis} from \\\"./basis\\\";\\n\\nexport default function(values) {\\n  var n = values.length;\\n  return function(t) {\\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\\n        v0 = values[(i + n - 1) % n],\\n        v1 = values[i % n],\\n        v2 = values[(i + 1) % n],\\n        v3 = values[(i + 2) % n];\\n    return basis((t - i / n) * n, v0, v1, v2, v3);\\n  };\\n}\\n\",\"export default function(x) {\\n  return function() {\\n    return x;\\n  };\\n}\\n\",\"import constant from \\\"./constant\\\";\\n\\nfunction linear(a, d) {\\n  return function(t) {\\n    return a + t * d;\\n  };\\n}\\n\\nfunction exponential(a, b, y) {\\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\\n    return Math.pow(a + t * b, y);\\n  };\\n}\\n\\nexport function hue(a, b) {\\n  var d = b - a;\\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\\n}\\n\\nexport function gamma(y) {\\n  return (y = +y) === 1 ? nogamma : function(a, b) {\\n    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\\n  };\\n}\\n\\nexport default function nogamma(a, b) {\\n  var d = b - a;\\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\\n}\\n\",\"import {rgb as colorRgb} from \\\"d3-color\\\";\\nimport basis from \\\"./basis\\\";\\nimport basisClosed from \\\"./basisClosed\\\";\\nimport nogamma, {gamma} from \\\"./color\\\";\\n\\nexport default (function rgbGamma(y) {\\n  var color = gamma(y);\\n\\n  function rgb(start, end) {\\n    var r = color((start = colorRgb(start)).r, (end = colorRgb(end)).r),\\n        g = color(start.g, end.g),\\n        b = color(start.b, end.b),\\n        opacity = nogamma(start.opacity, end.opacity);\\n    return function(t) {\\n      start.r = r(t);\\n      start.g = g(t);\\n      start.b = b(t);\\n      start.opacity = opacity(t);\\n      return start + \\\"\\\";\\n    };\\n  }\\n\\n  rgb.gamma = rgbGamma;\\n\\n  return rgb;\\n})(1);\\n\\nfunction rgbSpline(spline) {\\n  return function(colors) {\\n    var n = colors.length,\\n        r = new Array(n),\\n        g = new Array(n),\\n        b = new Array(n),\\n        i, color;\\n    for (i = 0; i < n; ++i) {\\n      color = colorRgb(colors[i]);\\n      r[i] = color.r || 0;\\n      g[i] = color.g || 0;\\n      b[i] = color.b || 0;\\n    }\\n    r = spline(r);\\n    g = spline(g);\\n    b = spline(b);\\n    color.opacity = 1;\\n    return function(t) {\\n      color.r = r(t);\\n      color.g = g(t);\\n      color.b = b(t);\\n      return color + \\\"\\\";\\n    };\\n  };\\n}\\n\\nexport var rgbBasis = rgbSpline(basis);\\nexport var rgbBasisClosed = rgbSpline(basisClosed);\\n\",\"import value from \\\"./value\\\";\\n\\nexport default function(a, b) {\\n  var nb = b ? b.length : 0,\\n      na = a ? Math.min(nb, a.length) : 0,\\n      x = new Array(na),\\n      c = new Array(nb),\\n      i;\\n\\n  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\\n  for (; i < nb; ++i) c[i] = b[i];\\n\\n  return function(t) {\\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\\n    return c;\\n  };\\n}\\n\",\"export default function(a, b) {\\n  var d = new Date;\\n  return a = +a, b -= a, function(t) {\\n    return d.setTime(a + b * t), d;\\n  };\\n}\\n\",\"export default function(a, b) {\\n  return a = +a, b -= a, function(t) {\\n    return a + b * t;\\n  };\\n}\\n\",\"import value from \\\"./value\\\";\\n\\nexport default function(a, b) {\\n  var i = {},\\n      c = {},\\n      k;\\n\\n  if (a === null || typeof a !== \\\"object\\\") a = {};\\n  if (b === null || typeof b !== \\\"object\\\") b = {};\\n\\n  for (k in b) {\\n    if (k in a) {\\n      i[k] = value(a[k], b[k]);\\n    } else {\\n      c[k] = b[k];\\n    }\\n  }\\n\\n  return function(t) {\\n    for (k in i) c[k] = i[k](t);\\n    return c;\\n  };\\n}\\n\",\"import number from \\\"./number\\\";\\n\\nvar reA = /[-+]?(?:\\\\d+\\\\.?\\\\d*|\\\\.?\\\\d+)(?:[eE][-+]?\\\\d+)?/g,\\n    reB = new RegExp(reA.source, \\\"g\\\");\\n\\nfunction zero(b) {\\n  return function() {\\n    return b;\\n  };\\n}\\n\\nfunction one(b) {\\n  return function(t) {\\n    return b(t) + \\\"\\\";\\n  };\\n}\\n\\nexport default function(a, b) {\\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\\n      am, // current match in a\\n      bm, // current match in b\\n      bs, // string preceding current number in b, if any\\n      i = -1, // index in s\\n      s = [], // string constants and placeholders\\n      q = []; // number interpolators\\n\\n  // Coerce inputs to strings.\\n  a = a + \\\"\\\", b = b + \\\"\\\";\\n\\n  // Interpolate pairs of numbers in a & b.\\n  while ((am = reA.exec(a))\\n      && (bm = reB.exec(b))) {\\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\\n      bs = b.slice(bi, bs);\\n      if (s[i]) s[i] += bs; // coalesce with previous string\\n      else s[++i] = bs;\\n    }\\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\\n      if (s[i]) s[i] += bm; // coalesce with previous string\\n      else s[++i] = bm;\\n    } else { // interpolate non-matching numbers\\n      s[++i] = null;\\n      q.push({i: i, x: number(am, bm)});\\n    }\\n    bi = reB.lastIndex;\\n  }\\n\\n  // Add remains of b.\\n  if (bi < b.length) {\\n    bs = b.slice(bi);\\n    if (s[i]) s[i] += bs; // coalesce with previous string\\n    else s[++i] = bs;\\n  }\\n\\n  // Special optimization for only a single match.\\n  // Otherwise, interpolate each of the numbers and rejoin the string.\\n  return s.length < 2 ? (q[0]\\n      ? one(q[0].x)\\n      : zero(b))\\n      : (b = q.length, function(t) {\\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\\n          return s.join(\\\"\\\");\\n        });\\n}\\n\",\"import decompose, {identity} from \\\"./decompose\\\";\\n\\nvar cssNode,\\n    cssRoot,\\n    cssView,\\n    svgNode;\\n\\nexport function parseCss(value) {\\n  if (value === \\\"none\\\") return identity;\\n  if (!cssNode) cssNode = document.createElement(\\\"DIV\\\"), cssRoot = document.documentElement, cssView = document.defaultView;\\n  cssNode.style.transform = value;\\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\\\"transform\\\");\\n  cssRoot.removeChild(cssNode);\\n  value = value.slice(7, -1).split(\\\",\\\");\\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\\n}\\n\\nexport function parseSvg(value) {\\n  if (value == null) return identity;\\n  if (!svgNode) svgNode = document.createElementNS(\\\"http://www.w3.org/2000/svg\\\", \\\"g\\\");\\n  svgNode.setAttribute(\\\"transform\\\", value);\\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity;\\n  value = value.matrix;\\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\\n}\\n\",\"import {color} from \\\"d3-color\\\";\\nimport rgb from \\\"./rgb\\\";\\nimport array from \\\"./array\\\";\\nimport date from \\\"./date\\\";\\nimport number from \\\"./number\\\";\\nimport object from \\\"./object\\\";\\nimport string from \\\"./string\\\";\\nimport constant from \\\"./constant\\\";\\n\\nexport default function(a, b) {\\n  var t = typeof b, c;\\n  return b == null || t === \\\"boolean\\\" ? constant(b)\\n      : (t === \\\"number\\\" ? number\\n      : t === \\\"string\\\" ? ((c = color(b)) ? (b = c, rgb) : string)\\n      : b instanceof color ? rgb\\n      : b instanceof Date ? date\\n      : Array.isArray(b) ? array\\n      : typeof b.valueOf !== \\\"function\\\" && typeof b.toString !== \\\"function\\\" || isNaN(b) ? object\\n      : number)(a, b);\\n}\\n\",\"export default function(a, b) {\\n  return a = +a, b -= a, function(t) {\\n    return Math.round(a + b * t);\\n  };\\n}\\n\",\"var degrees = 180 / Math.PI;\\n\\nexport var identity = {\\n  translateX: 0,\\n  translateY: 0,\\n  rotate: 0,\\n  skewX: 0,\\n  scaleX: 1,\\n  scaleY: 1\\n};\\n\\nexport default function(a, b, c, d, e, f) {\\n  var scaleX, scaleY, skewX;\\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\\n  return {\\n    translateX: e,\\n    translateY: f,\\n    rotate: Math.atan2(b, a) * degrees,\\n    skewX: Math.atan(skewX) * degrees,\\n    scaleX: scaleX,\\n    scaleY: scaleY\\n  };\\n}\\n\",\"import number from \\\"../number\\\";\\nimport {parseCss, parseSvg} from \\\"./parse\\\";\\n\\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\\n\\n  function pop(s) {\\n    return s.length ? s.pop() + \\\" \\\" : \\\"\\\";\\n  }\\n\\n  function translate(xa, ya, xb, yb, s, q) {\\n    if (xa !== xb || ya !== yb) {\\n      var i = s.push(\\\"translate(\\\", null, pxComma, null, pxParen);\\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\\n    } else if (xb || yb) {\\n      s.push(\\\"translate(\\\" + xb + pxComma + yb + pxParen);\\n    }\\n  }\\n\\n  function rotate(a, b, s, q) {\\n    if (a !== b) {\\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\\n      q.push({i: s.push(pop(s) + \\\"rotate(\\\", null, degParen) - 2, x: number(a, b)});\\n    } else if (b) {\\n      s.push(pop(s) + \\\"rotate(\\\" + b + degParen);\\n    }\\n  }\\n\\n  function skewX(a, b, s, q) {\\n    if (a !== b) {\\n      q.push({i: s.push(pop(s) + \\\"skewX(\\\", null, degParen) - 2, x: number(a, b)});\\n    } else if (b) {\\n      s.push(pop(s) + \\\"skewX(\\\" + b + degParen);\\n    }\\n  }\\n\\n  function scale(xa, ya, xb, yb, s, q) {\\n    if (xa !== xb || ya !== yb) {\\n      var i = s.push(pop(s) + \\\"scale(\\\", null, \\\",\\\", null, \\\")\\\");\\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\\n    } else if (xb !== 1 || yb !== 1) {\\n      s.push(pop(s) + \\\"scale(\\\" + xb + \\\",\\\" + yb + \\\")\\\");\\n    }\\n  }\\n\\n  return function(a, b) {\\n    var s = [], // string constants and placeholders\\n        q = []; // number interpolators\\n    a = parse(a), b = parse(b);\\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\\n    rotate(a.rotate, b.rotate, s, q);\\n    skewX(a.skewX, b.skewX, s, q);\\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\\n    a = b = null; // gc\\n    return function(t) {\\n      var i = -1, n = q.length, o;\\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\\n      return s.join(\\\"\\\");\\n    };\\n  };\\n}\\n\\nexport var interpolateTransformCss = interpolateTransform(parseCss, \\\"px, \\\", \\\"px)\\\", \\\"deg)\\\");\\nexport var interpolateTransformSvg = interpolateTransform(parseSvg, \\\", \\\", \\\")\\\", \\\")\\\");\\n\",\"var rho = Math.SQRT2,\\n    rho2 = 2,\\n    rho4 = 4,\\n    epsilon2 = 1e-12;\\n\\nfunction cosh(x) {\\n  return ((x = Math.exp(x)) + 1 / x) / 2;\\n}\\n\\nfunction sinh(x) {\\n  return ((x = Math.exp(x)) - 1 / x) / 2;\\n}\\n\\nfunction tanh(x) {\\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\\n}\\n\\n// p0 = [ux0, uy0, w0]\\n// p1 = [ux1, uy1, w1]\\nexport default function(p0, p1) {\\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\\n      dx = ux1 - ux0,\\n      dy = uy1 - uy0,\\n      d2 = dx * dx + dy * dy,\\n      i,\\n      S;\\n\\n  // Special case for u0 ≅ u1.\\n  if (d2 < epsilon2) {\\n    S = Math.log(w1 / w0) / rho;\\n    i = function(t) {\\n      return [\\n        ux0 + t * dx,\\n        uy0 + t * dy,\\n        w0 * Math.exp(rho * t * S)\\n      ];\\n    }\\n  }\\n\\n  // General case.\\n  else {\\n    var d1 = Math.sqrt(d2),\\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\\n    S = (r1 - r0) / rho;\\n    i = function(t) {\\n      var s = t * S,\\n          coshr0 = cosh(r0),\\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\\n      return [\\n        ux0 + u * dx,\\n        uy0 + u * dy,\\n        w0 * coshr0 / cosh(rho * s + r0)\\n      ];\\n    }\\n  }\\n\\n  i.duration = S * 1000;\\n\\n  return i;\\n}\\n\",\"import {hsl as colorHsl} from \\\"d3-color\\\";\\nimport color, {hue} from \\\"./color\\\";\\n\\nfunction hsl(hue) {\\n  return function(start, end) {\\n    var h = hue((start = colorHsl(start)).h, (end = colorHsl(end)).h),\\n        s = color(start.s, end.s),\\n        l = color(start.l, end.l),\\n        opacity = color(start.opacity, end.opacity);\\n    return function(t) {\\n      start.h = h(t);\\n      start.s = s(t);\\n      start.l = l(t);\\n      start.opacity = opacity(t);\\n      return start + \\\"\\\";\\n    };\\n  }\\n}\\n\\nexport default hsl(hue);\\nexport var hslLong = hsl(color);\\n\",\"import {lab as colorLab} from \\\"d3-color\\\";\\nimport color from \\\"./color\\\";\\n\\nexport default function lab(start, end) {\\n  var l = color((start = colorLab(start)).l, (end = colorLab(end)).l),\\n      a = color(start.a, end.a),\\n      b = color(start.b, end.b),\\n      opacity = color(start.opacity, end.opacity);\\n  return function(t) {\\n    start.l = l(t);\\n    start.a = a(t);\\n    start.b = b(t);\\n    start.opacity = opacity(t);\\n    return start + \\\"\\\";\\n  };\\n}\\n\",\"import {hcl as colorHcl} from \\\"d3-color\\\";\\nimport color, {hue} from \\\"./color\\\";\\n\\nfunction hcl(hue) {\\n  return function(start, end) {\\n    var h = hue((start = colorHcl(start)).h, (end = colorHcl(end)).h),\\n        c = color(start.c, end.c),\\n        l = color(start.l, end.l),\\n        opacity = color(start.opacity, end.opacity);\\n    return function(t) {\\n      start.h = h(t);\\n      start.c = c(t);\\n      start.l = l(t);\\n      start.opacity = opacity(t);\\n      return start + \\\"\\\";\\n    };\\n  }\\n}\\n\\nexport default hcl(hue);\\nexport var hclLong = hcl(color);\\n\",\"import {cubehelix as colorCubehelix} from \\\"d3-color\\\";\\nimport color, {hue} from \\\"./color\\\";\\n\\nfunction cubehelix(hue) {\\n  return (function cubehelixGamma(y) {\\n    y = +y;\\n\\n    function cubehelix(start, end) {\\n      var h = hue((start = colorCubehelix(start)).h, (end = colorCubehelix(end)).h),\\n          s = color(start.s, end.s),\\n          l = color(start.l, end.l),\\n          opacity = color(start.opacity, end.opacity);\\n      return function(t) {\\n        start.h = h(t);\\n        start.s = s(t);\\n        start.l = l(Math.pow(t, y));\\n        start.opacity = opacity(t);\\n        return start + \\\"\\\";\\n      };\\n    }\\n\\n    cubehelix.gamma = cubehelixGamma;\\n\\n    return cubehelix;\\n  })(1);\\n}\\n\\nexport default cubehelix(hue);\\nexport var cubehelixLong = cubehelix(color);\\n\",\"var frame = 0, // is an animation frame pending?\\n    timeout = 0, // is a timeout pending?\\n    interval = 0, // are any timers active?\\n    pokeDelay = 1000, // how frequently we check for clock skew\\n    taskHead,\\n    taskTail,\\n    clockLast = 0,\\n    clockNow = 0,\\n    clockSkew = 0,\\n    clock = typeof performance === \\\"object\\\" && performance.now ? performance : Date,\\n    setFrame = typeof window === \\\"object\\\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\\n\\nexport function now() {\\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\\n}\\n\\nfunction clearNow() {\\n  clockNow = 0;\\n}\\n\\nexport function Timer() {\\n  this._call =\\n  this._time =\\n  this._next = null;\\n}\\n\\nTimer.prototype = timer.prototype = {\\n  constructor: Timer,\\n  restart: function(callback, delay, time) {\\n    if (typeof callback !== \\\"function\\\") throw new TypeError(\\\"callback is not a function\\\");\\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\\n    if (!this._next && taskTail !== this) {\\n      if (taskTail) taskTail._next = this;\\n      else taskHead = this;\\n      taskTail = this;\\n    }\\n    this._call = callback;\\n    this._time = time;\\n    sleep();\\n  },\\n  stop: function() {\\n    if (this._call) {\\n      this._call = null;\\n      this._time = Infinity;\\n      sleep();\\n    }\\n  }\\n};\\n\\nexport function timer(callback, delay, time) {\\n  var t = new Timer;\\n  t.restart(callback, delay, time);\\n  return t;\\n}\\n\\nexport function timerFlush() {\\n  now(); // Get the current time, if not already set.\\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\\n  var t = taskHead, e;\\n  while (t) {\\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\\n    t = t._next;\\n  }\\n  --frame;\\n}\\n\\nfunction wake() {\\n  clockNow = (clockLast = clock.now()) + clockSkew;\\n  frame = timeout = 0;\\n  try {\\n    timerFlush();\\n  } finally {\\n    frame = 0;\\n    nap();\\n    clockNow = 0;\\n  }\\n}\\n\\nfunction poke() {\\n  var now = clock.now(), delay = now - clockLast;\\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\\n}\\n\\nfunction nap() {\\n  var t0, t1 = taskHead, t2, time = Infinity;\\n  while (t1) {\\n    if (t1._call) {\\n      if (time > t1._time) time = t1._time;\\n      t0 = t1, t1 = t1._next;\\n    } else {\\n      t2 = t1._next, t1._next = null;\\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\\n    }\\n  }\\n  taskTail = t0;\\n  sleep(time);\\n}\\n\\nfunction sleep(time) {\\n  if (frame) return; // Soonest alarm already set, or will be.\\n  if (timeout) timeout = clearTimeout(timeout);\\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\\n  if (delay > 24) {\\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\\n    if (interval) interval = clearInterval(interval);\\n  } else {\\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\\n    frame = 1, setFrame(wake);\\n  }\\n}\\n\",\"export default function(interpolator, n) {\\n  var samples = new Array(n);\\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\\n  return samples;\\n}\\n\",\"import {Timer} from \\\"./timer\\\";\\n\\nexport default function(callback, delay, time) {\\n  var t = new Timer;\\n  delay = delay == null ? 0 : +delay;\\n  t.restart(function(elapsed) {\\n    t.stop();\\n    callback(elapsed + delay);\\n  }, delay, time);\\n  return t;\\n}\\n\",\"import {Timer, now} from \\\"./timer\\\";\\n\\nexport default function(callback, delay, time) {\\n  var t = new Timer, total = delay;\\n  if (delay == null) return t.restart(callback, delay, time), t;\\n  delay = +delay, time = time == null ? now() : +time;\\n  t.restart(function tick(elapsed) {\\n    elapsed += total;\\n    t.restart(tick, total += delay, time);\\n    callback(elapsed);\\n  }, delay, time);\\n  return t;\\n}\\n\",\"import {dispatch} from \\\"d3-dispatch\\\";\\nimport {timer, timeout} from \\\"d3-timer\\\";\\n\\nvar emptyOn = dispatch(\\\"start\\\", \\\"end\\\", \\\"interrupt\\\");\\nvar emptyTween = [];\\n\\nexport var CREATED = 0;\\nexport var SCHEDULED = 1;\\nexport var STARTING = 2;\\nexport var STARTED = 3;\\nexport var RUNNING = 4;\\nexport var ENDING = 5;\\nexport var ENDED = 6;\\n\\nexport default function(node, name, id, index, group, timing) {\\n  var schedules = node.__transition;\\n  if (!schedules) node.__transition = {};\\n  else if (id in schedules) return;\\n  create(node, id, {\\n    name: name,\\n    index: index, // For context during callback.\\n    group: group, // For context during callback.\\n    on: emptyOn,\\n    tween: emptyTween,\\n    time: timing.time,\\n    delay: timing.delay,\\n    duration: timing.duration,\\n    ease: timing.ease,\\n    timer: null,\\n    state: CREATED\\n  });\\n}\\n\\nexport function init(node, id) {\\n  var schedule = get(node, id);\\n  if (schedule.state > CREATED) throw new Error(\\\"too late; already scheduled\\\");\\n  return schedule;\\n}\\n\\nexport function set(node, id) {\\n  var schedule = get(node, id);\\n  if (schedule.state > STARTING) throw new Error(\\\"too late; already started\\\");\\n  return schedule;\\n}\\n\\nexport function get(node, id) {\\n  var schedule = node.__transition;\\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\\\"transition not found\\\");\\n  return schedule;\\n}\\n\\nfunction create(node, id, self) {\\n  var schedules = node.__transition,\\n      tween;\\n\\n  // Initialize the self timer when the transition is created.\\n  // Note the actual delay is not known until the first callback!\\n  schedules[id] = self;\\n  self.timer = timer(schedule, 0, self.time);\\n\\n  function schedule(elapsed) {\\n    self.state = SCHEDULED;\\n    self.timer.restart(start, self.delay, self.time);\\n\\n    // If the elapsed delay is less than our first sleep, start immediately.\\n    if (self.delay <= elapsed) start(elapsed - self.delay);\\n  }\\n\\n  function start(elapsed) {\\n    var i, j, n, o;\\n\\n    // If the state is not SCHEDULED, then we previously errored on start.\\n    if (self.state !== SCHEDULED) return stop();\\n\\n    for (i in schedules) {\\n      o = schedules[i];\\n      if (o.name !== self.name) continue;\\n\\n      // While this element already has a starting transition during this frame,\\n      // defer starting an interrupting transition until that transition has a\\n      // chance to tick (and possibly end); see d3/d3-transition#54!\\n      if (o.state === STARTED) return timeout(start);\\n\\n      // Interrupt the active transition, if any.\\n      // Dispatch the interrupt event.\\n      if (o.state === RUNNING) {\\n        o.state = ENDED;\\n        o.timer.stop();\\n        o.on.call(\\\"interrupt\\\", node, node.__data__, o.index, o.group);\\n        delete schedules[i];\\n      }\\n\\n      // Cancel any pre-empted transitions. No interrupt event is dispatched\\n      // because the cancelled transitions never started. Note that this also\\n      // removes this transition from the pending list!\\n      else if (+i < id) {\\n        o.state = ENDED;\\n        o.timer.stop();\\n        delete schedules[i];\\n      }\\n    }\\n\\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\\n    // Note the transition may be canceled after start and before the first tick!\\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\\n    // Assuming this is successful, subsequent callbacks go straight to tick.\\n    timeout(function() {\\n      if (self.state === STARTED) {\\n        self.state = RUNNING;\\n        self.timer.restart(tick, self.delay, self.time);\\n        tick(elapsed);\\n      }\\n    });\\n\\n    // Dispatch the start event.\\n    // Note this must be done before the tween are initialized.\\n    self.state = STARTING;\\n    self.on.call(\\\"start\\\", node, node.__data__, self.index, self.group);\\n    if (self.state !== STARTING) return; // interrupted\\n    self.state = STARTED;\\n\\n    // Initialize the tween, deleting null tween.\\n    tween = new Array(n = self.tween.length);\\n    for (i = 0, j = -1; i < n; ++i) {\\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\\n        tween[++j] = o;\\n      }\\n    }\\n    tween.length = j + 1;\\n  }\\n\\n  function tick(elapsed) {\\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\\n        i = -1,\\n        n = tween.length;\\n\\n    while (++i < n) {\\n      tween[i].call(null, t);\\n    }\\n\\n    // Dispatch the end event.\\n    if (self.state === ENDING) {\\n      self.on.call(\\\"end\\\", node, node.__data__, self.index, self.group);\\n      stop();\\n    }\\n  }\\n\\n  function stop() {\\n    self.state = ENDED;\\n    self.timer.stop();\\n    delete schedules[id];\\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\\n    delete node.__transition;\\n  }\\n}\\n\",\"import {STARTING, ENDING, ENDED} from \\\"./transition/schedule\\\";\\n\\nexport default function(node, name) {\\n  var schedules = node.__transition,\\n      schedule,\\n      active,\\n      empty = true,\\n      i;\\n\\n  if (!schedules) return;\\n\\n  name = name == null ? null : name + \\\"\\\";\\n\\n  for (i in schedules) {\\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\\n    active = schedule.state > STARTING && schedule.state < ENDING;\\n    schedule.state = ENDED;\\n    schedule.timer.stop();\\n    if (active) schedule.on.call(\\\"interrupt\\\", node, node.__data__, schedule.index, schedule.group);\\n    delete schedules[i];\\n  }\\n\\n  if (empty) delete node.__transition;\\n}\\n\",\"import {get, set} from \\\"./schedule\\\";\\n\\nfunction tweenRemove(id, name) {\\n  var tween0, tween1;\\n  return function() {\\n    var schedule = set(this, id),\\n        tween = schedule.tween;\\n\\n    // If this node shared tween with the previous node,\\n    // just assign the updated shared tween and we’re done!\\n    // Otherwise, copy-on-write.\\n    if (tween !== tween0) {\\n      tween1 = tween0 = tween;\\n      for (var i = 0, n = tween1.length; i < n; ++i) {\\n        if (tween1[i].name === name) {\\n          tween1 = tween1.slice();\\n          tween1.splice(i, 1);\\n          break;\\n        }\\n      }\\n    }\\n\\n    schedule.tween = tween1;\\n  };\\n}\\n\\nfunction tweenFunction(id, name, value) {\\n  var tween0, tween1;\\n  if (typeof value !== \\\"function\\\") throw new Error;\\n  return function() {\\n    var schedule = set(this, id),\\n        tween = schedule.tween;\\n\\n    // If this node shared tween with the previous node,\\n    // just assign the updated shared tween and we’re done!\\n    // Otherwise, copy-on-write.\\n    if (tween !== tween0) {\\n      tween1 = (tween0 = tween).slice();\\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\\n        if (tween1[i].name === name) {\\n          tween1[i] = t;\\n          break;\\n        }\\n      }\\n      if (i === n) tween1.push(t);\\n    }\\n\\n    schedule.tween = tween1;\\n  };\\n}\\n\\nexport default function(name, value) {\\n  var id = this._id;\\n\\n  name += \\\"\\\";\\n\\n  if (arguments.length < 2) {\\n    var tween = get(this.node(), id).tween;\\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\\n      if ((t = tween[i]).name === name) {\\n        return t.value;\\n      }\\n    }\\n    return null;\\n  }\\n\\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\\n}\\n\\nexport function tweenValue(transition, name, value) {\\n  var id = transition._id;\\n\\n  transition.each(function() {\\n    var schedule = set(this, id);\\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\\n  });\\n\\n  return function(node) {\\n    return get(node, id).value[name];\\n  };\\n}\\n\",\"import {color} from \\\"d3-color\\\";\\nimport {interpolateNumber, interpolateRgb, interpolateString} from \\\"d3-interpolate\\\";\\n\\nexport default function(a, b) {\\n  var c;\\n  return (typeof b === \\\"number\\\" ? interpolateNumber\\n      : b instanceof color ? interpolateRgb\\n      : (c = color(b)) ? (b = c, interpolateRgb)\\n      : interpolateString)(a, b);\\n}\\n\",\"function removeFunction(id) {\\n  return function() {\\n    var parent = this.parentNode;\\n    for (var i in this.__transition) if (+i !== id) return;\\n    if (parent) parent.removeChild(this);\\n  };\\n}\\n\\nexport default function() {\\n  return this.on(\\\"end.remove\\\", removeFunction(this._id));\\n}\\n\",\"import {selection} from \\\"d3-selection\\\";\\n\\nvar Selection = selection.prototype.constructor;\\n\\nexport default function() {\\n  return new Selection(this._groups, this._parents);\\n}\\n\",\"import {tweenValue} from \\\"./tween\\\";\\n\\nfunction textConstant(value) {\\n  return function() {\\n    this.textContent = value;\\n  };\\n}\\n\\nfunction textFunction(value) {\\n  return function() {\\n    var value1 = value(this);\\n    this.textContent = value1 == null ? \\\"\\\" : value1;\\n  };\\n}\\n\\nexport default function(value) {\\n  return this.tween(\\\"text\\\", typeof value === \\\"function\\\"\\n      ? textFunction(tweenValue(this, \\\"text\\\", value))\\n      : textConstant(value == null ? \\\"\\\" : value + \\\"\\\"));\\n}\\n\",\"import {selection} from \\\"d3-selection\\\";\\nimport transition_attr from \\\"./attr\\\";\\nimport transition_attrTween from \\\"./attrTween\\\";\\nimport transition_delay from \\\"./delay\\\";\\nimport transition_duration from \\\"./duration\\\";\\nimport transition_ease from \\\"./ease\\\";\\nimport transition_filter from \\\"./filter\\\";\\nimport transition_merge from \\\"./merge\\\";\\nimport transition_on from \\\"./on\\\";\\nimport transition_remove from \\\"./remove\\\";\\nimport transition_select from \\\"./select\\\";\\nimport transition_selectAll from \\\"./selectAll\\\";\\nimport transition_selection from \\\"./selection\\\";\\nimport transition_style from \\\"./style\\\";\\nimport transition_styleTween from \\\"./styleTween\\\";\\nimport transition_text from \\\"./text\\\";\\nimport transition_transition from \\\"./transition\\\";\\nimport transition_tween from \\\"./tween\\\";\\n\\nvar id = 0;\\n\\nexport function Transition(groups, parents, name, id) {\\n  this._groups = groups;\\n  this._parents = parents;\\n  this._name = name;\\n  this._id = id;\\n}\\n\\nexport default function transition(name) {\\n  return selection().transition(name);\\n}\\n\\nexport function newId() {\\n  return ++id;\\n}\\n\\nvar selection_prototype = selection.prototype;\\n\\nTransition.prototype = transition.prototype = {\\n  constructor: Transition,\\n  select: transition_select,\\n  selectAll: transition_selectAll,\\n  filter: transition_filter,\\n  merge: transition_merge,\\n  selection: transition_selection,\\n  transition: transition_transition,\\n  call: selection_prototype.call,\\n  nodes: selection_prototype.nodes,\\n  node: selection_prototype.node,\\n  size: selection_prototype.size,\\n  empty: selection_prototype.empty,\\n  each: selection_prototype.each,\\n  on: transition_on,\\n  attr: transition_attr,\\n  attrTween: transition_attrTween,\\n  style: transition_style,\\n  styleTween: transition_styleTween,\\n  text: transition_text,\\n  remove: transition_remove,\\n  tween: transition_tween,\\n  delay: transition_delay,\\n  duration: transition_duration,\\n  ease: transition_ease\\n};\\n\",\"export function linear(t) {\\n  return +t;\\n}\\n\",\"export function quadIn(t) {\\n  return t * t;\\n}\\n\\nexport function quadOut(t) {\\n  return t * (2 - t);\\n}\\n\\nexport function quadInOut(t) {\\n  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\\n}\\n\",\"export function cubicIn(t) {\\n  return t * t * t;\\n}\\n\\nexport function cubicOut(t) {\\n  return --t * t * t + 1;\\n}\\n\\nexport function cubicInOut(t) {\\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\\n}\\n\",\"import {selector} from \\\"d3-selection\\\";\\nimport {Transition} from \\\"./index\\\";\\nimport schedule, {get} from \\\"./schedule\\\";\\n\\nexport default function(select) {\\n  var name = this._name,\\n      id = this._id;\\n\\n  if (typeof select !== \\\"function\\\") select = selector(select);\\n\\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\\n        if (\\\"__data__\\\" in node) subnode.__data__ = node.__data__;\\n        subgroup[i] = subnode;\\n        schedule(subgroup[i], name, id, i, subgroup, get(node, id));\\n      }\\n    }\\n  }\\n\\n  return new Transition(subgroups, this._parents, name, id);\\n}\\n\",\"import {selectorAll} from \\\"d3-selection\\\";\\nimport {Transition} from \\\"./index\\\";\\nimport schedule, {get} from \\\"./schedule\\\";\\n\\nexport default function(select) {\\n  var name = this._name,\\n      id = this._id;\\n\\n  if (typeof select !== \\\"function\\\") select = selectorAll(select);\\n\\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\\n      if (node = group[i]) {\\n        for (var children = select.call(node, node.__data__, i, group), child, inherit = get(node, id), k = 0, l = children.length; k < l; ++k) {\\n          if (child = children[k]) {\\n            schedule(child, name, id, k, children, inherit);\\n          }\\n        }\\n        subgroups.push(children);\\n        parents.push(node);\\n      }\\n    }\\n  }\\n\\n  return new Transition(subgroups, parents, name, id);\\n}\\n\",\"import {matcher} from \\\"d3-selection\\\";\\nimport {Transition} from \\\"./index\\\";\\n\\nexport default function(match) {\\n  if (typeof match !== \\\"function\\\") match = matcher(match);\\n\\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\\n        subgroup.push(node);\\n      }\\n    }\\n  }\\n\\n  return new Transition(subgroups, this._parents, this._name, this._id);\\n}\\n\",\"import {Transition} from \\\"./index\\\";\\n\\nexport default function(transition) {\\n  if (transition._id !== this._id) throw new Error;\\n\\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\\n      if (node = group0[i] || group1[i]) {\\n        merge[i] = node;\\n      }\\n    }\\n  }\\n\\n  for (; j < m0; ++j) {\\n    merges[j] = groups0[j];\\n  }\\n\\n  return new Transition(merges, this._parents, this._name, this._id);\\n}\\n\",\"import {Transition, newId} from \\\"./index\\\";\\nimport schedule, {get} from \\\"./schedule\\\";\\n\\nexport default function() {\\n  var name = this._name,\\n      id0 = this._id,\\n      id1 = newId();\\n\\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\\n      if (node = group[i]) {\\n        var inherit = get(node, id0);\\n        schedule(node, name, id1, i, group, {\\n          time: inherit.time + inherit.delay + inherit.duration,\\n          delay: 0,\\n          duration: inherit.duration,\\n          ease: inherit.ease\\n        });\\n      }\\n    }\\n  }\\n\\n  return new Transition(groups, this._parents, name, id1);\\n}\\n\",\"import {get, set, init} from \\\"./schedule\\\";\\n\\nfunction start(name) {\\n  return (name + \\\"\\\").trim().split(/^|\\\\s+/).every(function(t) {\\n    var i = t.indexOf(\\\".\\\");\\n    if (i >= 0) t = t.slice(0, i);\\n    return !t || t === \\\"start\\\";\\n  });\\n}\\n\\nfunction onFunction(id, name, listener) {\\n  var on0, on1, sit = start(name) ? init : set;\\n  return function() {\\n    var schedule = sit(this, id),\\n        on = schedule.on;\\n\\n    // If this node shared a dispatch with the previous node,\\n    // just assign the updated shared dispatch and we’re done!\\n    // Otherwise, copy-on-write.\\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\\n\\n    schedule.on = on1;\\n  };\\n}\\n\\nexport default function(name, listener) {\\n  var id = this._id;\\n\\n  return arguments.length < 2\\n      ? get(this.node(), id).on.on(name)\\n      : this.each(onFunction(id, name, listener));\\n}\\n\",\"import {interpolateTransformSvg as interpolateTransform} from \\\"d3-interpolate\\\";\\nimport {namespace} from \\\"d3-selection\\\";\\nimport {tweenValue} from \\\"./tween\\\";\\nimport interpolate from \\\"./interpolate\\\";\\n\\nfunction attrRemove(name) {\\n  return function() {\\n    this.removeAttribute(name);\\n  };\\n}\\n\\nfunction attrRemoveNS(fullname) {\\n  return function() {\\n    this.removeAttributeNS(fullname.space, fullname.local);\\n  };\\n}\\n\\nfunction attrConstant(name, interpolate, value1) {\\n  var value00,\\n      interpolate0;\\n  return function() {\\n    var value0 = this.getAttribute(name);\\n    return value0 === value1 ? null\\n        : value0 === value00 ? interpolate0\\n        : interpolate0 = interpolate(value00 = value0, value1);\\n  };\\n}\\n\\nfunction attrConstantNS(fullname, interpolate, value1) {\\n  var value00,\\n      interpolate0;\\n  return function() {\\n    var value0 = this.getAttributeNS(fullname.space, fullname.local);\\n    return value0 === value1 ? null\\n        : value0 === value00 ? interpolate0\\n        : interpolate0 = interpolate(value00 = value0, value1);\\n  };\\n}\\n\\nfunction attrFunction(name, interpolate, value) {\\n  var value00,\\n      value10,\\n      interpolate0;\\n  return function() {\\n    var value0, value1 = value(this);\\n    if (value1 == null) return void this.removeAttribute(name);\\n    value0 = this.getAttribute(name);\\n    return value0 === value1 ? null\\n        : value0 === value00 && value1 === value10 ? interpolate0\\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\\n  };\\n}\\n\\nfunction attrFunctionNS(fullname, interpolate, value) {\\n  var value00,\\n      value10,\\n      interpolate0;\\n  return function() {\\n    var value0, value1 = value(this);\\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\\n    value0 = this.getAttributeNS(fullname.space, fullname.local);\\n    return value0 === value1 ? null\\n        : value0 === value00 && value1 === value10 ? interpolate0\\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\\n  };\\n}\\n\\nexport default function(name, value) {\\n  var fullname = namespace(name), i = fullname === \\\"transform\\\" ? interpolateTransform : interpolate;\\n  return this.attrTween(name, typeof value === \\\"function\\\"\\n      ? (fullname.local ? attrFunctionNS : attrFunction)(fullname, i, tweenValue(this, \\\"attr.\\\" + name, value))\\n      : value == null ? (fullname.local ? attrRemoveNS : attrRemove)(fullname)\\n      : (fullname.local ? attrConstantNS : attrConstant)(fullname, i, value + \\\"\\\"));\\n}\\n\",\"import {namespace} from \\\"d3-selection\\\";\\n\\nfunction attrTweenNS(fullname, value) {\\n  function tween() {\\n    var node = this, i = value.apply(node, arguments);\\n    return i && function(t) {\\n      node.setAttributeNS(fullname.space, fullname.local, i(t));\\n    };\\n  }\\n  tween._value = value;\\n  return tween;\\n}\\n\\nfunction attrTween(name, value) {\\n  function tween() {\\n    var node = this, i = value.apply(node, arguments);\\n    return i && function(t) {\\n      node.setAttribute(name, i(t));\\n    };\\n  }\\n  tween._value = value;\\n  return tween;\\n}\\n\\nexport default function(name, value) {\\n  var key = \\\"attr.\\\" + name;\\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\\n  if (value == null) return this.tween(key, null);\\n  if (typeof value !== \\\"function\\\") throw new Error;\\n  var fullname = namespace(name);\\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\\n}\\n\",\"import {interpolateTransformCss as interpolateTransform} from \\\"d3-interpolate\\\";\\nimport {style} from \\\"d3-selection\\\";\\nimport {tweenValue} from \\\"./tween\\\";\\nimport interpolate from \\\"./interpolate\\\";\\n\\nfunction styleRemove(name, interpolate) {\\n  var value00,\\n      value10,\\n      interpolate0;\\n  return function() {\\n    var value0 = style(this, name),\\n        value1 = (this.style.removeProperty(name), style(this, name));\\n    return value0 === value1 ? null\\n        : value0 === value00 && value1 === value10 ? interpolate0\\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\\n  };\\n}\\n\\nfunction styleRemoveEnd(name) {\\n  return function() {\\n    this.style.removeProperty(name);\\n  };\\n}\\n\\nfunction styleConstant(name, interpolate, value1) {\\n  var value00,\\n      interpolate0;\\n  return function() {\\n    var value0 = style(this, name);\\n    return value0 === value1 ? null\\n        : value0 === value00 ? interpolate0\\n        : interpolate0 = interpolate(value00 = value0, value1);\\n  };\\n}\\n\\nfunction styleFunction(name, interpolate, value) {\\n  var value00,\\n      value10,\\n      interpolate0;\\n  return function() {\\n    var value0 = style(this, name),\\n        value1 = value(this);\\n    if (value1 == null) value1 = (this.style.removeProperty(name), style(this, name));\\n    return value0 === value1 ? null\\n        : value0 === value00 && value1 === value10 ? interpolate0\\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\\n  };\\n}\\n\\nexport default function(name, value, priority) {\\n  var i = (name += \\\"\\\") === \\\"transform\\\" ? interpolateTransform : interpolate;\\n  return value == null ? this\\n          .styleTween(name, styleRemove(name, i))\\n          .on(\\\"end.style.\\\" + name, styleRemoveEnd(name))\\n      : this.styleTween(name, typeof value === \\\"function\\\"\\n          ? styleFunction(name, i, tweenValue(this, \\\"style.\\\" + name, value))\\n          : styleConstant(name, i, value + \\\"\\\"), priority);\\n}\\n\",\"function styleTween(name, value, priority) {\\n  function tween() {\\n    var node = this, i = value.apply(node, arguments);\\n    return i && function(t) {\\n      node.style.setProperty(name, i(t), priority);\\n    };\\n  }\\n  tween._value = value;\\n  return tween;\\n}\\n\\nexport default function(name, value, priority) {\\n  var key = \\\"style.\\\" + (name += \\\"\\\");\\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\\n  if (value == null) return this.tween(key, null);\\n  if (typeof value !== \\\"function\\\") throw new Error;\\n  return this.tween(key, styleTween(name, value, priority == null ? \\\"\\\" : priority));\\n}\\n\",\"import {get, init} from \\\"./schedule\\\";\\n\\nfunction delayFunction(id, value) {\\n  return function() {\\n    init(this, id).delay = +value.apply(this, arguments);\\n  };\\n}\\n\\nfunction delayConstant(id, value) {\\n  return value = +value, function() {\\n    init(this, id).delay = value;\\n  };\\n}\\n\\nexport default function(value) {\\n  var id = this._id;\\n\\n  return arguments.length\\n      ? this.each((typeof value === \\\"function\\\"\\n          ? delayFunction\\n          : delayConstant)(id, value))\\n      : get(this.node(), id).delay;\\n}\\n\",\"import {get, set} from \\\"./schedule\\\";\\n\\nfunction durationFunction(id, value) {\\n  return function() {\\n    set(this, id).duration = +value.apply(this, arguments);\\n  };\\n}\\n\\nfunction durationConstant(id, value) {\\n  return value = +value, function() {\\n    set(this, id).duration = value;\\n  };\\n}\\n\\nexport default function(value) {\\n  var id = this._id;\\n\\n  return arguments.length\\n      ? this.each((typeof value === \\\"function\\\"\\n          ? durationFunction\\n          : durationConstant)(id, value))\\n      : get(this.node(), id).duration;\\n}\\n\",\"import {get, set} from \\\"./schedule\\\";\\n\\nfunction easeConstant(id, value) {\\n  if (typeof value !== \\\"function\\\") throw new Error;\\n  return function() {\\n    set(this, id).ease = value;\\n  };\\n}\\n\\nexport default function(value) {\\n  var id = this._id;\\n\\n  return arguments.length\\n      ? this.each(easeConstant(id, value))\\n      : get(this.node(), id).ease;\\n}\\n\",\"var exponent = 3;\\n\\nexport var polyIn = (function custom(e) {\\n  e = +e;\\n\\n  function polyIn(t) {\\n    return Math.pow(t, e);\\n  }\\n\\n  polyIn.exponent = custom;\\n\\n  return polyIn;\\n})(exponent);\\n\\nexport var polyOut = (function custom(e) {\\n  e = +e;\\n\\n  function polyOut(t) {\\n    return 1 - Math.pow(1 - t, e);\\n  }\\n\\n  polyOut.exponent = custom;\\n\\n  return polyOut;\\n})(exponent);\\n\\nexport var polyInOut = (function custom(e) {\\n  e = +e;\\n\\n  function polyInOut(t) {\\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\\n  }\\n\\n  polyInOut.exponent = custom;\\n\\n  return polyInOut;\\n})(exponent);\\n\",\"var pi = Math.PI,\\n    halfPi = pi / 2;\\n\\nexport function sinIn(t) {\\n  return 1 - Math.cos(t * halfPi);\\n}\\n\\nexport function sinOut(t) {\\n  return Math.sin(t * halfPi);\\n}\\n\\nexport function sinInOut(t) {\\n  return (1 - Math.cos(pi * t)) / 2;\\n}\\n\",\"export function expIn(t) {\\n  return Math.pow(2, 10 * t - 10);\\n}\\n\\nexport function expOut(t) {\\n  return 1 - Math.pow(2, -10 * t);\\n}\\n\\nexport function expInOut(t) {\\n  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\\n}\\n\",\"export function circleIn(t) {\\n  return 1 - Math.sqrt(1 - t * t);\\n}\\n\\nexport function circleOut(t) {\\n  return Math.sqrt(1 - --t * t);\\n}\\n\\nexport function circleInOut(t) {\\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\\n}\\n\",\"var b1 = 4 / 11,\\n    b2 = 6 / 11,\\n    b3 = 8 / 11,\\n    b4 = 3 / 4,\\n    b5 = 9 / 11,\\n    b6 = 10 / 11,\\n    b7 = 15 / 16,\\n    b8 = 21 / 22,\\n    b9 = 63 / 64,\\n    b0 = 1 / b1 / b1;\\n\\nexport function bounceIn(t) {\\n  return 1 - bounceOut(1 - t);\\n}\\n\\nexport function bounceOut(t) {\\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\\n}\\n\\nexport function bounceInOut(t) {\\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\\n}\\n\",\"var overshoot = 1.70158;\\n\\nexport var backIn = (function custom(s) {\\n  s = +s;\\n\\n  function backIn(t) {\\n    return t * t * ((s + 1) * t - s);\\n  }\\n\\n  backIn.overshoot = custom;\\n\\n  return backIn;\\n})(overshoot);\\n\\nexport var backOut = (function custom(s) {\\n  s = +s;\\n\\n  function backOut(t) {\\n    return --t * t * ((s + 1) * t + s) + 1;\\n  }\\n\\n  backOut.overshoot = custom;\\n\\n  return backOut;\\n})(overshoot);\\n\\nexport var backInOut = (function custom(s) {\\n  s = +s;\\n\\n  function backInOut(t) {\\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\\n  }\\n\\n  backInOut.overshoot = custom;\\n\\n  return backInOut;\\n})(overshoot);\\n\",\"var tau = 2 * Math.PI,\\n    amplitude = 1,\\n    period = 0.3;\\n\\nexport var elasticIn = (function custom(a, p) {\\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\\n\\n  function elasticIn(t) {\\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\\n  }\\n\\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\\n  elasticIn.period = function(p) { return custom(a, p); };\\n\\n  return elasticIn;\\n})(amplitude, period);\\n\\nexport var elasticOut = (function custom(a, p) {\\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\\n\\n  function elasticOut(t) {\\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\\n  }\\n\\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\\n  elasticOut.period = function(p) { return custom(a, p); };\\n\\n  return elasticOut;\\n})(amplitude, period);\\n\\nexport var elasticInOut = (function custom(a, p) {\\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\\n\\n  function elasticInOut(t) {\\n    return ((t = t * 2 - 1) < 0\\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\\n  }\\n\\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\\n  elasticInOut.period = function(p) { return custom(a, p); };\\n\\n  return elasticInOut;\\n})(amplitude, period);\\n\",\"import {Transition, newId} from \\\"../transition/index\\\";\\nimport schedule from \\\"../transition/schedule\\\";\\nimport {easeCubicInOut} from \\\"d3-ease\\\";\\nimport {now} from \\\"d3-timer\\\";\\n\\nvar defaultTiming = {\\n  time: null, // Set on use.\\n  delay: 0,\\n  duration: 250,\\n  ease: easeCubicInOut\\n};\\n\\nfunction inherit(node, id) {\\n  var timing;\\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\\n    if (!(node = node.parentNode)) {\\n      return defaultTiming.time = now(), defaultTiming;\\n    }\\n  }\\n  return timing;\\n}\\n\\nexport default function(name) {\\n  var id,\\n      timing;\\n\\n  if (name instanceof Transition) {\\n    id = name._id, name = name._name;\\n  } else {\\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \\\"\\\";\\n  }\\n\\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\\n      if (node = group[i]) {\\n        schedule(node, name, id, i, group, timing || inherit(node, id));\\n      }\\n    }\\n  }\\n\\n  return new Transition(groups, this._parents, name, id);\\n}\\n\",\"import {selection} from \\\"d3-selection\\\";\\nimport selection_interrupt from \\\"./interrupt\\\";\\nimport selection_transition from \\\"./transition\\\";\\n\\nselection.prototype.interrupt = selection_interrupt;\\nselection.prototype.transition = selection_transition;\\n\",\"import interrupt from \\\"../interrupt\\\";\\n\\nexport default function(name) {\\n  return this.each(function() {\\n    interrupt(this, name);\\n  });\\n}\\n\",\"import {Transition} from \\\"./transition/index\\\";\\nimport {SCHEDULED} from \\\"./transition/schedule\\\";\\n\\nvar root = [null];\\n\\nexport default function(node, name) {\\n  var schedules = node.__transition,\\n      schedule,\\n      i;\\n\\n  if (schedules) {\\n    name = name == null ? null : name + \\\"\\\";\\n    for (i in schedules) {\\n      if ((schedule = schedules[i]).state > SCHEDULED && schedule.name === name) {\\n        return new Transition([[node]], root, name, +i);\\n      }\\n    }\\n  }\\n\\n  return null;\\n}\\n\",\"export default function(x) {\\n  return function() {\\n    return x;\\n  };\\n}\\n\",\"export default function(target, type, selection) {\\n  this.target = target;\\n  this.type = type;\\n  this.selection = selection;\\n}\\n\",\"import {event} from \\\"d3-selection\\\";\\n\\nexport function nopropagation() {\\n  event.stopImmediatePropagation();\\n}\\n\\nexport default function() {\\n  event.preventDefault();\\n  event.stopImmediatePropagation();\\n}\\n\",\"import {dispatch} from \\\"d3-dispatch\\\";\\nimport {dragDisable, dragEnable} from \\\"d3-drag\\\";\\nimport {interpolate} from \\\"d3-interpolate\\\";\\nimport {customEvent, event, mouse, select} from \\\"d3-selection\\\";\\nimport {interrupt} from \\\"d3-transition\\\";\\nimport constant from \\\"./constant\\\";\\nimport BrushEvent from \\\"./event\\\";\\nimport noevent, {nopropagation} from \\\"./noevent\\\";\\n\\nvar MODE_DRAG = {name: \\\"drag\\\"},\\n    MODE_SPACE = {name: \\\"space\\\"},\\n    MODE_HANDLE = {name: \\\"handle\\\"},\\n    MODE_CENTER = {name: \\\"center\\\"};\\n\\nvar X = {\\n  name: \\\"x\\\",\\n  handles: [\\\"e\\\", \\\"w\\\"].map(type),\\n  input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\\n  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\\n};\\n\\nvar Y = {\\n  name: \\\"y\\\",\\n  handles: [\\\"n\\\", \\\"s\\\"].map(type),\\n  input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\\n  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\\n};\\n\\nvar XY = {\\n  name: \\\"xy\\\",\\n  handles: [\\\"n\\\", \\\"e\\\", \\\"s\\\", \\\"w\\\", \\\"nw\\\", \\\"ne\\\", \\\"se\\\", \\\"sw\\\"].map(type),\\n  input: function(xy) { return xy; },\\n  output: function(xy) { return xy; }\\n};\\n\\nvar cursors = {\\n  overlay: \\\"crosshair\\\",\\n  selection: \\\"move\\\",\\n  n: \\\"ns-resize\\\",\\n  e: \\\"ew-resize\\\",\\n  s: \\\"ns-resize\\\",\\n  w: \\\"ew-resize\\\",\\n  nw: \\\"nwse-resize\\\",\\n  ne: \\\"nesw-resize\\\",\\n  se: \\\"nwse-resize\\\",\\n  sw: \\\"nesw-resize\\\"\\n};\\n\\nvar flipX = {\\n  e: \\\"w\\\",\\n  w: \\\"e\\\",\\n  nw: \\\"ne\\\",\\n  ne: \\\"nw\\\",\\n  se: \\\"sw\\\",\\n  sw: \\\"se\\\"\\n};\\n\\nvar flipY = {\\n  n: \\\"s\\\",\\n  s: \\\"n\\\",\\n  nw: \\\"sw\\\",\\n  ne: \\\"se\\\",\\n  se: \\\"ne\\\",\\n  sw: \\\"nw\\\"\\n};\\n\\nvar signsX = {\\n  overlay: +1,\\n  selection: +1,\\n  n: null,\\n  e: +1,\\n  s: null,\\n  w: -1,\\n  nw: -1,\\n  ne: +1,\\n  se: +1,\\n  sw: -1\\n};\\n\\nvar signsY = {\\n  overlay: +1,\\n  selection: +1,\\n  n: -1,\\n  e: null,\\n  s: +1,\\n  w: null,\\n  nw: -1,\\n  ne: -1,\\n  se: +1,\\n  sw: +1\\n};\\n\\nfunction type(t) {\\n  return {type: t};\\n}\\n\\n// Ignore right-click, since that should open the context menu.\\nfunction defaultFilter() {\\n  return !event.button;\\n}\\n\\nfunction defaultExtent() {\\n  var svg = this.ownerSVGElement || this;\\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\\n}\\n\\n// Like d3.local, but with the name “__brush” rather than auto-generated.\\nfunction local(node) {\\n  while (!node.__brush) if (!(node = node.parentNode)) return;\\n  return node.__brush;\\n}\\n\\nfunction empty(extent) {\\n  return extent[0][0] === extent[1][0]\\n      || extent[0][1] === extent[1][1];\\n}\\n\\nexport function brushSelection(node) {\\n  var state = node.__brush;\\n  return state ? state.dim.output(state.selection) : null;\\n}\\n\\nexport function brushX() {\\n  return brush(X);\\n}\\n\\nexport function brushY() {\\n  return brush(Y);\\n}\\n\\nexport default function() {\\n  return brush(XY);\\n}\\n\\nfunction brush(dim) {\\n  var extent = defaultExtent,\\n      filter = defaultFilter,\\n      listeners = dispatch(brush, \\\"start\\\", \\\"brush\\\", \\\"end\\\"),\\n      handleSize = 6,\\n      touchending;\\n\\n  function brush(group) {\\n    var overlay = group\\n        .property(\\\"__brush\\\", initialize)\\n      .selectAll(\\\".overlay\\\")\\n      .data([type(\\\"overlay\\\")]);\\n\\n    overlay.enter().append(\\\"rect\\\")\\n        .attr(\\\"class\\\", \\\"overlay\\\")\\n        .attr(\\\"pointer-events\\\", \\\"all\\\")\\n        .attr(\\\"cursor\\\", cursors.overlay)\\n      .merge(overlay)\\n        .each(function() {\\n          var extent = local(this).extent;\\n          select(this)\\n              .attr(\\\"x\\\", extent[0][0])\\n              .attr(\\\"y\\\", extent[0][1])\\n              .attr(\\\"width\\\", extent[1][0] - extent[0][0])\\n              .attr(\\\"height\\\", extent[1][1] - extent[0][1]);\\n        });\\n\\n    group.selectAll(\\\".selection\\\")\\n      .data([type(\\\"selection\\\")])\\n      .enter().append(\\\"rect\\\")\\n        .attr(\\\"class\\\", \\\"selection\\\")\\n        .attr(\\\"cursor\\\", cursors.selection)\\n        .attr(\\\"fill\\\", \\\"#777\\\")\\n        .attr(\\\"fill-opacity\\\", 0.3)\\n        .attr(\\\"stroke\\\", \\\"#fff\\\")\\n        .attr(\\\"shape-rendering\\\", \\\"crispEdges\\\");\\n\\n    var handle = group.selectAll(\\\".handle\\\")\\n      .data(dim.handles, function(d) { return d.type; });\\n\\n    handle.exit().remove();\\n\\n    handle.enter().append(\\\"rect\\\")\\n        .attr(\\\"class\\\", function(d) { return \\\"handle handle--\\\" + d.type; })\\n        .attr(\\\"cursor\\\", function(d) { return cursors[d.type]; });\\n\\n    group\\n        .each(redraw)\\n        .attr(\\\"fill\\\", \\\"none\\\")\\n        .attr(\\\"pointer-events\\\", \\\"all\\\")\\n        .style(\\\"-webkit-tap-highlight-color\\\", \\\"rgba(0,0,0,0)\\\")\\n        .on(\\\"mousedown.brush touchstart.brush\\\", started);\\n  }\\n\\n  brush.move = function(group, selection) {\\n    if (group.selection) {\\n      group\\n          .on(\\\"start.brush\\\", function() { emitter(this, arguments).beforestart().start(); })\\n          .on(\\\"interrupt.brush end.brush\\\", function() { emitter(this, arguments).end(); })\\n          .tween(\\\"brush\\\", function() {\\n            var that = this,\\n                state = that.__brush,\\n                emit = emitter(that, arguments),\\n                selection0 = state.selection,\\n                selection1 = dim.input(typeof selection === \\\"function\\\" ? selection.apply(this, arguments) : selection, state.extent),\\n                i = interpolate(selection0, selection1);\\n\\n            function tween(t) {\\n              state.selection = t === 1 && empty(selection1) ? null : i(t);\\n              redraw.call(that);\\n              emit.brush();\\n            }\\n\\n            return selection0 && selection1 ? tween : tween(1);\\n          });\\n    } else {\\n      group\\n          .each(function() {\\n            var that = this,\\n                args = arguments,\\n                state = that.__brush,\\n                selection1 = dim.input(typeof selection === \\\"function\\\" ? selection.apply(that, args) : selection, state.extent),\\n                emit = emitter(that, args).beforestart();\\n\\n            interrupt(that);\\n            state.selection = selection1 == null || empty(selection1) ? null : selection1;\\n            redraw.call(that);\\n            emit.start().brush().end();\\n          });\\n    }\\n  };\\n\\n  function redraw() {\\n    var group = select(this),\\n        selection = local(this).selection;\\n\\n    if (selection) {\\n      group.selectAll(\\\".selection\\\")\\n          .style(\\\"display\\\", null)\\n          .attr(\\\"x\\\", selection[0][0])\\n          .attr(\\\"y\\\", selection[0][1])\\n          .attr(\\\"width\\\", selection[1][0] - selection[0][0])\\n          .attr(\\\"height\\\", selection[1][1] - selection[0][1]);\\n\\n      group.selectAll(\\\".handle\\\")\\n          .style(\\\"display\\\", null)\\n          .attr(\\\"x\\\", function(d) { return d.type[d.type.length - 1] === \\\"e\\\" ? selection[1][0] - handleSize / 2 : selection[0][0] - handleSize / 2; })\\n          .attr(\\\"y\\\", function(d) { return d.type[0] === \\\"s\\\" ? selection[1][1] - handleSize / 2 : selection[0][1] - handleSize / 2; })\\n          .attr(\\\"width\\\", function(d) { return d.type === \\\"n\\\" || d.type === \\\"s\\\" ? selection[1][0] - selection[0][0] + handleSize : handleSize; })\\n          .attr(\\\"height\\\", function(d) { return d.type === \\\"e\\\" || d.type === \\\"w\\\" ? selection[1][1] - selection[0][1] + handleSize : handleSize; });\\n    }\\n\\n    else {\\n      group.selectAll(\\\".selection,.handle\\\")\\n          .style(\\\"display\\\", \\\"none\\\")\\n          .attr(\\\"x\\\", null)\\n          .attr(\\\"y\\\", null)\\n          .attr(\\\"width\\\", null)\\n          .attr(\\\"height\\\", null);\\n    }\\n  }\\n\\n  function emitter(that, args) {\\n    return that.__brush.emitter || new Emitter(that, args);\\n  }\\n\\n  function Emitter(that, args) {\\n    this.that = that;\\n    this.args = args;\\n    this.state = that.__brush;\\n    this.active = 0;\\n  }\\n\\n  Emitter.prototype = {\\n    beforestart: function() {\\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\\n      return this;\\n    },\\n    start: function() {\\n      if (this.starting) this.starting = false, this.emit(\\\"start\\\");\\n      return this;\\n    },\\n    brush: function() {\\n      this.emit(\\\"brush\\\");\\n      return this;\\n    },\\n    end: function() {\\n      if (--this.active === 0) delete this.state.emitter, this.emit(\\\"end\\\");\\n      return this;\\n    },\\n    emit: function(type) {\\n      customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\\n    }\\n  };\\n\\n  function started() {\\n    if (event.touches) { if (event.changedTouches.length < event.touches.length) return noevent(); }\\n    else if (touchending) return;\\n    if (!filter.apply(this, arguments)) return;\\n\\n    var that = this,\\n        type = event.target.__data__.type,\\n        mode = (event.metaKey ? type = \\\"overlay\\\" : type) === \\\"selection\\\" ? MODE_DRAG : (event.altKey ? MODE_CENTER : MODE_HANDLE),\\n        signX = dim === Y ? null : signsX[type],\\n        signY = dim === X ? null : signsY[type],\\n        state = local(that),\\n        extent = state.extent,\\n        selection = state.selection,\\n        W = extent[0][0], w0, w1,\\n        N = extent[0][1], n0, n1,\\n        E = extent[1][0], e0, e1,\\n        S = extent[1][1], s0, s1,\\n        dx,\\n        dy,\\n        moving,\\n        shifting = signX && signY && event.shiftKey,\\n        lockX,\\n        lockY,\\n        point0 = mouse(that),\\n        point = point0,\\n        emit = emitter(that, arguments).beforestart();\\n\\n    if (type === \\\"overlay\\\") {\\n      state.selection = selection = [\\n        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\\n        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\\n      ];\\n    } else {\\n      w0 = selection[0][0];\\n      n0 = selection[0][1];\\n      e0 = selection[1][0];\\n      s0 = selection[1][1];\\n    }\\n\\n    w1 = w0;\\n    n1 = n0;\\n    e1 = e0;\\n    s1 = s0;\\n\\n    var group = select(that)\\n        .attr(\\\"pointer-events\\\", \\\"none\\\");\\n\\n    var overlay = group.selectAll(\\\".overlay\\\")\\n        .attr(\\\"cursor\\\", cursors[type]);\\n\\n    if (event.touches) {\\n      group\\n          .on(\\\"touchmove.brush\\\", moved, true)\\n          .on(\\\"touchend.brush touchcancel.brush\\\", ended, true);\\n    } else {\\n      var view = select(event.view)\\n          .on(\\\"keydown.brush\\\", keydowned, true)\\n          .on(\\\"keyup.brush\\\", keyupped, true)\\n          .on(\\\"mousemove.brush\\\", moved, true)\\n          .on(\\\"mouseup.brush\\\", ended, true);\\n\\n      dragDisable(event.view);\\n    }\\n\\n    nopropagation();\\n    interrupt(that);\\n    redraw.call(that);\\n    emit.start();\\n\\n    function moved() {\\n      var point1 = mouse(that);\\n      if (shifting && !lockX && !lockY) {\\n        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\\n        else lockX = true;\\n      }\\n      point = point1;\\n      moving = true;\\n      noevent();\\n      move();\\n    }\\n\\n    function move() {\\n      var t;\\n\\n      dx = point[0] - point0[0];\\n      dy = point[1] - point0[1];\\n\\n      switch (mode) {\\n        case MODE_SPACE:\\n        case MODE_DRAG: {\\n          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\\n          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\\n          break;\\n        }\\n        case MODE_HANDLE: {\\n          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\\n          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\\n          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\\n          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\\n          break;\\n        }\\n        case MODE_CENTER: {\\n          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\\n          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\\n          break;\\n        }\\n      }\\n\\n      if (e1 < w1) {\\n        signX *= -1;\\n        t = w0, w0 = e0, e0 = t;\\n        t = w1, w1 = e1, e1 = t;\\n        if (type in flipX) overlay.attr(\\\"cursor\\\", cursors[type = flipX[type]]);\\n      }\\n\\n      if (s1 < n1) {\\n        signY *= -1;\\n        t = n0, n0 = s0, s0 = t;\\n        t = n1, n1 = s1, s1 = t;\\n        if (type in flipY) overlay.attr(\\\"cursor\\\", cursors[type = flipY[type]]);\\n      }\\n\\n      if (state.selection) selection = state.selection; // May be set by brush.move!\\n      if (lockX) w1 = selection[0][0], e1 = selection[1][0];\\n      if (lockY) n1 = selection[0][1], s1 = selection[1][1];\\n\\n      if (selection[0][0] !== w1\\n          || selection[0][1] !== n1\\n          || selection[1][0] !== e1\\n          || selection[1][1] !== s1) {\\n        state.selection = [[w1, n1], [e1, s1]];\\n        redraw.call(that);\\n        emit.brush();\\n      }\\n    }\\n\\n    function ended() {\\n      nopropagation();\\n      if (event.touches) {\\n        if (event.touches.length) return;\\n        if (touchending) clearTimeout(touchending);\\n        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\\n        group.on(\\\"touchmove.brush touchend.brush touchcancel.brush\\\", null);\\n      } else {\\n        dragEnable(event.view, moving);\\n        view.on(\\\"keydown.brush keyup.brush mousemove.brush mouseup.brush\\\", null);\\n      }\\n      group.attr(\\\"pointer-events\\\", \\\"all\\\");\\n      overlay.attr(\\\"cursor\\\", cursors.overlay);\\n      if (state.selection) selection = state.selection; // May be set by brush.move (on start)!\\n      if (empty(selection)) state.selection = null, redraw.call(that);\\n      emit.end();\\n    }\\n\\n    function keydowned() {\\n      switch (event.keyCode) {\\n        case 16: { // SHIFT\\n          shifting = signX && signY;\\n          break;\\n        }\\n        case 18: { // ALT\\n          if (mode === MODE_HANDLE) {\\n            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\\n            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\\n            mode = MODE_CENTER;\\n            move();\\n          }\\n          break;\\n        }\\n        case 32: { // SPACE; takes priority over ALT\\n          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\\n            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\\n            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\\n            mode = MODE_SPACE;\\n            overlay.attr(\\\"cursor\\\", cursors.selection);\\n            move();\\n          }\\n          break;\\n        }\\n        default: return;\\n      }\\n      noevent();\\n    }\\n\\n    function keyupped() {\\n      switch (event.keyCode) {\\n        case 16: { // SHIFT\\n          if (shifting) {\\n            lockX = lockY = shifting = false;\\n            move();\\n          }\\n          break;\\n        }\\n        case 18: { // ALT\\n          if (mode === MODE_CENTER) {\\n            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\\n            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\\n            mode = MODE_HANDLE;\\n            move();\\n          }\\n          break;\\n        }\\n        case 32: { // SPACE\\n          if (mode === MODE_SPACE) {\\n            if (event.altKey) {\\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\\n              mode = MODE_CENTER;\\n            } else {\\n              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\\n              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\\n              mode = MODE_HANDLE;\\n            }\\n            overlay.attr(\\\"cursor\\\", cursors[type]);\\n            move();\\n          }\\n          break;\\n        }\\n        default: return;\\n      }\\n      noevent();\\n    }\\n  }\\n\\n  function initialize() {\\n    var state = this.__brush || {selection: null};\\n    state.extent = extent.apply(this, arguments);\\n    state.dim = dim;\\n    return state;\\n  }\\n\\n  brush.extent = function(_) {\\n    return arguments.length ? (extent = typeof _ === \\\"function\\\" ? _ : constant([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\\n  };\\n\\n  brush.filter = function(_) {\\n    return arguments.length ? (filter = typeof _ === \\\"function\\\" ? _ : constant(!!_), brush) : filter;\\n  };\\n\\n  brush.handleSize = function(_) {\\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\\n  };\\n\\n  brush.on = function() {\\n    var value = listeners.on.apply(listeners, arguments);\\n    return value === listeners ? brush : value;\\n  };\\n\\n  return brush;\\n}\\n\",\"export var cos = Math.cos;\\nexport var sin = Math.sin;\\nexport var pi = Math.PI;\\nexport var halfPi = pi / 2;\\nexport var tau = pi * 2;\\nexport var max = Math.max;\\n\",\"import {range} from \\\"d3-array\\\";\\nimport {max, tau} from \\\"./math\\\";\\n\\nfunction compareValue(compare) {\\n  return function(a, b) {\\n    return compare(\\n      a.source.value + a.target.value,\\n      b.source.value + b.target.value\\n    );\\n  };\\n}\\n\\nexport default function() {\\n  var padAngle = 0,\\n      sortGroups = null,\\n      sortSubgroups = null,\\n      sortChords = null;\\n\\n  function chord(matrix) {\\n    var n = matrix.length,\\n        groupSums = [],\\n        groupIndex = range(n),\\n        subgroupIndex = [],\\n        chords = [],\\n        groups = chords.groups = new Array(n),\\n        subgroups = new Array(n * n),\\n        k,\\n        x,\\n        x0,\\n        dx,\\n        i,\\n        j;\\n\\n    // Compute the sum.\\n    k = 0, i = -1; while (++i < n) {\\n      x = 0, j = -1; while (++j < n) {\\n        x += matrix[i][j];\\n      }\\n      groupSums.push(x);\\n      subgroupIndex.push(range(n));\\n      k += x;\\n    }\\n\\n    // Sort groups…\\n    if (sortGroups) groupIndex.sort(function(a, b) {\\n      return sortGroups(groupSums[a], groupSums[b]);\\n    });\\n\\n    // Sort subgroups…\\n    if (sortSubgroups) subgroupIndex.forEach(function(d, i) {\\n      d.sort(function(a, b) {\\n        return sortSubgroups(matrix[i][a], matrix[i][b]);\\n      });\\n    });\\n\\n    // Convert the sum to scaling factor for [0, 2pi].\\n    // TODO Allow start and end angle to be specified?\\n    // TODO Allow padding to be specified as percentage?\\n    k = max(0, tau - padAngle * n) / k;\\n    dx = k ? padAngle : tau / n;\\n\\n    // Compute the start and end angle for each group and subgroup.\\n    // Note: Opera has a bug reordering object literal properties!\\n    x = 0, i = -1; while (++i < n) {\\n      x0 = x, j = -1; while (++j < n) {\\n        var di = groupIndex[i],\\n            dj = subgroupIndex[di][j],\\n            v = matrix[di][dj],\\n            a0 = x,\\n            a1 = x += v * k;\\n        subgroups[dj * n + di] = {\\n          index: di,\\n          subindex: dj,\\n          startAngle: a0,\\n          endAngle: a1,\\n          value: v\\n        };\\n      }\\n      groups[di] = {\\n        index: di,\\n        startAngle: x0,\\n        endAngle: x,\\n        value: groupSums[di]\\n      };\\n      x += dx;\\n    }\\n\\n    // Generate chords for each (non-empty) subgroup-subgroup link.\\n    i = -1; while (++i < n) {\\n      j = i - 1; while (++j < n) {\\n        var source = subgroups[j * n + i],\\n            target = subgroups[i * n + j];\\n        if (source.value || target.value) {\\n          chords.push(source.value < target.value\\n              ? {source: target, target: source}\\n              : {source: source, target: target});\\n        }\\n      }\\n    }\\n\\n    return sortChords ? chords.sort(sortChords) : chords;\\n  }\\n\\n  chord.padAngle = function(_) {\\n    return arguments.length ? (padAngle = max(0, _), chord) : padAngle;\\n  };\\n\\n  chord.sortGroups = function(_) {\\n    return arguments.length ? (sortGroups = _, chord) : sortGroups;\\n  };\\n\\n  chord.sortSubgroups = function(_) {\\n    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\\n  };\\n\\n  chord.sortChords = function(_) {\\n    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\\n  };\\n\\n  return chord;\\n}\\n\",\"export var slice = Array.prototype.slice;\\n\",\"export default function(x) {\\n  return function() {\\n    return x;\\n  };\\n}\\n\",\"var pi = Math.PI,\\n    tau = 2 * pi,\\n    epsilon = 1e-6,\\n    tauEpsilon = tau - epsilon;\\n\\nfunction Path() {\\n  this._x0 = this._y0 = // start of current subpath\\n  this._x1 = this._y1 = null; // end of current subpath\\n  this._ = \\\"\\\";\\n}\\n\\nfunction path() {\\n  return new Path;\\n}\\n\\nPath.prototype = path.prototype = {\\n  constructor: Path,\\n  moveTo: function(x, y) {\\n    this._ += \\\"M\\\" + (this._x0 = this._x1 = +x) + \\\",\\\" + (this._y0 = this._y1 = +y);\\n  },\\n  closePath: function() {\\n    if (this._x1 !== null) {\\n      this._x1 = this._x0, this._y1 = this._y0;\\n      this._ += \\\"Z\\\";\\n    }\\n  },\\n  lineTo: function(x, y) {\\n    this._ += \\\"L\\\" + (this._x1 = +x) + \\\",\\\" + (this._y1 = +y);\\n  },\\n  quadraticCurveTo: function(x1, y1, x, y) {\\n    this._ += \\\"Q\\\" + (+x1) + \\\",\\\" + (+y1) + \\\",\\\" + (this._x1 = +x) + \\\",\\\" + (this._y1 = +y);\\n  },\\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\\n    this._ += \\\"C\\\" + (+x1) + \\\",\\\" + (+y1) + \\\",\\\" + (+x2) + \\\",\\\" + (+y2) + \\\",\\\" + (this._x1 = +x) + \\\",\\\" + (this._y1 = +y);\\n  },\\n  arcTo: function(x1, y1, x2, y2, r) {\\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\\n    var x0 = this._x1,\\n        y0 = this._y1,\\n        x21 = x2 - x1,\\n        y21 = y2 - y1,\\n        x01 = x0 - x1,\\n        y01 = y0 - y1,\\n        l01_2 = x01 * x01 + y01 * y01;\\n\\n    // Is the radius negative? Error.\\n    if (r < 0) throw new Error(\\\"negative radius: \\\" + r);\\n\\n    // Is this path empty? Move to (x1,y1).\\n    if (this._x1 === null) {\\n      this._ += \\\"M\\\" + (this._x1 = x1) + \\\",\\\" + (this._y1 = y1);\\n    }\\n\\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\\n    else if (!(l01_2 > epsilon)) {}\\n\\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\\n    // Or, is the radius zero? Line to (x1,y1).\\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\\n      this._ += \\\"L\\\" + (this._x1 = x1) + \\\",\\\" + (this._y1 = y1);\\n    }\\n\\n    // Otherwise, draw an arc!\\n    else {\\n      var x20 = x2 - x0,\\n          y20 = y2 - y0,\\n          l21_2 = x21 * x21 + y21 * y21,\\n          l20_2 = x20 * x20 + y20 * y20,\\n          l21 = Math.sqrt(l21_2),\\n          l01 = Math.sqrt(l01_2),\\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\\n          t01 = l / l01,\\n          t21 = l / l21;\\n\\n      // If the start tangent is not coincident with (x0,y0), line to.\\n      if (Math.abs(t01 - 1) > epsilon) {\\n        this._ += \\\"L\\\" + (x1 + t01 * x01) + \\\",\\\" + (y1 + t01 * y01);\\n      }\\n\\n      this._ += \\\"A\\\" + r + \\\",\\\" + r + \\\",0,0,\\\" + (+(y01 * x20 > x01 * y20)) + \\\",\\\" + (this._x1 = x1 + t21 * x21) + \\\",\\\" + (this._y1 = y1 + t21 * y21);\\n    }\\n  },\\n  arc: function(x, y, r, a0, a1, ccw) {\\n    x = +x, y = +y, r = +r;\\n    var dx = r * Math.cos(a0),\\n        dy = r * Math.sin(a0),\\n        x0 = x + dx,\\n        y0 = y + dy,\\n        cw = 1 ^ ccw,\\n        da = ccw ? a0 - a1 : a1 - a0;\\n\\n    // Is the radius negative? Error.\\n    if (r < 0) throw new Error(\\\"negative radius: \\\" + r);\\n\\n    // Is this path empty? Move to (x0,y0).\\n    if (this._x1 === null) {\\n      this._ += \\\"M\\\" + x0 + \\\",\\\" + y0;\\n    }\\n\\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\\n      this._ += \\\"L\\\" + x0 + \\\",\\\" + y0;\\n    }\\n\\n    // Is this arc empty? We’re done.\\n    if (!r) return;\\n\\n    // Does the angle go the wrong way? Flip the direction.\\n    if (da < 0) da = da % tau + tau;\\n\\n    // Is this a complete circle? Draw two arcs to complete the circle.\\n    if (da > tauEpsilon) {\\n      this._ += \\\"A\\\" + r + \\\",\\\" + r + \\\",0,1,\\\" + cw + \\\",\\\" + (x - dx) + \\\",\\\" + (y - dy) + \\\"A\\\" + r + \\\",\\\" + r + \\\",0,1,\\\" + cw + \\\",\\\" + (this._x1 = x0) + \\\",\\\" + (this._y1 = y0);\\n    }\\n\\n    // Is this arc non-empty? Draw an arc!\\n    else if (da > epsilon) {\\n      this._ += \\\"A\\\" + r + \\\",\\\" + r + \\\",0,\\\" + (+(da >= pi)) + \\\",\\\" + cw + \\\",\\\" + (this._x1 = x + r * Math.cos(a1)) + \\\",\\\" + (this._y1 = y + r * Math.sin(a1));\\n    }\\n  },\\n  rect: function(x, y, w, h) {\\n    this._ += \\\"M\\\" + (this._x0 = this._x1 = +x) + \\\",\\\" + (this._y0 = this._y1 = +y) + \\\"h\\\" + (+w) + \\\"v\\\" + (+h) + \\\"h\\\" + (-w) + \\\"Z\\\";\\n  },\\n  toString: function() {\\n    return this._;\\n  }\\n};\\n\\nexport default path;\\n\",\"import {slice} from \\\"./array\\\";\\nimport constant from \\\"./constant\\\";\\nimport {cos, halfPi, sin} from \\\"./math\\\";\\nimport {path} from \\\"d3-path\\\";\\n\\nfunction defaultSource(d) {\\n  return d.source;\\n}\\n\\nfunction defaultTarget(d) {\\n  return d.target;\\n}\\n\\nfunction defaultRadius(d) {\\n  return d.radius;\\n}\\n\\nfunction defaultStartAngle(d) {\\n  return d.startAngle;\\n}\\n\\nfunction defaultEndAngle(d) {\\n  return d.endAngle;\\n}\\n\\nexport default function() {\\n  var source = defaultSource,\\n      target = defaultTarget,\\n      radius = defaultRadius,\\n      startAngle = defaultStartAngle,\\n      endAngle = defaultEndAngle,\\n      context = null;\\n\\n  function ribbon() {\\n    var buffer,\\n        argv = slice.call(arguments),\\n        s = source.apply(this, argv),\\n        t = target.apply(this, argv),\\n        sr = +radius.apply(this, (argv[0] = s, argv)),\\n        sa0 = startAngle.apply(this, argv) - halfPi,\\n        sa1 = endAngle.apply(this, argv) - halfPi,\\n        sx0 = sr * cos(sa0),\\n        sy0 = sr * sin(sa0),\\n        tr = +radius.apply(this, (argv[0] = t, argv)),\\n        ta0 = startAngle.apply(this, argv) - halfPi,\\n        ta1 = endAngle.apply(this, argv) - halfPi;\\n\\n    if (!context) context = buffer = path();\\n\\n    context.moveTo(sx0, sy0);\\n    context.arc(0, 0, sr, sa0, sa1);\\n    if (sa0 !== ta0 || sa1 !== ta1) { // TODO sr !== tr?\\n      context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\\n      context.arc(0, 0, tr, ta0, ta1);\\n    }\\n    context.quadraticCurveTo(0, 0, sx0, sy0);\\n    context.closePath();\\n\\n    if (buffer) return context = null, buffer + \\\"\\\" || null;\\n  }\\n\\n  ribbon.radius = function(_) {\\n    return arguments.length ? (radius = typeof _ === \\\"function\\\" ? _ : constant(+_), ribbon) : radius;\\n  };\\n\\n  ribbon.startAngle = function(_) {\\n    return arguments.length ? (startAngle = typeof _ === \\\"function\\\" ? _ : constant(+_), ribbon) : startAngle;\\n  };\\n\\n  ribbon.endAngle = function(_) {\\n    return arguments.length ? (endAngle = typeof _ === \\\"function\\\" ? _ : constant(+_), ribbon) : endAngle;\\n  };\\n\\n  ribbon.source = function(_) {\\n    return arguments.length ? (source = _, ribbon) : source;\\n  };\\n\\n  ribbon.target = function(_) {\\n    return arguments.length ? (target = _, ribbon) : target;\\n  };\\n\\n  ribbon.context = function(_) {\\n    return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;\\n  };\\n\\n  return ribbon;\\n}\\n\",\"export var prefix = \\\"$\\\";\\n\\nfunction Map() {}\\n\\nMap.prototype = map.prototype = {\\n  constructor: Map,\\n  has: function(key) {\\n    return (prefix + key) in this;\\n  },\\n  get: function(key) {\\n    return this[prefix + key];\\n  },\\n  set: function(key, value) {\\n    this[prefix + key] = value;\\n    return this;\\n  },\\n  remove: function(key) {\\n    var property = prefix + key;\\n    return property in this && delete this[property];\\n  },\\n  clear: function() {\\n    for (var property in this) if (property[0] === prefix) delete this[property];\\n  },\\n  keys: function() {\\n    var keys = [];\\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\\n    return keys;\\n  },\\n  values: function() {\\n    var values = [];\\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\\n    return values;\\n  },\\n  entries: function() {\\n    var entries = [];\\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\\n    return entries;\\n  },\\n  size: function() {\\n    var size = 0;\\n    for (var property in this) if (property[0] === prefix) ++size;\\n    return size;\\n  },\\n  empty: function() {\\n    for (var property in this) if (property[0] === prefix) return false;\\n    return true;\\n  },\\n  each: function(f) {\\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\\n  }\\n};\\n\\nfunction map(object, f) {\\n  var map = new Map;\\n\\n  // Copy constructor.\\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\\n\\n  // Index array by numeric index or specified key function.\\n  else if (Array.isArray(object)) {\\n    var i = -1,\\n        n = object.length,\\n        o;\\n\\n    if (f == null) while (++i < n) map.set(i, object[i]);\\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\\n  }\\n\\n  // Convert object to map.\\n  else if (object) for (var key in object) map.set(key, object[key]);\\n\\n  return map;\\n}\\n\\nexport default map;\\n\",\"import map from \\\"./map\\\";\\n\\nexport default function() {\\n  var keys = [],\\n      sortKeys = [],\\n      sortValues,\\n      rollup,\\n      nest;\\n\\n  function apply(array, depth, createResult, setResult) {\\n    if (depth >= keys.length) {\\n      if (sortValues != null) array.sort(sortValues);\\n      return rollup != null ? rollup(array) : array;\\n    }\\n\\n    var i = -1,\\n        n = array.length,\\n        key = keys[depth++],\\n        keyValue,\\n        value,\\n        valuesByKey = map(),\\n        values,\\n        result = createResult();\\n\\n    while (++i < n) {\\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \\\"\\\")) {\\n        values.push(value);\\n      } else {\\n        valuesByKey.set(keyValue, [value]);\\n      }\\n    }\\n\\n    valuesByKey.each(function(values, key) {\\n      setResult(result, key, apply(values, depth, createResult, setResult));\\n    });\\n\\n    return result;\\n  }\\n\\n  function entries(map, depth) {\\n    if (++depth > keys.length) return map;\\n    var array, sortKey = sortKeys[depth - 1];\\n    if (rollup != null && depth >= keys.length) array = map.entries();\\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\\n  }\\n\\n  return nest = {\\n    object: function(array) { return apply(array, 0, createObject, setObject); },\\n    map: function(array) { return apply(array, 0, createMap, setMap); },\\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\\n    key: function(d) { keys.push(d); return nest; },\\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\\n    sortValues: function(order) { sortValues = order; return nest; },\\n    rollup: function(f) { rollup = f; return nest; }\\n  };\\n}\\n\\nfunction createObject() {\\n  return {};\\n}\\n\\nfunction setObject(object, key, value) {\\n  object[key] = value;\\n}\\n\\nfunction createMap() {\\n  return map();\\n}\\n\\nfunction setMap(map, key, value) {\\n  map.set(key, value);\\n}\\n\",\"import {default as map, prefix} from \\\"./map\\\";\\n\\nfunction Set() {}\\n\\nvar proto = map.prototype;\\n\\nSet.prototype = set.prototype = {\\n  constructor: Set,\\n  has: proto.has,\\n  add: function(value) {\\n    value += \\\"\\\";\\n    this[prefix + value] = value;\\n    return this;\\n  },\\n  remove: proto.remove,\\n  clear: proto.clear,\\n  values: proto.keys,\\n  size: proto.size,\\n  empty: proto.empty,\\n  each: proto.each\\n};\\n\\nfunction set(object, f) {\\n  var set = new Set;\\n\\n  // Copy constructor.\\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\\n\\n  // Otherwise, assume it’s an array.\\n  else if (object) {\\n    var i = -1, n = object.length;\\n    if (f == null) while (++i < n) set.add(object[i]);\\n    else while (++i < n) set.add(f(object[i], i, object));\\n  }\\n\\n  return set;\\n}\\n\\nexport default set;\\n\",\"export default function(map) {\\n  var keys = [];\\n  for (var key in map) keys.push(key);\\n  return keys;\\n}\\n\",\"export default function(map) {\\n  var values = [];\\n  for (var key in map) values.push(map[key]);\\n  return values;\\n}\\n\",\"export default function(map) {\\n  var entries = [];\\n  for (var key in map) entries.push({key: key, value: map[key]});\\n  return entries;\\n}\\n\",\"var array = Array.prototype;\\n\\nexport var slice = array.slice;\\n\",\"export default function(a, b) {\\n  return a - b;\\n}\\n\",\"export default function(ring) {\\n  var i = 0, n = ring.length, area = ring[n - 1][1] * ring[0][0] - ring[n - 1][0] * ring[0][1];\\n  while (++i < n) area += ring[i - 1][1] * ring[i][0] - ring[i - 1][0] * ring[i][1];\\n  return area;\\n}\\n\",\"export default function(x) {\\n  return function() {\\n    return x;\\n  };\\n}\\n\",\"export default function(ring, hole) {\\n  var i = -1, n = hole.length, c;\\n  while (++i < n) if (c = ringContains(ring, hole[i])) return c;\\n  return 0;\\n}\\n\\nfunction ringContains(ring, point) {\\n  var x = point[0], y = point[1], contains = -1;\\n  for (var i = 0, n = ring.length, j = n - 1; i < n; j = i++) {\\n    var pi = ring[i], xi = pi[0], yi = pi[1], pj = ring[j], xj = pj[0], yj = pj[1];\\n    if (segmentContains(pi, pj, point)) return 0;\\n    if (((yi > y) !== (yj > y)) && ((x < (xj - xi) * (y - yi) / (yj - yi) + xi))) contains = -contains;\\n  }\\n  return contains;\\n}\\n\\nfunction segmentContains(a, b, c) {\\n  var i; return collinear(a, b, c) && within(a[i = +(a[0] === b[0])], c[i], b[i]);\\n}\\n\\nfunction collinear(a, b, c) {\\n  return (b[0] - a[0]) * (c[1] - a[1]) === (c[0] - a[0]) * (b[1] - a[1]);\\n}\\n\\nfunction within(p, q, r) {\\n  return p <= q && q <= r || r <= q && q <= p;\\n}\\n\",\"export default function() {}\\n\",\"import {extent, thresholdSturges, tickStep, range} from \\\"d3-array\\\";\\nimport {slice} from \\\"./array\\\";\\nimport ascending from \\\"./ascending\\\";\\nimport area from \\\"./area\\\";\\nimport constant from \\\"./constant\\\";\\nimport contains from \\\"./contains\\\";\\nimport noop from \\\"./noop\\\";\\n\\nvar cases = [\\n  [],\\n  [[[1.0, 1.5], [0.5, 1.0]]],\\n  [[[1.5, 1.0], [1.0, 1.5]]],\\n  [[[1.5, 1.0], [0.5, 1.0]]],\\n  [[[1.0, 0.5], [1.5, 1.0]]],\\n  [[[1.0, 1.5], [0.5, 1.0]], [[1.0, 0.5], [1.5, 1.0]]],\\n  [[[1.0, 0.5], [1.0, 1.5]]],\\n  [[[1.0, 0.5], [0.5, 1.0]]],\\n  [[[0.5, 1.0], [1.0, 0.5]]],\\n  [[[1.0, 1.5], [1.0, 0.5]]],\\n  [[[0.5, 1.0], [1.0, 0.5]], [[1.5, 1.0], [1.0, 1.5]]],\\n  [[[1.5, 1.0], [1.0, 0.5]]],\\n  [[[0.5, 1.0], [1.5, 1.0]]],\\n  [[[1.0, 1.5], [1.5, 1.0]]],\\n  [[[0.5, 1.0], [1.0, 1.5]]],\\n  []\\n];\\n\\nexport default function() {\\n  var dx = 1,\\n      dy = 1,\\n      threshold = thresholdSturges,\\n      smooth = smoothLinear;\\n\\n  function contours(values) {\\n    var tz = threshold(values);\\n\\n    // Convert number of thresholds into uniform thresholds.\\n    if (!Array.isArray(tz)) {\\n      var domain = extent(values), start = domain[0], stop = domain[1];\\n      tz = tickStep(start, stop, tz);\\n      tz = range(Math.floor(start / tz) * tz, Math.floor(stop / tz) * tz, tz);\\n    } else {\\n      tz = tz.slice().sort(ascending);\\n    }\\n\\n    return tz.map(function(value) {\\n      return contour(values, value);\\n    });\\n  }\\n\\n  // Accumulate, smooth contour rings, assign holes to exterior rings.\\n  // Based on https://github.com/mbostock/shapefile/blob/v0.6.2/shp/polygon.js\\n  function contour(values, value) {\\n    var polygons = [],\\n        holes = [];\\n\\n    isorings(values, value, function(ring) {\\n      smooth(ring, values, value);\\n      if (area(ring) > 0) polygons.push([ring]);\\n      else holes.push(ring);\\n    });\\n\\n    holes.forEach(function(hole) {\\n      for (var i = 0, n = polygons.length, polygon; i < n; ++i) {\\n        if (contains((polygon = polygons[i])[0], hole) !== -1) {\\n          polygon.push(hole);\\n          return;\\n        }\\n      }\\n    });\\n\\n    return {\\n      type: \\\"MultiPolygon\\\",\\n      value: value,\\n      coordinates: polygons\\n    };\\n  }\\n\\n  // Marching squares with isolines stitched into rings.\\n  // Based on https://github.com/topojson/topojson-client/blob/v3.0.0/src/stitch.js\\n  function isorings(values, value, callback) {\\n    var fragmentByStart = new Array,\\n        fragmentByEnd = new Array,\\n        x, y, t0, t1, t2, t3;\\n\\n    // Special case for the first row (y = -1, t2 = t3 = 0).\\n    x = y = -1;\\n    t1 = values[0] >= value;\\n    cases[t1 << 1].forEach(stitch);\\n    while (++x < dx - 1) {\\n      t0 = t1, t1 = values[x + 1] >= value;\\n      cases[t0 | t1 << 1].forEach(stitch);\\n    }\\n    cases[t1 << 0].forEach(stitch);\\n\\n    // General case for the intermediate rows.\\n    while (++y < dy - 1) {\\n      x = -1;\\n      t1 = values[y * dx + dx] >= value;\\n      t2 = values[y * dx] >= value;\\n      cases[t1 << 1 | t2 << 2].forEach(stitch);\\n      while (++x < dx - 1) {\\n        t0 = t1, t1 = values[y * dx + dx + x + 1] >= value;\\n        t3 = t2, t2 = values[y * dx + x + 1] >= value;\\n        cases[t0 | t1 << 1 | t2 << 2 | t3 << 3].forEach(stitch);\\n      }\\n      cases[t1 | t2 << 3].forEach(stitch);\\n    }\\n\\n    // Special case for the last row (y = dy - 1, t0 = t1 = 0).\\n    x = -1;\\n    t2 = values[y * dx] >= value;\\n    cases[t2 << 2].forEach(stitch);\\n    while (++x < dx - 1) {\\n      t3 = t2, t2 = values[y * dx + x + 1] >= value;\\n      cases[t2 << 2 | t3 << 3].forEach(stitch);\\n    }\\n    cases[t2 << 3].forEach(stitch);\\n\\n    function stitch(line) {\\n      var start = [line[0][0] + x, line[0][1] + y],\\n          end = [line[1][0] + x, line[1][1] + y],\\n          startIndex = index(start),\\n          endIndex = index(end),\\n          f, g;\\n      if (f = fragmentByEnd[startIndex]) {\\n        if (g = fragmentByStart[endIndex]) {\\n          delete fragmentByEnd[f.end];\\n          delete fragmentByStart[g.start];\\n          if (f === g) {\\n            f.ring.push(end);\\n            callback(f.ring);\\n          } else {\\n            fragmentByStart[f.start] = fragmentByEnd[g.end] = {start: f.start, end: g.end, ring: f.ring.concat(g.ring)};\\n          }\\n        } else {\\n          delete fragmentByEnd[f.end];\\n          f.ring.push(end);\\n          fragmentByEnd[f.end = endIndex] = f;\\n        }\\n      } else if (f = fragmentByStart[endIndex]) {\\n        if (g = fragmentByEnd[startIndex]) {\\n          delete fragmentByStart[f.start];\\n          delete fragmentByEnd[g.end];\\n          if (f === g) {\\n            f.ring.push(end);\\n            callback(f.ring);\\n          } else {\\n            fragmentByStart[g.start] = fragmentByEnd[f.end] = {start: g.start, end: f.end, ring: g.ring.concat(f.ring)};\\n          }\\n        } else {\\n          delete fragmentByStart[f.start];\\n          f.ring.unshift(start);\\n          fragmentByStart[f.start = startIndex] = f;\\n        }\\n      } else {\\n        fragmentByStart[startIndex] = fragmentByEnd[endIndex] = {start: startIndex, end: endIndex, ring: [start, end]};\\n      }\\n    }\\n  }\\n\\n  function index(point) {\\n    return point[0] * 2 + point[1] * (dx + 1) * 4;\\n  }\\n\\n  function smoothLinear(ring, values, value) {\\n    ring.forEach(function(point) {\\n      var x = point[0],\\n          y = point[1],\\n          xt = x | 0,\\n          yt = y | 0,\\n          v0,\\n          v1 = values[yt * dx + xt];\\n      if (x > 0 && x < dx && xt === x) {\\n        v0 = values[yt * dx + xt - 1];\\n        point[0] = x + (value - v0) / (v1 - v0) - 0.5;\\n      }\\n      if (y > 0 && y < dy && yt === y) {\\n        v0 = values[(yt - 1) * dx + xt];\\n        point[1] = y + (value - v0) / (v1 - v0) - 0.5;\\n      }\\n    });\\n  }\\n\\n  contours.contour = contour;\\n\\n  contours.size = function(_) {\\n    if (!arguments.length) return [dx, dy];\\n    var _0 = Math.ceil(_[0]), _1 = Math.ceil(_[1]);\\n    if (!(_0 > 0) || !(_1 > 0)) throw new Error(\\\"invalid size\\\");\\n    return dx = _0, dy = _1, contours;\\n  };\\n\\n  contours.thresholds = function(_) {\\n    return arguments.length ? (threshold = typeof _ === \\\"function\\\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), contours) : threshold;\\n  };\\n\\n  contours.smooth = function(_) {\\n    return arguments.length ? (smooth = _ ? smoothLinear : noop, contours) : smooth === smoothLinear;\\n  };\\n\\n  return contours;\\n}\\n\",\"// TODO Optimize edge cases.\\n// TODO Optimize index calculation.\\n// TODO Optimize arguments.\\nexport function blurX(source, target, r) {\\n  var n = source.width,\\n      m = source.height,\\n      w = (r << 1) + 1;\\n  for (var j = 0; j < m; ++j) {\\n    for (var i = 0, sr = 0; i < n + r; ++i) {\\n      if (i < n) {\\n        sr += source.data[i + j * n];\\n      }\\n      if (i >= r) {\\n        if (i >= w) {\\n          sr -= source.data[i - w + j * n];\\n        }\\n        target.data[i - r + j * n] = sr / Math.min(i + 1, n - 1 + w - i, w);\\n      }\\n    }\\n  }\\n}\\n\\n// TODO Optimize edge cases.\\n// TODO Optimize index calculation.\\n// TODO Optimize arguments.\\nexport function blurY(source, target, r) {\\n  var n = source.width,\\n      m = source.height,\\n      w = (r << 1) + 1;\\n  for (var i = 0; i < n; ++i) {\\n    for (var j = 0, sr = 0; j < m + r; ++j) {\\n      if (j < m) {\\n        sr += source.data[i + j * n];\\n      }\\n      if (j >= r) {\\n        if (j >= w) {\\n          sr -= source.data[i + (j - w) * n];\\n        }\\n        target.data[i + (j - r) * n] = sr / Math.min(j + 1, m - 1 + w - j, w);\\n      }\\n    }\\n  }\\n}\\n\",\"import {max, range, tickStep} from \\\"d3-array\\\";\\nimport {slice} from \\\"./array\\\";\\nimport {blurX, blurY} from \\\"./blur\\\";\\nimport constant from \\\"./constant\\\";\\nimport contours from \\\"./contours\\\";\\n\\nfunction defaultX(d) {\\n  return d[0];\\n}\\n\\nfunction defaultY(d) {\\n  return d[1];\\n}\\n\\nexport default function() {\\n  var x = defaultX,\\n      y = defaultY,\\n      dx = 960,\\n      dy = 500,\\n      r = 20, // blur radius\\n      k = 2, // log2(grid cell size)\\n      o = r * 3, // grid offset, to pad for blur\\n      n = (dx + o * 2) >> k, // grid width\\n      m = (dy + o * 2) >> k, // grid height\\n      threshold = constant(20);\\n\\n  function density(data) {\\n    var values0 = new Float32Array(n * m),\\n        values1 = new Float32Array(n * m);\\n\\n    data.forEach(function(d, i, data) {\\n      var xi = (x(d, i, data) + o) >> k,\\n          yi = (y(d, i, data) + o) >> k;\\n      if (xi >= 0 && xi < n && yi >= 0 && yi < m) {\\n        ++values0[xi + yi * n];\\n      }\\n    });\\n\\n    // TODO Optimize.\\n    blurX({width: n, height: m, data: values0}, {width: n, height: m, data: values1}, r >> k);\\n    blurY({width: n, height: m, data: values1}, {width: n, height: m, data: values0}, r >> k);\\n    blurX({width: n, height: m, data: values0}, {width: n, height: m, data: values1}, r >> k);\\n    blurY({width: n, height: m, data: values1}, {width: n, height: m, data: values0}, r >> k);\\n    blurX({width: n, height: m, data: values0}, {width: n, height: m, data: values1}, r >> k);\\n    blurY({width: n, height: m, data: values1}, {width: n, height: m, data: values0}, r >> k);\\n\\n    var tz = threshold(values0);\\n\\n    // Convert number of thresholds into uniform thresholds.\\n    if (!Array.isArray(tz)) {\\n      var stop = max(values0);\\n      tz = tickStep(0, stop, tz);\\n      tz = range(0, Math.floor(stop / tz) * tz, tz);\\n      tz.shift();\\n    }\\n\\n    return contours()\\n        .thresholds(tz)\\n        .size([n, m])\\n      (values0)\\n        .map(transform);\\n  }\\n\\n  function transform(geometry) {\\n    geometry.value *= Math.pow(2, -2 * k); // Density in points per square pixel.\\n    geometry.coordinates.forEach(transformPolygon);\\n    return geometry;\\n  }\\n\\n  function transformPolygon(coordinates) {\\n    coordinates.forEach(transformRing);\\n  }\\n\\n  function transformRing(coordinates) {\\n    coordinates.forEach(transformPoint);\\n  }\\n\\n  // TODO Optimize.\\n  function transformPoint(coordinates) {\\n    coordinates[0] = coordinates[0] * Math.pow(2, k) - o;\\n    coordinates[1] = coordinates[1] * Math.pow(2, k) - o;\\n  }\\n\\n  function resize() {\\n    o = r * 3;\\n    n = (dx + o * 2) >> k;\\n    m = (dy + o * 2) >> k;\\n    return density;\\n  }\\n\\n  density.x = function(_) {\\n    return arguments.length ? (x = typeof _ === \\\"function\\\" ? _ : constant(+_), density) : x;\\n  };\\n\\n  density.y = function(_) {\\n    return arguments.length ? (y = typeof _ === \\\"function\\\" ? _ : constant(+_), density) : y;\\n  };\\n\\n  density.size = function(_) {\\n    if (!arguments.length) return [dx, dy];\\n    var _0 = Math.ceil(_[0]), _1 = Math.ceil(_[1]);\\n    if (!(_0 >= 0) && !(_0 >= 0)) throw new Error(\\\"invalid size\\\");\\n    return dx = _0, dy = _1, resize();\\n  };\\n\\n  density.cellSize = function(_) {\\n    if (!arguments.length) return 1 << k;\\n    if (!((_ = +_) >= 1)) throw new Error(\\\"invalid cell size\\\");\\n    return k = Math.floor(Math.log(_) / Math.LN2), resize();\\n  };\\n\\n  density.thresholds = function(_) {\\n    return arguments.length ? (threshold = typeof _ === \\\"function\\\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), density) : threshold;\\n  };\\n\\n  density.bandwidth = function(_) {\\n    if (!arguments.length) return Math.sqrt(r * (r + 1));\\n    if (!((_ = +_) >= 0)) throw new Error(\\\"invalid bandwidth\\\");\\n    return r = Math.round((Math.sqrt(4 * _ * _ + 1) - 1) / 2), resize();\\n  };\\n\\n  return density;\\n}\\n\",\"var EOL = {},\\n    EOF = {},\\n    QUOTE = 34,\\n    NEWLINE = 10,\\n    RETURN = 13;\\n\\nfunction objectConverter(columns) {\\n  return new Function(\\\"d\\\", \\\"return {\\\" + columns.map(function(name, i) {\\n    return JSON.stringify(name) + \\\": d[\\\" + i + \\\"]\\\";\\n  }).join(\\\",\\\") + \\\"}\\\");\\n}\\n\\nfunction customConverter(columns, f) {\\n  var object = objectConverter(columns);\\n  return function(row, i) {\\n    return f(object(row), i, columns);\\n  };\\n}\\n\\n// Compute unique columns in order of discovery.\\nfunction inferColumns(rows) {\\n  var columnSet = Object.create(null),\\n      columns = [];\\n\\n  rows.forEach(function(row) {\\n    for (var column in row) {\\n      if (!(column in columnSet)) {\\n        columns.push(columnSet[column] = column);\\n      }\\n    }\\n  });\\n\\n  return columns;\\n}\\n\\nexport default function(delimiter) {\\n  var reFormat = new RegExp(\\\"[\\\\\\\"\\\" + delimiter + \\\"\\\\n\\\\r]\\\"),\\n      DELIMITER = delimiter.charCodeAt(0);\\n\\n  function parse(text, f) {\\n    var convert, columns, rows = parseRows(text, function(row, i) {\\n      if (convert) return convert(row, i - 1);\\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\\n    });\\n    rows.columns = columns || [];\\n    return rows;\\n  }\\n\\n  function parseRows(text, f) {\\n    var rows = [], // output rows\\n        N = text.length,\\n        I = 0, // current character index\\n        n = 0, // current line number\\n        t, // current token\\n        eof = N <= 0, // current token followed by EOF?\\n        eol = false; // current token followed by EOL?\\n\\n    // Strip the trailing newline.\\n    if (text.charCodeAt(N - 1) === NEWLINE) --N;\\n    if (text.charCodeAt(N - 1) === RETURN) --N;\\n\\n    function token() {\\n      if (eof) return EOF;\\n      if (eol) return eol = false, EOL;\\n\\n      // Unescape quotes.\\n      var i, j = I, c;\\n      if (text.charCodeAt(j) === QUOTE) {\\n        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);\\n        if ((i = I) >= N) eof = true;\\n        else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;\\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\\n        return text.slice(j + 1, i - 1).replace(/\\\"\\\"/g, \\\"\\\\\\\"\\\");\\n      }\\n\\n      // Find next delimiter or newline.\\n      while (I < N) {\\n        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;\\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\\n        else if (c !== DELIMITER) continue;\\n        return text.slice(j, i);\\n      }\\n\\n      // Return last token before EOF.\\n      return eof = true, text.slice(j, N);\\n    }\\n\\n    while ((t = token()) !== EOF) {\\n      var row = [];\\n      while (t !== EOL && t !== EOF) row.push(t), t = token();\\n      if (f && (row = f(row, n++)) == null) continue;\\n      rows.push(row);\\n    }\\n\\n    return rows;\\n  }\\n\\n  function format(rows, columns) {\\n    if (columns == null) columns = inferColumns(rows);\\n    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\\n      return columns.map(function(column) {\\n        return formatValue(row[column]);\\n      }).join(delimiter);\\n    })).join(\\\"\\\\n\\\");\\n  }\\n\\n  function formatRows(rows) {\\n    return rows.map(formatRow).join(\\\"\\\\n\\\");\\n  }\\n\\n  function formatRow(row) {\\n    return row.map(formatValue).join(delimiter);\\n  }\\n\\n  function formatValue(text) {\\n    return text == null ? \\\"\\\"\\n        : reFormat.test(text += \\\"\\\") ? \\\"\\\\\\\"\\\" + text.replace(/\\\"/g, \\\"\\\\\\\"\\\\\\\"\\\") + \\\"\\\\\\\"\\\"\\n        : text;\\n  }\\n\\n  return {\\n    parse: parse,\\n    parseRows: parseRows,\\n    format: format,\\n    formatRows: formatRows\\n  };\\n}\\n\",\"import dsv from \\\"./dsv\\\";\\n\\nvar csv = dsv(\\\",\\\");\\n\\nexport var csvParse = csv.parse;\\nexport var csvParseRows = csv.parseRows;\\nexport var csvFormat = csv.format;\\nexport var csvFormatRows = csv.formatRows;\\n\",\"import dsv from \\\"./dsv\\\";\\n\\nvar tsv = dsv(\\\"\\\\t\\\");\\n\\nexport var tsvParse = tsv.parse;\\nexport var tsvParseRows = tsv.parseRows;\\nexport var tsvFormat = tsv.format;\\nexport var tsvFormatRows = tsv.formatRows;\\n\",\"function responseBlob(response) {\\n  if (!response.ok) throw new Error(response.status + \\\" \\\" + response.statusText);\\n  return response.blob();\\n}\\n\\nexport default function(input, init) {\\n  return fetch(input, init).then(responseBlob);\\n}\\n\",\"function responseArrayBuffer(response) {\\n  if (!response.ok) throw new Error(response.status + \\\" \\\" + response.statusText);\\n  return response.arrayBuffer();\\n}\\n\\nexport default function(input, init) {\\n  return fetch(input, init).then(responseArrayBuffer);\\n}\\n\",\"function responseText(response) {\\n  if (!response.ok) throw new Error(response.status + \\\" \\\" + response.statusText);\\n  return response.text();\\n}\\n\\nexport default function(input, init) {\\n  return fetch(input, init).then(responseText);\\n}\\n\",\"import {csvParse, dsvFormat, tsvParse} from \\\"d3-dsv\\\";\\nimport text from \\\"./text\\\";\\n\\nfunction dsvParse(parse) {\\n  return function(input, init, row) {\\n    if (arguments.length === 2 && typeof init === \\\"function\\\") row = init, init = undefined;\\n    return text(input, init).then(function(response) {\\n      return parse(response, row);\\n    });\\n  };\\n}\\n\\nexport default function dsv(delimiter, input, init, row) {\\n  if (arguments.length === 3 && typeof init === \\\"function\\\") row = init, init = undefined;\\n  var format = dsvFormat(delimiter);\\n  return text(input, init).then(function(response) {\\n    return format.parse(response, row);\\n  });\\n}\\n\\nexport var csv = dsvParse(csvParse);\\nexport var tsv = dsvParse(tsvParse);\\n\",\"export default function(input, init) {\\n  return new Promise(function(resolve, reject) {\\n    var image = new Image;\\n    for (var key in init) image[key] = init[key];\\n    image.onerror = reject;\\n    image.onload = function() { resolve(image); };\\n    image.src = input;\\n  });\\n}\\n\",\"function responseJson(response) {\\n  if (!response.ok) throw new Error(response.status + \\\" \\\" + response.statusText);\\n  return response.json();\\n}\\n\\nexport default function(input, init) {\\n  return fetch(input, init).then(responseJson);\\n}\\n\",\"import text from \\\"./text\\\";\\n\\nfunction parser(type) {\\n  return function(input, init)  {\\n    return text(input, init).then(function(text) {\\n      return (new DOMParser).parseFromString(text, type);\\n    });\\n  };\\n}\\n\\nexport default parser(\\\"application/xml\\\");\\n\\nexport var html = parser(\\\"text/html\\\");\\n\\nexport var svg = parser(\\\"image/svg+xml\\\");\\n\",\"export default function(x, y) {\\n  var nodes;\\n\\n  if (x == null) x = 0;\\n  if (y == null) y = 0;\\n\\n  function force() {\\n    var i,\\n        n = nodes.length,\\n        node,\\n        sx = 0,\\n        sy = 0;\\n\\n    for (i = 0; i < n; ++i) {\\n      node = nodes[i], sx += node.x, sy += node.y;\\n    }\\n\\n    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\\n      node = nodes[i], node.x -= sx, node.y -= sy;\\n    }\\n  }\\n\\n  force.initialize = function(_) {\\n    nodes = _;\\n  };\\n\\n  force.x = function(_) {\\n    return arguments.length ? (x = +_, force) : x;\\n  };\\n\\n  force.y = function(_) {\\n    return arguments.length ? (y = +_, force) : y;\\n  };\\n\\n  return force;\\n}\\n\",\"export default function(x) {\\n  return function() {\\n    return x;\\n  };\\n}\\n\",\"export default function() {\\n  return (Math.random() - 0.5) * 1e-6;\\n}\\n\",\"export default function(d) {\\n  var x = +this._x.call(null, d),\\n      y = +this._y.call(null, d);\\n  return add(this.cover(x, y), x, y, d);\\n}\\n\\nfunction add(tree, x, y, d) {\\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\\n\\n  var parent,\\n      node = tree._root,\\n      leaf = {data: d},\\n      x0 = tree._x0,\\n      y0 = tree._y0,\\n      x1 = tree._x1,\\n      y1 = tree._y1,\\n      xm,\\n      ym,\\n      xp,\\n      yp,\\n      right,\\n      bottom,\\n      i,\\n      j;\\n\\n  // If the tree is empty, initialize the root as a leaf.\\n  if (!node) return tree._root = leaf, tree;\\n\\n  // Find the existing leaf for the new point, or add it.\\n  while (node.length) {\\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\\n  }\\n\\n  // Is the new point is exactly coincident with the existing point?\\n  xp = +tree._x.call(null, node.data);\\n  yp = +tree._y.call(null, node.data);\\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\\n\\n  // Otherwise, split the leaf node until the old and new point are separated.\\n  do {\\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\\n  return parent[j] = node, parent[i] = leaf, tree;\\n}\\n\\nexport function addAll(data) {\\n  var d, i, n = data.length,\\n      x,\\n      y,\\n      xz = new Array(n),\\n      yz = new Array(n),\\n      x0 = Infinity,\\n      y0 = Infinity,\\n      x1 = -Infinity,\\n      y1 = -Infinity;\\n\\n  // Compute the points and their extent.\\n  for (i = 0; i < n; ++i) {\\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\\n    xz[i] = x;\\n    yz[i] = y;\\n    if (x < x0) x0 = x;\\n    if (x > x1) x1 = x;\\n    if (y < y0) y0 = y;\\n    if (y > y1) y1 = y;\\n  }\\n\\n  // If there were no (valid) points, inherit the existing extent.\\n  if (x1 < x0) x0 = this._x0, x1 = this._x1;\\n  if (y1 < y0) y0 = this._y0, y1 = this._y1;\\n\\n  // Expand the tree to cover the new points.\\n  this.cover(x0, y0).cover(x1, y1);\\n\\n  // Add the new points.\\n  for (i = 0; i < n; ++i) {\\n    add(this, xz[i], yz[i], data[i]);\\n  }\\n\\n  return this;\\n}\\n\",\"export default function(x, y) {\\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\\n\\n  var x0 = this._x0,\\n      y0 = this._y0,\\n      x1 = this._x1,\\n      y1 = this._y1;\\n\\n  // If the quadtree has no extent, initialize them.\\n  // Integer extent are necessary so that if we later double the extent,\\n  // the existing quadrant boundaries don’t change due to floating point error!\\n  if (isNaN(x0)) {\\n    x1 = (x0 = Math.floor(x)) + 1;\\n    y1 = (y0 = Math.floor(y)) + 1;\\n  }\\n\\n  // Otherwise, double repeatedly to cover.\\n  else if (x0 > x || x > x1 || y0 > y || y > y1) {\\n    var z = x1 - x0,\\n        node = this._root,\\n        parent,\\n        i;\\n\\n    switch (i = (y < (y0 + y1) / 2) << 1 | (x < (x0 + x1) / 2)) {\\n      case 0: {\\n        do parent = new Array(4), parent[i] = node, node = parent;\\n        while (z *= 2, x1 = x0 + z, y1 = y0 + z, x > x1 || y > y1);\\n        break;\\n      }\\n      case 1: {\\n        do parent = new Array(4), parent[i] = node, node = parent;\\n        while (z *= 2, x0 = x1 - z, y1 = y0 + z, x0 > x || y > y1);\\n        break;\\n      }\\n      case 2: {\\n        do parent = new Array(4), parent[i] = node, node = parent;\\n        while (z *= 2, x1 = x0 + z, y0 = y1 - z, x > x1 || y0 > y);\\n        break;\\n      }\\n      case 3: {\\n        do parent = new Array(4), parent[i] = node, node = parent;\\n        while (z *= 2, x0 = x1 - z, y0 = y1 - z, x0 > x || y0 > y);\\n        break;\\n      }\\n    }\\n\\n    if (this._root && this._root.length) this._root = node;\\n  }\\n\\n  // If the quadtree covers the point already, just return.\\n  else return this;\\n\\n  this._x0 = x0;\\n  this._y0 = y0;\\n  this._x1 = x1;\\n  this._y1 = y1;\\n  return this;\\n}\\n\",\"export default function(node, x0, y0, x1, y1) {\\n  this.node = node;\\n  this.x0 = x0;\\n  this.y0 = y0;\\n  this.x1 = x1;\\n  this.y1 = y1;\\n}\\n\",\"export function defaultX(d) {\\n  return d[0];\\n}\\n\\nexport default function(_) {\\n  return arguments.length ? (this._x = _, this) : this._x;\\n}\\n\",\"export function defaultY(d) {\\n  return d[1];\\n}\\n\\nexport default function(_) {\\n  return arguments.length ? (this._y = _, this) : this._y;\\n}\\n\",\"import tree_add, {addAll as tree_addAll} from \\\"./add\\\";\\nimport tree_cover from \\\"./cover\\\";\\nimport tree_data from \\\"./data\\\";\\nimport tree_extent from \\\"./extent\\\";\\nimport tree_find from \\\"./find\\\";\\nimport tree_remove, {removeAll as tree_removeAll} from \\\"./remove\\\";\\nimport tree_root from \\\"./root\\\";\\nimport tree_size from \\\"./size\\\";\\nimport tree_visit from \\\"./visit\\\";\\nimport tree_visitAfter from \\\"./visitAfter\\\";\\nimport tree_x, {defaultX} from \\\"./x\\\";\\nimport tree_y, {defaultY} from \\\"./y\\\";\\n\\nexport default function quadtree(nodes, x, y) {\\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\\n  return nodes == null ? tree : tree.addAll(nodes);\\n}\\n\\nfunction Quadtree(x, y, x0, y0, x1, y1) {\\n  this._x = x;\\n  this._y = y;\\n  this._x0 = x0;\\n  this._y0 = y0;\\n  this._x1 = x1;\\n  this._y1 = y1;\\n  this._root = undefined;\\n}\\n\\nfunction leaf_copy(leaf) {\\n  var copy = {data: leaf.data}, next = copy;\\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\\n  return copy;\\n}\\n\\nvar treeProto = quadtree.prototype = Quadtree.prototype;\\n\\ntreeProto.copy = function() {\\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\\n      node = this._root,\\n      nodes,\\n      child;\\n\\n  if (!node) return copy;\\n\\n  if (!node.length) return copy._root = leaf_copy(node), copy;\\n\\n  nodes = [{source: node, target: copy._root = new Array(4)}];\\n  while (node = nodes.pop()) {\\n    for (var i = 0; i < 4; ++i) {\\n      if (child = node.source[i]) {\\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\\n        else node.target[i] = leaf_copy(child);\\n      }\\n    }\\n  }\\n\\n  return copy;\\n};\\n\\ntreeProto.add = tree_add;\\ntreeProto.addAll = tree_addAll;\\ntreeProto.cover = tree_cover;\\ntreeProto.data = tree_data;\\ntreeProto.extent = tree_extent;\\ntreeProto.find = tree_find;\\ntreeProto.remove = tree_remove;\\ntreeProto.removeAll = tree_removeAll;\\ntreeProto.root = tree_root;\\ntreeProto.size = tree_size;\\ntreeProto.visit = tree_visit;\\ntreeProto.visitAfter = tree_visitAfter;\\ntreeProto.x = tree_x;\\ntreeProto.y = tree_y;\\n\",\"import constant from \\\"./constant\\\";\\nimport jiggle from \\\"./jiggle\\\";\\nimport {quadtree} from \\\"d3-quadtree\\\";\\n\\nfunction x(d) {\\n  return d.x + d.vx;\\n}\\n\\nfunction y(d) {\\n  return d.y + d.vy;\\n}\\n\\nexport default function(radius) {\\n  var nodes,\\n      radii,\\n      strength = 1,\\n      iterations = 1;\\n\\n  if (typeof radius !== \\\"function\\\") radius = constant(radius == null ? 1 : +radius);\\n\\n  function force() {\\n    var i, n = nodes.length,\\n        tree,\\n        node,\\n        xi,\\n        yi,\\n        ri,\\n        ri2;\\n\\n    for (var k = 0; k < iterations; ++k) {\\n      tree = quadtree(nodes, x, y).visitAfter(prepare);\\n      for (i = 0; i < n; ++i) {\\n        node = nodes[i];\\n        ri = radii[node.index], ri2 = ri * ri;\\n        xi = node.x + node.vx;\\n        yi = node.y + node.vy;\\n        tree.visit(apply);\\n      }\\n    }\\n\\n    function apply(quad, x0, y0, x1, y1) {\\n      var data = quad.data, rj = quad.r, r = ri + rj;\\n      if (data) {\\n        if (data.index > node.index) {\\n          var x = xi - data.x - data.vx,\\n              y = yi - data.y - data.vy,\\n              l = x * x + y * y;\\n          if (l < r * r) {\\n            if (x === 0) x = jiggle(), l += x * x;\\n            if (y === 0) y = jiggle(), l += y * y;\\n            l = (r - (l = Math.sqrt(l))) / l * strength;\\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\\n            node.vy += (y *= l) * r;\\n            data.vx -= x * (r = 1 - r);\\n            data.vy -= y * r;\\n          }\\n        }\\n        return;\\n      }\\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\\n    }\\n  }\\n\\n  function prepare(quad) {\\n    if (quad.data) return quad.r = radii[quad.data.index];\\n    for (var i = quad.r = 0; i < 4; ++i) {\\n      if (quad[i] && quad[i].r > quad.r) {\\n        quad.r = quad[i].r;\\n      }\\n    }\\n  }\\n\\n  function initialize() {\\n    if (!nodes) return;\\n    var i, n = nodes.length, node;\\n    radii = new Array(n);\\n    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\\n  }\\n\\n  force.initialize = function(_) {\\n    nodes = _;\\n    initialize();\\n  };\\n\\n  force.iterations = function(_) {\\n    return arguments.length ? (iterations = +_, force) : iterations;\\n  };\\n\\n  force.strength = function(_) {\\n    return arguments.length ? (strength = +_, force) : strength;\\n  };\\n\\n  force.radius = function(_) {\\n    return arguments.length ? (radius = typeof _ === \\\"function\\\" ? _ : constant(+_), initialize(), force) : radius;\\n  };\\n\\n  return force;\\n}\\n\",\"export default function() {\\n  var data = [];\\n  this.visit(function(node) {\\n    if (!node.length) do data.push(node.data); while (node = node.next)\\n  });\\n  return data;\\n}\\n\",\"export default function(_) {\\n  return arguments.length\\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\\n}\\n\",\"import Quad from \\\"./quad\\\";\\n\\nexport default function(x, y, radius) {\\n  var data,\\n      x0 = this._x0,\\n      y0 = this._y0,\\n      x1,\\n      y1,\\n      x2,\\n      y2,\\n      x3 = this._x1,\\n      y3 = this._y1,\\n      quads = [],\\n      node = this._root,\\n      q,\\n      i;\\n\\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\\n  if (radius == null) radius = Infinity;\\n  else {\\n    x0 = x - radius, y0 = y - radius;\\n    x3 = x + radius, y3 = y + radius;\\n    radius *= radius;\\n  }\\n\\n  while (q = quads.pop()) {\\n\\n    // Stop searching if this quadrant can’t contain a closer node.\\n    if (!(node = q.node)\\n        || (x1 = q.x0) > x3\\n        || (y1 = q.y0) > y3\\n        || (x2 = q.x1) < x0\\n        || (y2 = q.y1) < y0) continue;\\n\\n    // Bisect the current quadrant.\\n    if (node.length) {\\n      var xm = (x1 + x2) / 2,\\n          ym = (y1 + y2) / 2;\\n\\n      quads.push(\\n        new Quad(node[3], xm, ym, x2, y2),\\n        new Quad(node[2], x1, ym, xm, y2),\\n        new Quad(node[1], xm, y1, x2, ym),\\n        new Quad(node[0], x1, y1, xm, ym)\\n      );\\n\\n      // Visit the closest quadrant first.\\n      if (i = (y >= ym) << 1 | (x >= xm)) {\\n        q = quads[quads.length - 1];\\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\\n        quads[quads.length - 1 - i] = q;\\n      }\\n    }\\n\\n    // Visit this point. (Visiting coincident points isn’t necessary!)\\n    else {\\n      var dx = x - +this._x.call(null, node.data),\\n          dy = y - +this._y.call(null, node.data),\\n          d2 = dx * dx + dy * dy;\\n      if (d2 < radius) {\\n        var d = Math.sqrt(radius = d2);\\n        x0 = x - d, y0 = y - d;\\n        x3 = x + d, y3 = y + d;\\n        data = node.data;\\n      }\\n    }\\n  }\\n\\n  return data;\\n}\\n\",\"export default function(d) {\\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\\n\\n  var parent,\\n      node = this._root,\\n      retainer,\\n      previous,\\n      next,\\n      x0 = this._x0,\\n      y0 = this._y0,\\n      x1 = this._x1,\\n      y1 = this._y1,\\n      x,\\n      y,\\n      xm,\\n      ym,\\n      right,\\n      bottom,\\n      i,\\n      j;\\n\\n  // If the tree is empty, initialize the root as a leaf.\\n  if (!node) return this;\\n\\n  // Find the leaf node for the point.\\n  // While descending, also retain the deepest parent with a non-removed sibling.\\n  if (node.length) while (true) {\\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\\n    if (!node.length) break;\\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\\n  }\\n\\n  // Find the point to remove.\\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\\n  if (next = node.next) delete node.next;\\n\\n  // If there are multiple coincident points, remove just the point.\\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\\n\\n  // If this is the root point, remove it.\\n  if (!parent) return this._root = next, this;\\n\\n  // Remove this leaf.\\n  next ? parent[i] = next : delete parent[i];\\n\\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\\n      && !node.length) {\\n    if (retainer) retainer[j] = node;\\n    else this._root = node;\\n  }\\n\\n  return this;\\n}\\n\\nexport function removeAll(data) {\\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\\n  return this;\\n}\\n\",\"export default function() {\\n  return this._root;\\n}\\n\",\"export default function() {\\n  var size = 0;\\n  this.visit(function(node) {\\n    if (!node.length) do ++size; while (node = node.next)\\n  });\\n  return size;\\n}\\n\",\"import Quad from \\\"./quad\\\";\\n\\nexport default function(callback) {\\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\\n  while (q = quads.pop()) {\\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\\n    }\\n  }\\n  return this;\\n}\\n\",\"import Quad from \\\"./quad\\\";\\n\\nexport default function(callback) {\\n  var quads = [], next = [], q;\\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\\n  while (q = quads.pop()) {\\n    var node = q.node;\\n    if (node.length) {\\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\\n    }\\n    next.push(q);\\n  }\\n  while (q = next.pop()) {\\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\\n  }\\n  return this;\\n}\\n\",\"import constant from \\\"./constant\\\";\\nimport jiggle from \\\"./jiggle\\\";\\nimport {map} from \\\"d3-collection\\\";\\n\\nfunction index(d) {\\n  return d.index;\\n}\\n\\nfunction find(nodeById, nodeId) {\\n  var node = nodeById.get(nodeId);\\n  if (!node) throw new Error(\\\"missing: \\\" + nodeId);\\n  return node;\\n}\\n\\nexport default function(links) {\\n  var id = index,\\n      strength = defaultStrength,\\n      strengths,\\n      distance = constant(30),\\n      distances,\\n      nodes,\\n      count,\\n      bias,\\n      iterations = 1;\\n\\n  if (links == null) links = [];\\n\\n  function defaultStrength(link) {\\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\\n  }\\n\\n  function force(alpha) {\\n    for (var k = 0, n = links.length; k < iterations; ++k) {\\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\\n        link = links[i], source = link.source, target = link.target;\\n        x = target.x + target.vx - source.x - source.vx || jiggle();\\n        y = target.y + target.vy - source.y - source.vy || jiggle();\\n        l = Math.sqrt(x * x + y * y);\\n        l = (l - distances[i]) / l * alpha * strengths[i];\\n        x *= l, y *= l;\\n        target.vx -= x * (b = bias[i]);\\n        target.vy -= y * b;\\n        source.vx += x * (b = 1 - b);\\n        source.vy += y * b;\\n      }\\n    }\\n  }\\n\\n  function initialize() {\\n    if (!nodes) return;\\n\\n    var i,\\n        n = nodes.length,\\n        m = links.length,\\n        nodeById = map(nodes, id),\\n        link;\\n\\n    for (i = 0, count = new Array(n); i < m; ++i) {\\n      link = links[i], link.index = i;\\n      if (typeof link.source !== \\\"object\\\") link.source = find(nodeById, link.source);\\n      if (typeof link.target !== \\\"object\\\") link.target = find(nodeById, link.target);\\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\\n    }\\n\\n    for (i = 0, bias = new Array(m); i < m; ++i) {\\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\\n    }\\n\\n    strengths = new Array(m), initializeStrength();\\n    distances = new Array(m), initializeDistance();\\n  }\\n\\n  function initializeStrength() {\\n    if (!nodes) return;\\n\\n    for (var i = 0, n = links.length; i < n; ++i) {\\n      strengths[i] = +strength(links[i], i, links);\\n    }\\n  }\\n\\n  function initializeDistance() {\\n    if (!nodes) return;\\n\\n    for (var i = 0, n = links.length; i < n; ++i) {\\n      distances[i] = +distance(links[i], i, links);\\n    }\\n  }\\n\\n  force.initialize = function(_) {\\n    nodes = _;\\n    initialize();\\n  };\\n\\n  force.links = function(_) {\\n    return arguments.length ? (links = _, initialize(), force) : links;\\n  };\\n\\n  force.id = function(_) {\\n    return arguments.length ? (id = _, force) : id;\\n  };\\n\\n  force.iterations = function(_) {\\n    return arguments.length ? (iterations = +_, force) : iterations;\\n  };\\n\\n  force.strength = function(_) {\\n    return arguments.length ? (strength = typeof _ === \\\"function\\\" ? _ : constant(+_), initializeStrength(), force) : strength;\\n  };\\n\\n  force.distance = function(_) {\\n    return arguments.length ? (distance = typeof _ === \\\"function\\\" ? _ : constant(+_), initializeDistance(), force) : distance;\\n  };\\n\\n  return force;\\n}\\n\",\"import {dispatch} from \\\"d3-dispatch\\\";\\nimport {map} from \\\"d3-collection\\\";\\nimport {timer} from \\\"d3-timer\\\";\\n\\nexport function x(d) {\\n  return d.x;\\n}\\n\\nexport function y(d) {\\n  return d.y;\\n}\\n\\nvar initialRadius = 10,\\n    initialAngle = Math.PI * (3 - Math.sqrt(5));\\n\\nexport default function(nodes) {\\n  var simulation,\\n      alpha = 1,\\n      alphaMin = 0.001,\\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\\n      alphaTarget = 0,\\n      velocityDecay = 0.6,\\n      forces = map(),\\n      stepper = timer(step),\\n      event = dispatch(\\\"tick\\\", \\\"end\\\");\\n\\n  if (nodes == null) nodes = [];\\n\\n  function step() {\\n    tick();\\n    event.call(\\\"tick\\\", simulation);\\n    if (alpha < alphaMin) {\\n      stepper.stop();\\n      event.call(\\\"end\\\", simulation);\\n    }\\n  }\\n\\n  function tick() {\\n    var i, n = nodes.length, node;\\n\\n    alpha += (alphaTarget - alpha) * alphaDecay;\\n\\n    forces.each(function(force) {\\n      force(alpha);\\n    });\\n\\n    for (i = 0; i < n; ++i) {\\n      node = nodes[i];\\n      if (node.fx == null) node.x += node.vx *= velocityDecay;\\n      else node.x = node.fx, node.vx = 0;\\n      if (node.fy == null) node.y += node.vy *= velocityDecay;\\n      else node.y = node.fy, node.vy = 0;\\n    }\\n  }\\n\\n  function initializeNodes() {\\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\\n      node = nodes[i], node.index = i;\\n      if (isNaN(node.x) || isNaN(node.y)) {\\n        var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\\n        node.x = radius * Math.cos(angle);\\n        node.y = radius * Math.sin(angle);\\n      }\\n      if (isNaN(node.vx) || isNaN(node.vy)) {\\n        node.vx = node.vy = 0;\\n      }\\n    }\\n  }\\n\\n  function initializeForce(force) {\\n    if (force.initialize) force.initialize(nodes);\\n    return force;\\n  }\\n\\n  initializeNodes();\\n\\n  return simulation = {\\n    tick: tick,\\n\\n    restart: function() {\\n      return stepper.restart(step), simulation;\\n    },\\n\\n    stop: function() {\\n      return stepper.stop(), simulation;\\n    },\\n\\n    nodes: function(_) {\\n      return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;\\n    },\\n\\n    alpha: function(_) {\\n      return arguments.length ? (alpha = +_, simulation) : alpha;\\n    },\\n\\n    alphaMin: function(_) {\\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\\n    },\\n\\n    alphaDecay: function(_) {\\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\\n    },\\n\\n    alphaTarget: function(_) {\\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\\n    },\\n\\n    velocityDecay: function(_) {\\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\\n    },\\n\\n    force: function(name, _) {\\n      return arguments.length > 1 ? ((_ == null ? forces.remove(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\\n    },\\n\\n    find: function(x, y, radius) {\\n      var i = 0,\\n          n = nodes.length,\\n          dx,\\n          dy,\\n          d2,\\n          node,\\n          closest;\\n\\n      if (radius == null) radius = Infinity;\\n      else radius *= radius;\\n\\n      for (i = 0; i < n; ++i) {\\n        node = nodes[i];\\n        dx = x - node.x;\\n        dy = y - node.y;\\n        d2 = dx * dx + dy * dy;\\n        if (d2 < radius) closest = node, radius = d2;\\n      }\\n\\n      return closest;\\n    },\\n\\n    on: function(name, _) {\\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\\n    }\\n  };\\n}\\n\",\"import formatDecimal from \\\"./formatDecimal\\\";\\n\\nexport var prefixExponent;\\n\\nexport default function(x, p) {\\n  var d = formatDecimal(x, p);\\n  if (!d) return x + \\\"\\\";\\n  var coefficient = d[0],\\n      exponent = d[1],\\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\\n      n = coefficient.length;\\n  return i === n ? coefficient\\n      : i > n ? coefficient + new Array(i - n + 1).join(\\\"0\\\")\\n      : i > 0 ? coefficient.slice(0, i) + \\\".\\\" + coefficient.slice(i)\\n      : \\\"0.\\\" + new Array(1 - i).join(\\\"0\\\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\\n}\\n\",\"import constant from \\\"./constant\\\";\\nimport jiggle from \\\"./jiggle\\\";\\nimport {quadtree} from \\\"d3-quadtree\\\";\\nimport {x, y} from \\\"./simulation\\\";\\n\\nexport default function() {\\n  var nodes,\\n      node,\\n      alpha,\\n      strength = constant(-30),\\n      strengths,\\n      distanceMin2 = 1,\\n      distanceMax2 = Infinity,\\n      theta2 = 0.81;\\n\\n  function force(_) {\\n    var i, n = nodes.length, tree = quadtree(nodes, x, y).visitAfter(accumulate);\\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\\n  }\\n\\n  function initialize() {\\n    if (!nodes) return;\\n    var i, n = nodes.length, node;\\n    strengths = new Array(n);\\n    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\\n  }\\n\\n  function accumulate(quad) {\\n    var strength = 0, q, c, weight = 0, x, y, i;\\n\\n    // For internal nodes, accumulate forces from child quadrants.\\n    if (quad.length) {\\n      for (x = y = i = 0; i < 4; ++i) {\\n        if ((q = quad[i]) && (c = Math.abs(q.value))) {\\n          strength += q.value, weight += c, x += c * q.x, y += c * q.y;\\n        }\\n      }\\n      quad.x = x / weight;\\n      quad.y = y / weight;\\n    }\\n\\n    // For leaf nodes, accumulate forces from coincident quadrants.\\n    else {\\n      q = quad;\\n      q.x = q.data.x;\\n      q.y = q.data.y;\\n      do strength += strengths[q.data.index];\\n      while (q = q.next);\\n    }\\n\\n    quad.value = strength;\\n  }\\n\\n  function apply(quad, x1, _, x2) {\\n    if (!quad.value) return true;\\n\\n    var x = quad.x - node.x,\\n        y = quad.y - node.y,\\n        w = x2 - x1,\\n        l = x * x + y * y;\\n\\n    // Apply the Barnes-Hut approximation if possible.\\n    // Limit forces for very close nodes; randomize direction if coincident.\\n    if (w * w / theta2 < l) {\\n      if (l < distanceMax2) {\\n        if (x === 0) x = jiggle(), l += x * x;\\n        if (y === 0) y = jiggle(), l += y * y;\\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\\n        node.vx += x * quad.value * alpha / l;\\n        node.vy += y * quad.value * alpha / l;\\n      }\\n      return true;\\n    }\\n\\n    // Otherwise, process points directly.\\n    else if (quad.length || l >= distanceMax2) return;\\n\\n    // Limit forces for very close nodes; randomize direction if coincident.\\n    if (quad.data !== node || quad.next) {\\n      if (x === 0) x = jiggle(), l += x * x;\\n      if (y === 0) y = jiggle(), l += y * y;\\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\\n    }\\n\\n    do if (quad.data !== node) {\\n      w = strengths[quad.data.index] * alpha / l;\\n      node.vx += x * w;\\n      node.vy += y * w;\\n    } while (quad = quad.next);\\n  }\\n\\n  force.initialize = function(_) {\\n    nodes = _;\\n    initialize();\\n  };\\n\\n  force.strength = function(_) {\\n    return arguments.length ? (strength = typeof _ === \\\"function\\\" ? _ : constant(+_), initialize(), force) : strength;\\n  };\\n\\n  force.distanceMin = function(_) {\\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\\n  };\\n\\n  force.distanceMax = function(_) {\\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\\n  };\\n\\n  force.theta = function(_) {\\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\\n  };\\n\\n  return force;\\n}\\n\",\"import constant from \\\"./constant\\\";\\n\\nexport default function(radius, x, y) {\\n  var nodes,\\n      strength = constant(0.1),\\n      strengths,\\n      radiuses;\\n\\n  if (typeof radius !== \\\"function\\\") radius = constant(+radius);\\n  if (x == null) x = 0;\\n  if (y == null) y = 0;\\n\\n  function force(alpha) {\\n    for (var i = 0, n = nodes.length; i < n; ++i) {\\n      var node = nodes[i],\\n          dx = node.x - x || 1e-6,\\n          dy = node.y - y || 1e-6,\\n          r = Math.sqrt(dx * dx + dy * dy),\\n          k = (radiuses[i] - r) * strengths[i] * alpha / r;\\n      node.vx += dx * k;\\n      node.vy += dy * k;\\n    }\\n  }\\n\\n  function initialize() {\\n    if (!nodes) return;\\n    var i, n = nodes.length;\\n    strengths = new Array(n);\\n    radiuses = new Array(n);\\n    for (i = 0; i < n; ++i) {\\n      radiuses[i] = +radius(nodes[i], i, nodes);\\n      strengths[i] = isNaN(radiuses[i]) ? 0 : +strength(nodes[i], i, nodes);\\n    }\\n  }\\n\\n  force.initialize = function(_) {\\n    nodes = _, initialize();\\n  };\\n\\n  force.strength = function(_) {\\n    return arguments.length ? (strength = typeof _ === \\\"function\\\" ? _ : constant(+_), initialize(), force) : strength;\\n  };\\n\\n  force.radius = function(_) {\\n    return arguments.length ? (radius = typeof _ === \\\"function\\\" ? _ : constant(+_), initialize(), force) : radius;\\n  };\\n\\n  force.x = function(_) {\\n    return arguments.length ? (x = +_, force) : x;\\n  };\\n\\n  force.y = function(_) {\\n    return arguments.length ? (y = +_, force) : y;\\n  };\\n\\n  return force;\\n}\\n\",\"import constant from \\\"./constant\\\";\\n\\nexport default function(x) {\\n  var strength = constant(0.1),\\n      nodes,\\n      strengths,\\n      xz;\\n\\n  if (typeof x !== \\\"function\\\") x = constant(x == null ? 0 : +x);\\n\\n  function force(alpha) {\\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\\n    }\\n  }\\n\\n  function initialize() {\\n    if (!nodes) return;\\n    var i, n = nodes.length;\\n    strengths = new Array(n);\\n    xz = new Array(n);\\n    for (i = 0; i < n; ++i) {\\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\\n    }\\n  }\\n\\n  force.initialize = function(_) {\\n    nodes = _;\\n    initialize();\\n  };\\n\\n  force.strength = function(_) {\\n    return arguments.length ? (strength = typeof _ === \\\"function\\\" ? _ : constant(+_), initialize(), force) : strength;\\n  };\\n\\n  force.x = function(_) {\\n    return arguments.length ? (x = typeof _ === \\\"function\\\" ? _ : constant(+_), initialize(), force) : x;\\n  };\\n\\n  return force;\\n}\\n\",\"import constant from \\\"./constant\\\";\\n\\nexport default function(y) {\\n  var strength = constant(0.1),\\n      nodes,\\n      strengths,\\n      yz;\\n\\n  if (typeof y !== \\\"function\\\") y = constant(y == null ? 0 : +y);\\n\\n  function force(alpha) {\\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\\n    }\\n  }\\n\\n  function initialize() {\\n    if (!nodes) return;\\n    var i, n = nodes.length;\\n    strengths = new Array(n);\\n    yz = new Array(n);\\n    for (i = 0; i < n; ++i) {\\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\\n    }\\n  }\\n\\n  force.initialize = function(_) {\\n    nodes = _;\\n    initialize();\\n  };\\n\\n  force.strength = function(_) {\\n    return arguments.length ? (strength = typeof _ === \\\"function\\\" ? _ : constant(+_), initialize(), force) : strength;\\n  };\\n\\n  force.y = function(_) {\\n    return arguments.length ? (y = typeof _ === \\\"function\\\" ? _ : constant(+_), initialize(), force) : y;\\n  };\\n\\n  return force;\\n}\\n\",\"// Computes the decimal coefficient and exponent of the specified number x with\\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\\n// For example, formatDecimal(1.23) returns [\\\"123\\\", 0].\\nexport default function(x, p) {\\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\\\"e\\\")) < 0) return null; // NaN, ±Infinity\\n  var i, coefficient = x.slice(0, i);\\n\\n  // The string returned by toExponential either has the form \\\\d\\\\.\\\\d+e[-+]\\\\d+\\n  // (e.g., 1.2e+3) or the form \\\\de[-+]\\\\d+ (e.g., 1e+3).\\n  return [\\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\\n    +x.slice(i + 1)\\n  ];\\n}\\n\",\"import formatDecimal from \\\"./formatDecimal\\\";\\n\\nexport default function(x) {\\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\\n}\\n\",\"import formatDecimal from \\\"./formatDecimal\\\";\\n\\nexport default function(x, p) {\\n  var d = formatDecimal(x, p);\\n  if (!d) return x + \\\"\\\";\\n  var coefficient = d[0],\\n      exponent = d[1];\\n  return exponent < 0 ? \\\"0.\\\" + new Array(-exponent).join(\\\"0\\\") + coefficient\\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \\\".\\\" + coefficient.slice(exponent + 1)\\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\\\"0\\\");\\n}\\n\",\"import formatDefault from \\\"./formatDefault\\\";\\nimport formatPrefixAuto from \\\"./formatPrefixAuto\\\";\\nimport formatRounded from \\\"./formatRounded\\\";\\n\\nexport default {\\n  \\\"\\\": formatDefault,\\n  \\\"%\\\": function(x, p) { return (x * 100).toFixed(p); },\\n  \\\"b\\\": function(x) { return Math.round(x).toString(2); },\\n  \\\"c\\\": function(x) { return x + \\\"\\\"; },\\n  \\\"d\\\": function(x) { return Math.round(x).toString(10); },\\n  \\\"e\\\": function(x, p) { return x.toExponential(p); },\\n  \\\"f\\\": function(x, p) { return x.toFixed(p); },\\n  \\\"g\\\": function(x, p) { return x.toPrecision(p); },\\n  \\\"o\\\": function(x) { return Math.round(x).toString(8); },\\n  \\\"p\\\": function(x, p) { return formatRounded(x * 100, p); },\\n  \\\"r\\\": formatRounded,\\n  \\\"s\\\": formatPrefixAuto,\\n  \\\"X\\\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\\n  \\\"x\\\": function(x) { return Math.round(x).toString(16); }\\n};\\n\",\"export default function(x, p) {\\n  x = x.toPrecision(p);\\n\\n  out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\\n    switch (x[i]) {\\n      case \\\".\\\": i0 = i1 = i; break;\\n      case \\\"0\\\": if (i0 === 0) i0 = i; i1 = i; break;\\n      case \\\"e\\\": break out;\\n      default: if (i0 > 0) i0 = 0; break;\\n    }\\n  }\\n\\n  return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\\n}\\n\",\"import formatTypes from \\\"./formatTypes\\\";\\n\\n// [[fill]align][sign][symbol][0][width][,][.precision][type]\\nvar re = /^(?:(.)?([<>=^]))?([+\\\\-\\\\( ])?([$#])?(0)?(\\\\d+)?(,)?(\\\\.\\\\d+)?([a-z%])?$/i;\\n\\nexport default function formatSpecifier(specifier) {\\n  return new FormatSpecifier(specifier);\\n}\\n\\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\\n\\nfunction FormatSpecifier(specifier) {\\n  if (!(match = re.exec(specifier))) throw new Error(\\\"invalid format: \\\" + specifier);\\n\\n  var match,\\n      fill = match[1] || \\\" \\\",\\n      align = match[2] || \\\">\\\",\\n      sign = match[3] || \\\"-\\\",\\n      symbol = match[4] || \\\"\\\",\\n      zero = !!match[5],\\n      width = match[6] && +match[6],\\n      comma = !!match[7],\\n      precision = match[8] && +match[8].slice(1),\\n      type = match[9] || \\\"\\\";\\n\\n  // The \\\"n\\\" type is an alias for \\\",g\\\".\\n  if (type === \\\"n\\\") comma = true, type = \\\"g\\\";\\n\\n  // Map invalid types to the default format.\\n  else if (!formatTypes[type]) type = \\\"\\\";\\n\\n  // If zero fill is specified, padding goes after sign and before digits.\\n  if (zero || (fill === \\\"0\\\" && align === \\\"=\\\")) zero = true, fill = \\\"0\\\", align = \\\"=\\\";\\n\\n  this.fill = fill;\\n  this.align = align;\\n  this.sign = sign;\\n  this.symbol = symbol;\\n  this.zero = zero;\\n  this.width = width;\\n  this.comma = comma;\\n  this.precision = precision;\\n  this.type = type;\\n}\\n\\nFormatSpecifier.prototype.toString = function() {\\n  return this.fill\\n      + this.align\\n      + this.sign\\n      + this.symbol\\n      + (this.zero ? \\\"0\\\" : \\\"\\\")\\n      + (this.width == null ? \\\"\\\" : Math.max(1, this.width | 0))\\n      + (this.comma ? \\\",\\\" : \\\"\\\")\\n      + (this.precision == null ? \\\"\\\" : \\\".\\\" + Math.max(0, this.precision | 0))\\n      + this.type;\\n};\\n\",\"export default function(x) {\\n  return x;\\n}\\n\",\"import formatLocale from \\\"./locale\\\";\\n\\nvar locale;\\nexport var format;\\nexport var formatPrefix;\\n\\ndefaultLocale({\\n  decimal: \\\".\\\",\\n  thousands: \\\",\\\",\\n  grouping: [3],\\n  currency: [\\\"$\\\", \\\"\\\"]\\n});\\n\\nexport default function defaultLocale(definition) {\\n  locale = formatLocale(definition);\\n  format = locale.format;\\n  formatPrefix = locale.formatPrefix;\\n  return locale;\\n}\\n\",\"import exponent from \\\"./exponent\\\";\\nimport formatGroup from \\\"./formatGroup\\\";\\nimport formatNumerals from \\\"./formatNumerals\\\";\\nimport formatSpecifier from \\\"./formatSpecifier\\\";\\nimport formatTypes from \\\"./formatTypes\\\";\\nimport {prefixExponent} from \\\"./formatPrefixAuto\\\";\\nimport identity from \\\"./identity\\\";\\n\\nvar prefixes = [\\\"y\\\",\\\"z\\\",\\\"a\\\",\\\"f\\\",\\\"p\\\",\\\"n\\\",\\\"µ\\\",\\\"m\\\",\\\"\\\",\\\"k\\\",\\\"M\\\",\\\"G\\\",\\\"T\\\",\\\"P\\\",\\\"E\\\",\\\"Z\\\",\\\"Y\\\"];\\n\\nexport default function(locale) {\\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity,\\n      currency = locale.currency,\\n      decimal = locale.decimal,\\n      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity,\\n      percent = locale.percent || \\\"%\\\";\\n\\n  function newFormat(specifier) {\\n    specifier = formatSpecifier(specifier);\\n\\n    var fill = specifier.fill,\\n        align = specifier.align,\\n        sign = specifier.sign,\\n        symbol = specifier.symbol,\\n        zero = specifier.zero,\\n        width = specifier.width,\\n        comma = specifier.comma,\\n        precision = specifier.precision,\\n        type = specifier.type;\\n\\n    // Compute the prefix and suffix.\\n    // For SI-prefix, the suffix is lazily computed.\\n    var prefix = symbol === \\\"$\\\" ? currency[0] : symbol === \\\"#\\\" && /[boxX]/.test(type) ? \\\"0\\\" + type.toLowerCase() : \\\"\\\",\\n        suffix = symbol === \\\"$\\\" ? currency[1] : /[%p]/.test(type) ? percent : \\\"\\\";\\n\\n    // What format function should we use?\\n    // Is this an integer type?\\n    // Can this type generate exponential notation?\\n    var formatType = formatTypes[type],\\n        maybeSuffix = !type || /[defgprs%]/.test(type);\\n\\n    // Set the default precision if not specified,\\n    // or clamp the specified precision to the supported range.\\n    // For significant precision, it must be in [1, 21].\\n    // For fixed precision, it must be in [0, 20].\\n    precision = precision == null ? (type ? 6 : 12)\\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\\n        : Math.max(0, Math.min(20, precision));\\n\\n    function format(value) {\\n      var valuePrefix = prefix,\\n          valueSuffix = suffix,\\n          i, n, c;\\n\\n      if (type === \\\"c\\\") {\\n        valueSuffix = formatType(value) + valueSuffix;\\n        value = \\\"\\\";\\n      } else {\\n        value = +value;\\n\\n        // Perform the initial formatting.\\n        var valueNegative = value < 0;\\n        value = formatType(Math.abs(value), precision);\\n\\n        // If a negative value rounds to zero during formatting, treat as positive.\\n        if (valueNegative && +value === 0) valueNegative = false;\\n\\n        // Compute the prefix and suffix.\\n        valuePrefix = (valueNegative ? (sign === \\\"(\\\" ? sign : \\\"-\\\") : sign === \\\"-\\\" || sign === \\\"(\\\" ? \\\"\\\" : sign) + valuePrefix;\\n        valueSuffix = (type === \\\"s\\\" ? prefixes[8 + prefixExponent / 3] : \\\"\\\") + valueSuffix + (valueNegative && sign === \\\"(\\\" ? \\\")\\\" : \\\"\\\");\\n\\n        // Break the formatted value into the integer “value” part that can be\\n        // grouped, and fractional or exponential “suffix” part that is not.\\n        if (maybeSuffix) {\\n          i = -1, n = value.length;\\n          while (++i < n) {\\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\\n              value = value.slice(0, i);\\n              break;\\n            }\\n          }\\n        }\\n      }\\n\\n      // If the fill character is not \\\"0\\\", grouping is applied before padding.\\n      if (comma && !zero) value = group(value, Infinity);\\n\\n      // Compute the padding.\\n      var length = valuePrefix.length + value.length + valueSuffix.length,\\n          padding = length < width ? new Array(width - length + 1).join(fill) : \\\"\\\";\\n\\n      // If the fill character is \\\"0\\\", grouping is applied after padding.\\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \\\"\\\";\\n\\n      // Reconstruct the final output based on the desired alignment.\\n      switch (align) {\\n        case \\\"<\\\": value = valuePrefix + value + valueSuffix + padding; break;\\n        case \\\"=\\\": value = valuePrefix + padding + value + valueSuffix; break;\\n        case \\\"^\\\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\\n        default: value = padding + valuePrefix + value + valueSuffix; break;\\n      }\\n\\n      return numerals(value);\\n    }\\n\\n    format.toString = function() {\\n      return specifier + \\\"\\\";\\n    };\\n\\n    return format;\\n  }\\n\\n  function formatPrefix(specifier, value) {\\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \\\"f\\\", specifier)),\\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\\n        k = Math.pow(10, -e),\\n        prefix = prefixes[8 + e / 3];\\n    return function(value) {\\n      return f(k * value) + prefix;\\n    };\\n  }\\n\\n  return {\\n    format: newFormat,\\n    formatPrefix: formatPrefix\\n  };\\n}\\n\",\"export default function(grouping, thousands) {\\n  return function(value, width) {\\n    var i = value.length,\\n        t = [],\\n        j = 0,\\n        g = grouping[0],\\n        length = 0;\\n\\n    while (i > 0 && g > 0) {\\n      if (length + g + 1 > width) g = Math.max(1, width - length);\\n      t.push(value.substring(i -= g, i + g));\\n      if ((length += g + 1) > width) break;\\n      g = grouping[j = (j + 1) % grouping.length];\\n    }\\n\\n    return t.reverse().join(thousands);\\n  };\\n}\\n\",\"export default function(numerals) {\\n  return function(value) {\\n    return value.replace(/[0-9]/g, function(i) {\\n      return numerals[+i];\\n    });\\n  };\\n}\\n\",\"import exponent from \\\"./exponent\\\";\\n\\nexport default function(step) {\\n  return Math.max(0, -exponent(Math.abs(step)));\\n}\\n\",\"import exponent from \\\"./exponent\\\";\\n\\nexport default function(step, value) {\\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\\n}\\n\",\"import exponent from \\\"./exponent\\\";\\n\\nexport default function(step, max) {\\n  step = Math.abs(step), max = Math.abs(max) - step;\\n  return Math.max(0, exponent(max) - exponent(step)) + 1;\\n}\\n\",\"// Adds floating point numbers with twice the normal precision.\\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\\n// 305–363 (1997).\\n// Code adapted from GeographicLib by Charles F. F. Karney,\\n// http://geographiclib.sourceforge.net/\\n\\nexport default function() {\\n  return new Adder;\\n}\\n\\nfunction Adder() {\\n  this.reset();\\n}\\n\\nAdder.prototype = {\\n  constructor: Adder,\\n  reset: function() {\\n    this.s = // rounded value\\n    this.t = 0; // exact error\\n  },\\n  add: function(y) {\\n    add(temp, y, this.t);\\n    add(this, temp.s, this.s);\\n    if (this.s) this.t += temp.t;\\n    else this.s = temp.t;\\n  },\\n  valueOf: function() {\\n    return this.s;\\n  }\\n};\\n\\nvar temp = new Adder;\\n\\nfunction add(adder, a, b) {\\n  var x = adder.s = a + b,\\n      bv = x - a,\\n      av = x - bv;\\n  adder.t = (a - av) + (b - bv);\\n}\\n\",\"export var epsilon = 1e-6;\\nexport var epsilon2 = 1e-12;\\nexport var pi = Math.PI;\\nexport var halfPi = pi / 2;\\nexport var quarterPi = pi / 4;\\nexport var tau = pi * 2;\\n\\nexport var degrees = 180 / pi;\\nexport var radians = pi / 180;\\n\\nexport var abs = Math.abs;\\nexport var atan = Math.atan;\\nexport var atan2 = Math.atan2;\\nexport var cos = Math.cos;\\nexport var ceil = Math.ceil;\\nexport var exp = Math.exp;\\nexport var floor = Math.floor;\\nexport var log = Math.log;\\nexport var pow = Math.pow;\\nexport var sin = Math.sin;\\nexport var sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\\nexport var sqrt = Math.sqrt;\\nexport var tan = Math.tan;\\n\\nexport function acos(x) {\\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\\n}\\n\\nexport function asin(x) {\\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\\n}\\n\\nexport function haversin(x) {\\n  return (x = sin(x / 2)) * x;\\n}\\n\",\"export default function noop() {}\\n\",\"function streamGeometry(geometry, stream) {\\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\\n    streamGeometryType[geometry.type](geometry, stream);\\n  }\\n}\\n\\nvar streamObjectType = {\\n  Feature: function(object, stream) {\\n    streamGeometry(object.geometry, stream);\\n  },\\n  FeatureCollection: function(object, stream) {\\n    var features = object.features, i = -1, n = features.length;\\n    while (++i < n) streamGeometry(features[i].geometry, stream);\\n  }\\n};\\n\\nvar streamGeometryType = {\\n  Sphere: function(object, stream) {\\n    stream.sphere();\\n  },\\n  Point: function(object, stream) {\\n    object = object.coordinates;\\n    stream.point(object[0], object[1], object[2]);\\n  },\\n  MultiPoint: function(object, stream) {\\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\\n  },\\n  LineString: function(object, stream) {\\n    streamLine(object.coordinates, stream, 0);\\n  },\\n  MultiLineString: function(object, stream) {\\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\\n    while (++i < n) streamLine(coordinates[i], stream, 0);\\n  },\\n  Polygon: function(object, stream) {\\n    streamPolygon(object.coordinates, stream);\\n  },\\n  MultiPolygon: function(object, stream) {\\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\\n    while (++i < n) streamPolygon(coordinates[i], stream);\\n  },\\n  GeometryCollection: function(object, stream) {\\n    var geometries = object.geometries, i = -1, n = geometries.length;\\n    while (++i < n) streamGeometry(geometries[i], stream);\\n  }\\n};\\n\\nfunction streamLine(coordinates, stream, closed) {\\n  var i = -1, n = coordinates.length - closed, coordinate;\\n  stream.lineStart();\\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\\n  stream.lineEnd();\\n}\\n\\nfunction streamPolygon(coordinates, stream) {\\n  var i = -1, n = coordinates.length;\\n  stream.polygonStart();\\n  while (++i < n) streamLine(coordinates[i], stream, 1);\\n  stream.polygonEnd();\\n}\\n\\nexport default function(object, stream) {\\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\\n    streamObjectType[object.type](object, stream);\\n  } else {\\n    streamGeometry(object, stream);\\n  }\\n}\\n\",\"import adder from \\\"./adder\\\";\\nimport {atan2, cos, quarterPi, radians, sin, tau} from \\\"./math\\\";\\nimport noop from \\\"./noop\\\";\\nimport stream from \\\"./stream\\\";\\n\\nexport var areaRingSum = adder();\\n\\nvar areaSum = adder(),\\n    lambda00,\\n    phi00,\\n    lambda0,\\n    cosPhi0,\\n    sinPhi0;\\n\\nexport var areaStream = {\\n  point: noop,\\n  lineStart: noop,\\n  lineEnd: noop,\\n  polygonStart: function() {\\n    areaRingSum.reset();\\n    areaStream.lineStart = areaRingStart;\\n    areaStream.lineEnd = areaRingEnd;\\n  },\\n  polygonEnd: function() {\\n    var areaRing = +areaRingSum;\\n    areaSum.add(areaRing < 0 ? tau + areaRing : areaRing);\\n    this.lineStart = this.lineEnd = this.point = noop;\\n  },\\n  sphere: function() {\\n    areaSum.add(tau);\\n  }\\n};\\n\\nfunction areaRingStart() {\\n  areaStream.point = areaPointFirst;\\n}\\n\\nfunction areaRingEnd() {\\n  areaPoint(lambda00, phi00);\\n}\\n\\nfunction areaPointFirst(lambda, phi) {\\n  areaStream.point = areaPoint;\\n  lambda00 = lambda, phi00 = phi;\\n  lambda *= radians, phi *= radians;\\n  lambda0 = lambda, cosPhi0 = cos(phi = phi / 2 + quarterPi), sinPhi0 = sin(phi);\\n}\\n\\nfunction areaPoint(lambda, phi) {\\n  lambda *= radians, phi *= radians;\\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\\n\\n  // Spherical excess E for a spherical triangle with vertices: south pole,\\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\\n  var dLambda = lambda - lambda0,\\n      sdLambda = dLambda >= 0 ? 1 : -1,\\n      adLambda = sdLambda * dLambda,\\n      cosPhi = cos(phi),\\n      sinPhi = sin(phi),\\n      k = sinPhi0 * sinPhi,\\n      u = cosPhi0 * cosPhi + k * cos(adLambda),\\n      v = k * sdLambda * sin(adLambda);\\n  areaRingSum.add(atan2(v, u));\\n\\n  // Advance the previous points.\\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\\n}\\n\\nexport default function(object) {\\n  areaSum.reset();\\n  stream(object, areaStream);\\n  return areaSum * 2;\\n}\\n\",\"import {asin, atan2, cos, sin, sqrt} from \\\"./math\\\";\\n\\nexport function spherical(cartesian) {\\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\\n}\\n\\nexport function cartesian(spherical) {\\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos(phi);\\n  return [cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi)];\\n}\\n\\nexport function cartesianDot(a, b) {\\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\\n}\\n\\nexport function cartesianCross(a, b) {\\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\\n}\\n\\n// TODO return a\\nexport function cartesianAddInPlace(a, b) {\\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\\n}\\n\\nexport function cartesianScale(vector, k) {\\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\\n}\\n\\n// TODO return d\\nexport function cartesianNormalizeInPlace(d) {\\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\\n  d[0] /= l, d[1] /= l, d[2] /= l;\\n}\\n\",\"import adder from \\\"./adder\\\";\\nimport {areaStream, areaRingSum} from \\\"./area\\\";\\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace, spherical} from \\\"./cartesian\\\";\\nimport {abs, degrees, epsilon, radians} from \\\"./math\\\";\\nimport stream from \\\"./stream\\\";\\n\\nvar lambda0, phi0, lambda1, phi1, // bounds\\n    lambda2, // previous lambda-coordinate\\n    lambda00, phi00, // first point\\n    p0, // previous 3D point\\n    deltaSum = adder(),\\n    ranges,\\n    range;\\n\\nvar boundsStream = {\\n  point: boundsPoint,\\n  lineStart: boundsLineStart,\\n  lineEnd: boundsLineEnd,\\n  polygonStart: function() {\\n    boundsStream.point = boundsRingPoint;\\n    boundsStream.lineStart = boundsRingStart;\\n    boundsStream.lineEnd = boundsRingEnd;\\n    deltaSum.reset();\\n    areaStream.polygonStart();\\n  },\\n  polygonEnd: function() {\\n    areaStream.polygonEnd();\\n    boundsStream.point = boundsPoint;\\n    boundsStream.lineStart = boundsLineStart;\\n    boundsStream.lineEnd = boundsLineEnd;\\n    if (areaRingSum < 0) lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);\\n    else if (deltaSum > epsilon) phi1 = 90;\\n    else if (deltaSum < -epsilon) phi0 = -90;\\n    range[0] = lambda0, range[1] = lambda1;\\n  }\\n};\\n\\nfunction boundsPoint(lambda, phi) {\\n  ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\\n  if (phi < phi0) phi0 = phi;\\n  if (phi > phi1) phi1 = phi;\\n}\\n\\nfunction linePoint(lambda, phi) {\\n  var p = cartesian([lambda * radians, phi * radians]);\\n  if (p0) {\\n    var normal = cartesianCross(p0, p),\\n        equatorial = [normal[1], -normal[0], 0],\\n        inflection = cartesianCross(equatorial, normal);\\n    cartesianNormalizeInPlace(inflection);\\n    inflection = spherical(inflection);\\n    var delta = lambda - lambda2,\\n        sign = delta > 0 ? 1 : -1,\\n        lambdai = inflection[0] * degrees * sign,\\n        phii,\\n        antimeridian = abs(delta) > 180;\\n    if (antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\\n      phii = inflection[1] * degrees;\\n      if (phii > phi1) phi1 = phii;\\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\\n      phii = -inflection[1] * degrees;\\n      if (phii < phi0) phi0 = phii;\\n    } else {\\n      if (phi < phi0) phi0 = phi;\\n      if (phi > phi1) phi1 = phi;\\n    }\\n    if (antimeridian) {\\n      if (lambda < lambda2) {\\n        if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\\n      } else {\\n        if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\\n      }\\n    } else {\\n      if (lambda1 >= lambda0) {\\n        if (lambda < lambda0) lambda0 = lambda;\\n        if (lambda > lambda1) lambda1 = lambda;\\n      } else {\\n        if (lambda > lambda2) {\\n          if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\\n        } else {\\n          if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\\n        }\\n      }\\n    }\\n  } else {\\n    ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\\n  }\\n  if (phi < phi0) phi0 = phi;\\n  if (phi > phi1) phi1 = phi;\\n  p0 = p, lambda2 = lambda;\\n}\\n\\nfunction boundsLineStart() {\\n  boundsStream.point = linePoint;\\n}\\n\\nfunction boundsLineEnd() {\\n  range[0] = lambda0, range[1] = lambda1;\\n  boundsStream.point = boundsPoint;\\n  p0 = null;\\n}\\n\\nfunction boundsRingPoint(lambda, phi) {\\n  if (p0) {\\n    var delta = lambda - lambda2;\\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\\n  } else {\\n    lambda00 = lambda, phi00 = phi;\\n  }\\n  areaStream.point(lambda, phi);\\n  linePoint(lambda, phi);\\n}\\n\\nfunction boundsRingStart() {\\n  areaStream.lineStart();\\n}\\n\\nfunction boundsRingEnd() {\\n  boundsRingPoint(lambda00, phi00);\\n  areaStream.lineEnd();\\n  if (abs(deltaSum) > epsilon) lambda0 = -(lambda1 = 180);\\n  range[0] = lambda0, range[1] = lambda1;\\n  p0 = null;\\n}\\n\\n// Finds the left-right distance between two longitudes.\\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\\n// the distance between ±180° to be 360°.\\nfunction angle(lambda0, lambda1) {\\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\\n}\\n\\nfunction rangeCompare(a, b) {\\n  return a[0] - b[0];\\n}\\n\\nfunction rangeContains(range, x) {\\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\\n}\\n\\nexport default function(feature) {\\n  var i, n, a, b, merged, deltaMax, delta;\\n\\n  phi1 = lambda1 = -(lambda0 = phi0 = Infinity);\\n  ranges = [];\\n  stream(feature, boundsStream);\\n\\n  // First, sort ranges by their minimum longitudes.\\n  if (n = ranges.length) {\\n    ranges.sort(rangeCompare);\\n\\n    // Then, merge any ranges that overlap.\\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\\n      b = ranges[i];\\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\\n      } else {\\n        merged.push(a = b);\\n      }\\n    }\\n\\n    // Finally, find the largest gap between the merged ranges.\\n    // The final bounding box will be the inverse of this gap.\\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\\n      b = merged[i];\\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0 = b[0], lambda1 = a[1];\\n    }\\n  }\\n\\n  ranges = range = null;\\n\\n  return lambda0 === Infinity || phi0 === Infinity\\n      ? [[NaN, NaN], [NaN, NaN]]\\n      : [[lambda0, phi0], [lambda1, phi1]];\\n}\\n\",\"import {asin, atan2, cos, degrees, epsilon, epsilon2, radians, sin, sqrt} from \\\"./math\\\";\\nimport noop from \\\"./noop\\\";\\nimport stream from \\\"./stream\\\";\\n\\nvar W0, W1,\\n    X0, Y0, Z0,\\n    X1, Y1, Z1,\\n    X2, Y2, Z2,\\n    lambda00, phi00, // first point\\n    x0, y0, z0; // previous point\\n\\nvar centroidStream = {\\n  sphere: noop,\\n  point: centroidPoint,\\n  lineStart: centroidLineStart,\\n  lineEnd: centroidLineEnd,\\n  polygonStart: function() {\\n    centroidStream.lineStart = centroidRingStart;\\n    centroidStream.lineEnd = centroidRingEnd;\\n  },\\n  polygonEnd: function() {\\n    centroidStream.lineStart = centroidLineStart;\\n    centroidStream.lineEnd = centroidLineEnd;\\n  }\\n};\\n\\n// Arithmetic mean of Cartesian vectors.\\nfunction centroidPoint(lambda, phi) {\\n  lambda *= radians, phi *= radians;\\n  var cosPhi = cos(phi);\\n  centroidPointCartesian(cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi));\\n}\\n\\nfunction centroidPointCartesian(x, y, z) {\\n  ++W0;\\n  X0 += (x - X0) / W0;\\n  Y0 += (y - Y0) / W0;\\n  Z0 += (z - Z0) / W0;\\n}\\n\\nfunction centroidLineStart() {\\n  centroidStream.point = centroidLinePointFirst;\\n}\\n\\nfunction centroidLinePointFirst(lambda, phi) {\\n  lambda *= radians, phi *= radians;\\n  var cosPhi = cos(phi);\\n  x0 = cosPhi * cos(lambda);\\n  y0 = cosPhi * sin(lambda);\\n  z0 = sin(phi);\\n  centroidStream.point = centroidLinePoint;\\n  centroidPointCartesian(x0, y0, z0);\\n}\\n\\nfunction centroidLinePoint(lambda, phi) {\\n  lambda *= radians, phi *= radians;\\n  var cosPhi = cos(phi),\\n      x = cosPhi * cos(lambda),\\n      y = cosPhi * sin(lambda),\\n      z = sin(phi),\\n      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\\n  W1 += w;\\n  X1 += w * (x0 + (x0 = x));\\n  Y1 += w * (y0 + (y0 = y));\\n  Z1 += w * (z0 + (z0 = z));\\n  centroidPointCartesian(x0, y0, z0);\\n}\\n\\nfunction centroidLineEnd() {\\n  centroidStream.point = centroidPoint;\\n}\\n\\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\\n// J. Applied Mechanics 42, 239 (1975).\\nfunction centroidRingStart() {\\n  centroidStream.point = centroidRingPointFirst;\\n}\\n\\nfunction centroidRingEnd() {\\n  centroidRingPoint(lambda00, phi00);\\n  centroidStream.point = centroidPoint;\\n}\\n\\nfunction centroidRingPointFirst(lambda, phi) {\\n  lambda00 = lambda, phi00 = phi;\\n  lambda *= radians, phi *= radians;\\n  centroidStream.point = centroidRingPoint;\\n  var cosPhi = cos(phi);\\n  x0 = cosPhi * cos(lambda);\\n  y0 = cosPhi * sin(lambda);\\n  z0 = sin(phi);\\n  centroidPointCartesian(x0, y0, z0);\\n}\\n\\nfunction centroidRingPoint(lambda, phi) {\\n  lambda *= radians, phi *= radians;\\n  var cosPhi = cos(phi),\\n      x = cosPhi * cos(lambda),\\n      y = cosPhi * sin(lambda),\\n      z = sin(phi),\\n      cx = y0 * z - z0 * y,\\n      cy = z0 * x - x0 * z,\\n      cz = x0 * y - y0 * x,\\n      m = sqrt(cx * cx + cy * cy + cz * cz),\\n      w = asin(m), // line weight = angle\\n      v = m && -w / m; // area weight multiplier\\n  X2 += v * cx;\\n  Y2 += v * cy;\\n  Z2 += v * cz;\\n  W1 += w;\\n  X1 += w * (x0 + (x0 = x));\\n  Y1 += w * (y0 + (y0 = y));\\n  Z1 += w * (z0 + (z0 = z));\\n  centroidPointCartesian(x0, y0, z0);\\n}\\n\\nexport default function(object) {\\n  W0 = W1 =\\n  X0 = Y0 = Z0 =\\n  X1 = Y1 = Z1 =\\n  X2 = Y2 = Z2 = 0;\\n  stream(object, centroidStream);\\n\\n  var x = X2,\\n      y = Y2,\\n      z = Z2,\\n      m = x * x + y * y + z * z;\\n\\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\\n  if (m < epsilon2) {\\n    x = X1, y = Y1, z = Z1;\\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\\n    if (W1 < epsilon) x = X0, y = Y0, z = Z0;\\n    m = x * x + y * y + z * z;\\n    // If the feature still has an undefined ccentroid, then return.\\n    if (m < epsilon2) return [NaN, NaN];\\n  }\\n\\n  return [atan2(y, x) * degrees, asin(z / sqrt(m)) * degrees];\\n}\\n\",\"export default function(x) {\\n  return function() {\\n    return x;\\n  };\\n}\\n\",\"export default function(a, b) {\\n\\n  function compose(x, y) {\\n    return x = a(x, y), b(x[0], x[1]);\\n  }\\n\\n  if (a.invert && b.invert) compose.invert = function(x, y) {\\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\\n  };\\n\\n  return compose;\\n}\\n\",\"import compose from \\\"./compose\\\";\\nimport {asin, atan2, cos, degrees, pi, radians, sin, tau} from \\\"./math\\\";\\n\\nfunction rotationIdentity(lambda, phi) {\\n  return [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\\n}\\n\\nrotationIdentity.invert = rotationIdentity;\\n\\nexport function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\\n  return (deltaLambda %= tau) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\\n    : rotationLambda(deltaLambda))\\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\\n    : rotationIdentity);\\n}\\n\\nfunction forwardRotationLambda(deltaLambda) {\\n  return function(lambda, phi) {\\n    return lambda += deltaLambda, [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\\n  };\\n}\\n\\nfunction rotationLambda(deltaLambda) {\\n  var rotation = forwardRotationLambda(deltaLambda);\\n  rotation.invert = forwardRotationLambda(-deltaLambda);\\n  return rotation;\\n}\\n\\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\\n  var cosDeltaPhi = cos(deltaPhi),\\n      sinDeltaPhi = sin(deltaPhi),\\n      cosDeltaGamma = cos(deltaGamma),\\n      sinDeltaGamma = sin(deltaGamma);\\n\\n  function rotation(lambda, phi) {\\n    var cosPhi = cos(phi),\\n        x = cos(lambda) * cosPhi,\\n        y = sin(lambda) * cosPhi,\\n        z = sin(phi),\\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\\n    return [\\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\\n    ];\\n  }\\n\\n  rotation.invert = function(lambda, phi) {\\n    var cosPhi = cos(phi),\\n        x = cos(lambda) * cosPhi,\\n        y = sin(lambda) * cosPhi,\\n        z = sin(phi),\\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\\n    return [\\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\\n    ];\\n  };\\n\\n  return rotation;\\n}\\n\\nexport default function(rotate) {\\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\\n\\n  function forward(coordinates) {\\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\\n  }\\n\\n  forward.invert = function(coordinates) {\\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\\n  };\\n\\n  return forward;\\n}\\n\",\"import {cartesian, cartesianNormalizeInPlace, spherical} from \\\"./cartesian\\\";\\nimport constant from \\\"./constant\\\";\\nimport {acos, cos, degrees, epsilon, radians, sin, tau} from \\\"./math\\\";\\nimport {rotateRadians} from \\\"./rotation\\\";\\n\\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\\nexport function circleStream(stream, radius, delta, direction, t0, t1) {\\n  if (!delta) return;\\n  var cosRadius = cos(radius),\\n      sinRadius = sin(radius),\\n      step = direction * delta;\\n  if (t0 == null) {\\n    t0 = radius + direction * tau;\\n    t1 = radius - step / 2;\\n  } else {\\n    t0 = circleRadius(cosRadius, t0);\\n    t1 = circleRadius(cosRadius, t1);\\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau;\\n  }\\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\\n    point = spherical([cosRadius, -sinRadius * cos(t), -sinRadius * sin(t)]);\\n    stream.point(point[0], point[1]);\\n  }\\n}\\n\\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\\nfunction circleRadius(cosRadius, point) {\\n  point = cartesian(point), point[0] -= cosRadius;\\n  cartesianNormalizeInPlace(point);\\n  var radius = acos(-point[1]);\\n  return ((-point[2] < 0 ? -radius : radius) + tau - epsilon) % tau;\\n}\\n\\nexport default function() {\\n  var center = constant([0, 0]),\\n      radius = constant(90),\\n      precision = constant(6),\\n      ring,\\n      rotate,\\n      stream = {point: point};\\n\\n  function point(x, y) {\\n    ring.push(x = rotate(x, y));\\n    x[0] *= degrees, x[1] *= degrees;\\n  }\\n\\n  function circle() {\\n    var c = center.apply(this, arguments),\\n        r = radius.apply(this, arguments) * radians,\\n        p = precision.apply(this, arguments) * radians;\\n    ring = [];\\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\\n    circleStream(stream, r, p, 1);\\n    c = {type: \\\"Polygon\\\", coordinates: [ring]};\\n    ring = rotate = null;\\n    return c;\\n  }\\n\\n  circle.center = function(_) {\\n    return arguments.length ? (center = typeof _ === \\\"function\\\" ? _ : constant([+_[0], +_[1]]), circle) : center;\\n  };\\n\\n  circle.radius = function(_) {\\n    return arguments.length ? (radius = typeof _ === \\\"function\\\" ? _ : constant(+_), circle) : radius;\\n  };\\n\\n  circle.precision = function(_) {\\n    return arguments.length ? (precision = typeof _ === \\\"function\\\" ? _ : constant(+_), circle) : precision;\\n  };\\n\\n  return circle;\\n}\\n\",\"import noop from \\\"../noop\\\";\\n\\nexport default function() {\\n  var lines = [],\\n      line;\\n  return {\\n    point: function(x, y) {\\n      line.push([x, y]);\\n    },\\n    lineStart: function() {\\n      lines.push(line = []);\\n    },\\n    lineEnd: noop,\\n    rejoin: function() {\\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\\n    },\\n    result: function() {\\n      var result = lines;\\n      lines = [];\\n      line = null;\\n      return result;\\n    }\\n  };\\n}\\n\",\"import {abs, epsilon} from \\\"./math\\\";\\n\\nexport default function(a, b) {\\n  return abs(a[0] - b[0]) < epsilon && abs(a[1] - b[1]) < epsilon;\\n}\\n\",\"import pointEqual from \\\"../pointEqual\\\";\\n\\nfunction Intersection(point, points, other, entry) {\\n  this.x = point;\\n  this.z = points;\\n  this.o = other; // another intersection\\n  this.e = entry; // is an entry?\\n  this.v = false; // visited\\n  this.n = this.p = null; // next & previous\\n}\\n\\n// A generalized polygon clipping algorithm: given a polygon that has been cut\\n// into its visible line segments, and rejoins the segments by interpolating\\n// along the clip edge.\\nexport default function(segments, compareIntersection, startInside, interpolate, stream) {\\n  var subject = [],\\n      clip = [],\\n      i,\\n      n;\\n\\n  segments.forEach(function(segment) {\\n    if ((n = segment.length - 1) <= 0) return;\\n    var n, p0 = segment[0], p1 = segment[n], x;\\n\\n    // If the first and last points of a segment are coincident, then treat as a\\n    // closed ring. TODO if all rings are closed, then the winding order of the\\n    // exterior ring should be checked.\\n    if (pointEqual(p0, p1)) {\\n      stream.lineStart();\\n      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\\n      stream.lineEnd();\\n      return;\\n    }\\n\\n    subject.push(x = new Intersection(p0, segment, null, true));\\n    clip.push(x.o = new Intersection(p0, null, x, false));\\n    subject.push(x = new Intersection(p1, segment, null, false));\\n    clip.push(x.o = new Intersection(p1, null, x, true));\\n  });\\n\\n  if (!subject.length) return;\\n\\n  clip.sort(compareIntersection);\\n  link(subject);\\n  link(clip);\\n\\n  for (i = 0, n = clip.length; i < n; ++i) {\\n    clip[i].e = startInside = !startInside;\\n  }\\n\\n  var start = subject[0],\\n      points,\\n      point;\\n\\n  while (1) {\\n    // Find first unvisited intersection.\\n    var current = start,\\n        isSubject = true;\\n    while (current.v) if ((current = current.n) === start) return;\\n    points = current.z;\\n    stream.lineStart();\\n    do {\\n      current.v = current.o.v = true;\\n      if (current.e) {\\n        if (isSubject) {\\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\\n        } else {\\n          interpolate(current.x, current.n.x, 1, stream);\\n        }\\n        current = current.n;\\n      } else {\\n        if (isSubject) {\\n          points = current.p.z;\\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\\n        } else {\\n          interpolate(current.x, current.p.x, -1, stream);\\n        }\\n        current = current.p;\\n      }\\n      current = current.o;\\n      points = current.z;\\n      isSubject = !isSubject;\\n    } while (!current.v);\\n    stream.lineEnd();\\n  }\\n}\\n\\nfunction link(array) {\\n  if (!(n = array.length)) return;\\n  var n,\\n      i = 0,\\n      a = array[0],\\n      b;\\n  while (++i < n) {\\n    a.n = b = array[i];\\n    b.p = a;\\n    a = b;\\n  }\\n  a.n = b = array[0];\\n  b.p = a;\\n}\\n\",\"import adder from \\\"./adder\\\";\\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace} from \\\"./cartesian\\\";\\nimport {asin, atan2, cos, epsilon, halfPi, pi, quarterPi, sin, tau} from \\\"./math\\\";\\n\\nvar sum = adder();\\n\\nexport default function(polygon, point) {\\n  var lambda = point[0],\\n      phi = point[1],\\n      sinPhi = sin(phi),\\n      normal = [sin(lambda), -cos(lambda), 0],\\n      angle = 0,\\n      winding = 0;\\n\\n  sum.reset();\\n\\n  if (sinPhi === 1) phi = halfPi + epsilon;\\n  else if (sinPhi === -1) phi = -halfPi - epsilon;\\n\\n  for (var i = 0, n = polygon.length; i < n; ++i) {\\n    if (!(m = (ring = polygon[i]).length)) continue;\\n    var ring,\\n        m,\\n        point0 = ring[m - 1],\\n        lambda0 = point0[0],\\n        phi0 = point0[1] / 2 + quarterPi,\\n        sinPhi0 = sin(phi0),\\n        cosPhi0 = cos(phi0);\\n\\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\\n      var point1 = ring[j],\\n          lambda1 = point1[0],\\n          phi1 = point1[1] / 2 + quarterPi,\\n          sinPhi1 = sin(phi1),\\n          cosPhi1 = cos(phi1),\\n          delta = lambda1 - lambda0,\\n          sign = delta >= 0 ? 1 : -1,\\n          absDelta = sign * delta,\\n          antimeridian = absDelta > pi,\\n          k = sinPhi0 * sinPhi1;\\n\\n      sum.add(atan2(k * sign * sin(absDelta), cosPhi0 * cosPhi1 + k * cos(absDelta)));\\n      angle += antimeridian ? delta + sign * tau : delta;\\n\\n      // Are the longitudes either side of the point’s meridian (lambda),\\n      // and are the latitudes smaller than the parallel (phi)?\\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\\n        cartesianNormalizeInPlace(arc);\\n        var intersection = cartesianCross(normal, arc);\\n        cartesianNormalizeInPlace(intersection);\\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\\n        }\\n      }\\n    }\\n  }\\n\\n  // First, determine whether the South pole is inside or outside:\\n  //\\n  // It is inside if:\\n  // * the polygon winds around it in a clockwise direction.\\n  // * the polygon does not (cumulatively) wind around it, but has a negative\\n  //   (counter-clockwise) area.\\n  //\\n  // Second, count the (signed) number of times a segment crosses a lambda\\n  // from the point to the South pole.  If it is zero, then the point is the\\n  // same side as the South pole.\\n\\n  return (angle < -epsilon || angle < epsilon && sum < -epsilon) ^ (winding & 1);\\n}\\n\",\"import clipBuffer from \\\"./buffer\\\";\\nimport clipRejoin from \\\"./rejoin\\\";\\nimport {epsilon, halfPi} from \\\"../math\\\";\\nimport polygonContains from \\\"../polygonContains\\\";\\nimport {merge} from \\\"d3-array\\\";\\n\\nexport default function(pointVisible, clipLine, interpolate, start) {\\n  return function(sink) {\\n    var line = clipLine(sink),\\n        ringBuffer = clipBuffer(),\\n        ringSink = clipLine(ringBuffer),\\n        polygonStarted = false,\\n        polygon,\\n        segments,\\n        ring;\\n\\n    var clip = {\\n      point: point,\\n      lineStart: lineStart,\\n      lineEnd: lineEnd,\\n      polygonStart: function() {\\n        clip.point = pointRing;\\n        clip.lineStart = ringStart;\\n        clip.lineEnd = ringEnd;\\n        segments = [];\\n        polygon = [];\\n      },\\n      polygonEnd: function() {\\n        clip.point = point;\\n        clip.lineStart = lineStart;\\n        clip.lineEnd = lineEnd;\\n        segments = merge(segments);\\n        var startInside = polygonContains(polygon, start);\\n        if (segments.length) {\\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\\n          clipRejoin(segments, compareIntersection, startInside, interpolate, sink);\\n        } else if (startInside) {\\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\\n          sink.lineStart();\\n          interpolate(null, null, 1, sink);\\n          sink.lineEnd();\\n        }\\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\\n        segments = polygon = null;\\n      },\\n      sphere: function() {\\n        sink.polygonStart();\\n        sink.lineStart();\\n        interpolate(null, null, 1, sink);\\n        sink.lineEnd();\\n        sink.polygonEnd();\\n      }\\n    };\\n\\n    function point(lambda, phi) {\\n      if (pointVisible(lambda, phi)) sink.point(lambda, phi);\\n    }\\n\\n    function pointLine(lambda, phi) {\\n      line.point(lambda, phi);\\n    }\\n\\n    function lineStart() {\\n      clip.point = pointLine;\\n      line.lineStart();\\n    }\\n\\n    function lineEnd() {\\n      clip.point = point;\\n      line.lineEnd();\\n    }\\n\\n    function pointRing(lambda, phi) {\\n      ring.push([lambda, phi]);\\n      ringSink.point(lambda, phi);\\n    }\\n\\n    function ringStart() {\\n      ringSink.lineStart();\\n      ring = [];\\n    }\\n\\n    function ringEnd() {\\n      pointRing(ring[0][0], ring[0][1]);\\n      ringSink.lineEnd();\\n\\n      var clean = ringSink.clean(),\\n          ringSegments = ringBuffer.result(),\\n          i, n = ringSegments.length, m,\\n          segment,\\n          point;\\n\\n      ring.pop();\\n      polygon.push(ring);\\n      ring = null;\\n\\n      if (!n) return;\\n\\n      // No intersections.\\n      if (clean & 1) {\\n        segment = ringSegments[0];\\n        if ((m = segment.length - 1) > 0) {\\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\\n          sink.lineStart();\\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\\n          sink.lineEnd();\\n        }\\n        return;\\n      }\\n\\n      // Rejoin connected segments.\\n      // TODO reuse ringBuffer.rejoin()?\\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\\n\\n      segments.push(ringSegments.filter(validSegment));\\n    }\\n\\n    return clip;\\n  };\\n}\\n\\nfunction validSegment(segment) {\\n  return segment.length > 1;\\n}\\n\\n// Intersections are sorted along the clip edge. For both antimeridian cutting\\n// and circle clipping, the same comparison is used.\\nfunction compareIntersection(a, b) {\\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi - epsilon : halfPi - a[1])\\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi - epsilon : halfPi - b[1]);\\n}\\n\",\"import clip from \\\"./index\\\";\\nimport {abs, atan, cos, epsilon, halfPi, pi, sin} from \\\"../math\\\";\\n\\nexport default clip(\\n  function() { return true; },\\n  clipAntimeridianLine,\\n  clipAntimeridianInterpolate,\\n  [-pi, -halfPi]\\n);\\n\\n// Takes a line and cuts into visible segments. Return values: 0 - there were\\n// intersections or the line was empty; 1 - no intersections; 2 - there were\\n// intersections, and the first and last segments should be rejoined.\\nfunction clipAntimeridianLine(stream) {\\n  var lambda0 = NaN,\\n      phi0 = NaN,\\n      sign0 = NaN,\\n      clean; // no intersections\\n\\n  return {\\n    lineStart: function() {\\n      stream.lineStart();\\n      clean = 1;\\n    },\\n    point: function(lambda1, phi1) {\\n      var sign1 = lambda1 > 0 ? pi : -pi,\\n          delta = abs(lambda1 - lambda0);\\n      if (abs(delta - pi) < epsilon) { // line crosses a pole\\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi : -halfPi);\\n        stream.point(sign0, phi0);\\n        stream.lineEnd();\\n        stream.lineStart();\\n        stream.point(sign1, phi0);\\n        stream.point(lambda1, phi0);\\n        clean = 0;\\n      } else if (sign0 !== sign1 && delta >= pi) { // line crosses antimeridian\\n        if (abs(lambda0 - sign0) < epsilon) lambda0 -= sign0 * epsilon; // handle degeneracies\\n        if (abs(lambda1 - sign1) < epsilon) lambda1 -= sign1 * epsilon;\\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\\n        stream.point(sign0, phi0);\\n        stream.lineEnd();\\n        stream.lineStart();\\n        stream.point(sign1, phi0);\\n        clean = 0;\\n      }\\n      stream.point(lambda0 = lambda1, phi0 = phi1);\\n      sign0 = sign1;\\n    },\\n    lineEnd: function() {\\n      stream.lineEnd();\\n      lambda0 = phi0 = NaN;\\n    },\\n    clean: function() {\\n      return 2 - clean; // if intersections, rejoin first and last segments\\n    }\\n  };\\n}\\n\\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\\n  var cosPhi0,\\n      cosPhi1,\\n      sinLambda0Lambda1 = sin(lambda0 - lambda1);\\n  return abs(sinLambda0Lambda1) > epsilon\\n      ? atan((sin(phi0) * (cosPhi1 = cos(phi1)) * sin(lambda1)\\n          - sin(phi1) * (cosPhi0 = cos(phi0)) * sin(lambda0))\\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\\n      : (phi0 + phi1) / 2;\\n}\\n\\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\\n  var phi;\\n  if (from == null) {\\n    phi = direction * halfPi;\\n    stream.point(-pi, phi);\\n    stream.point(0, phi);\\n    stream.point(pi, phi);\\n    stream.point(pi, 0);\\n    stream.point(pi, -phi);\\n    stream.point(0, -phi);\\n    stream.point(-pi, -phi);\\n    stream.point(-pi, 0);\\n    stream.point(-pi, phi);\\n  } else if (abs(from[0] - to[0]) > epsilon) {\\n    var lambda = from[0] < to[0] ? pi : -pi;\\n    phi = direction * lambda / 2;\\n    stream.point(-lambda, phi);\\n    stream.point(0, phi);\\n    stream.point(lambda, phi);\\n  } else {\\n    stream.point(to[0], to[1]);\\n  }\\n}\\n\",\"import {cartesian, cartesianAddInPlace, cartesianCross, cartesianDot, cartesianScale, spherical} from \\\"../cartesian\\\";\\nimport {circleStream} from \\\"../circle\\\";\\nimport {abs, cos, epsilon, pi, radians, sqrt} from \\\"../math\\\";\\nimport pointEqual from \\\"../pointEqual\\\";\\nimport clip from \\\"./index\\\";\\n\\nexport default function(radius) {\\n  var cr = cos(radius),\\n      delta = 6 * radians,\\n      smallRadius = cr > 0,\\n      notHemisphere = abs(cr) > epsilon; // TODO optimise for this common case\\n\\n  function interpolate(from, to, direction, stream) {\\n    circleStream(stream, radius, delta, direction, from, to);\\n  }\\n\\n  function visible(lambda, phi) {\\n    return cos(lambda) * cos(phi) > cr;\\n  }\\n\\n  // Takes a line and cuts into visible segments. Return values used for polygon\\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\\n  // intersections 2 - there were intersections, and the first and last segments\\n  // should be rejoined.\\n  function clipLine(stream) {\\n    var point0, // previous point\\n        c0, // code for previous point\\n        v0, // visibility of previous point\\n        v00, // visibility of first point\\n        clean; // no intersections\\n    return {\\n      lineStart: function() {\\n        v00 = v0 = false;\\n        clean = 1;\\n      },\\n      point: function(lambda, phi) {\\n        var point1 = [lambda, phi],\\n            point2,\\n            v = visible(lambda, phi),\\n            c = smallRadius\\n              ? v ? 0 : code(lambda, phi)\\n              : v ? code(lambda + (lambda < 0 ? pi : -pi), phi) : 0;\\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\\n        // Handle degeneracies.\\n        // TODO ignore if not clipping polygons.\\n        if (v !== v0) {\\n          point2 = intersect(point0, point1);\\n          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2)) {\\n            point1[0] += epsilon;\\n            point1[1] += epsilon;\\n            v = visible(point1[0], point1[1]);\\n          }\\n        }\\n        if (v !== v0) {\\n          clean = 0;\\n          if (v) {\\n            // outside going in\\n            stream.lineStart();\\n            point2 = intersect(point1, point0);\\n            stream.point(point2[0], point2[1]);\\n          } else {\\n            // inside going out\\n            point2 = intersect(point0, point1);\\n            stream.point(point2[0], point2[1]);\\n            stream.lineEnd();\\n          }\\n          point0 = point2;\\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\\n          var t;\\n          // If the codes for two points are different, or are both zero,\\n          // and there this segment intersects with the small circle.\\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\\n            clean = 0;\\n            if (smallRadius) {\\n              stream.lineStart();\\n              stream.point(t[0][0], t[0][1]);\\n              stream.point(t[1][0], t[1][1]);\\n              stream.lineEnd();\\n            } else {\\n              stream.point(t[1][0], t[1][1]);\\n              stream.lineEnd();\\n              stream.lineStart();\\n              stream.point(t[0][0], t[0][1]);\\n            }\\n          }\\n        }\\n        if (v && (!point0 || !pointEqual(point0, point1))) {\\n          stream.point(point1[0], point1[1]);\\n        }\\n        point0 = point1, v0 = v, c0 = c;\\n      },\\n      lineEnd: function() {\\n        if (v0) stream.lineEnd();\\n        point0 = null;\\n      },\\n      // Rejoin first and last segments if there were intersections and the first\\n      // and last points were visible.\\n      clean: function() {\\n        return clean | ((v00 && v0) << 1);\\n      }\\n    };\\n  }\\n\\n  // Intersects the great circle between a and b with the clip circle.\\n  function intersect(a, b, two) {\\n    var pa = cartesian(a),\\n        pb = cartesian(b);\\n\\n    // We have two planes, n1.p = d1 and n2.p = d2.\\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\\n    var n1 = [1, 0, 0], // normal\\n        n2 = cartesianCross(pa, pb),\\n        n2n2 = cartesianDot(n2, n2),\\n        n1n2 = n2[0], // cartesianDot(n1, n2),\\n        determinant = n2n2 - n1n2 * n1n2;\\n\\n    // Two polar points.\\n    if (!determinant) return !two && a;\\n\\n    var c1 =  cr * n2n2 / determinant,\\n        c2 = -cr * n1n2 / determinant,\\n        n1xn2 = cartesianCross(n1, n2),\\n        A = cartesianScale(n1, c1),\\n        B = cartesianScale(n2, c2);\\n    cartesianAddInPlace(A, B);\\n\\n    // Solve |p(t)|^2 = 1.\\n    var u = n1xn2,\\n        w = cartesianDot(A, u),\\n        uu = cartesianDot(u, u),\\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\\n\\n    if (t2 < 0) return;\\n\\n    var t = sqrt(t2),\\n        q = cartesianScale(u, (-w - t) / uu);\\n    cartesianAddInPlace(q, A);\\n    q = spherical(q);\\n\\n    if (!two) return q;\\n\\n    // Two intersection points.\\n    var lambda0 = a[0],\\n        lambda1 = b[0],\\n        phi0 = a[1],\\n        phi1 = b[1],\\n        z;\\n\\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\\n\\n    var delta = lambda1 - lambda0,\\n        polar = abs(delta - pi) < epsilon,\\n        meridian = polar || delta < epsilon;\\n\\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\\n\\n    // Check that the first point is between a and b.\\n    if (meridian\\n        ? polar\\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon ? phi0 : phi1)\\n          : phi0 <= q[1] && q[1] <= phi1\\n        : delta > pi ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\\n      var q1 = cartesianScale(u, (-w + t) / uu);\\n      cartesianAddInPlace(q1, A);\\n      return [q, spherical(q1)];\\n    }\\n  }\\n\\n  // Generates a 4-bit vector representing the location of a point relative to\\n  // the small circle's bounding box.\\n  function code(lambda, phi) {\\n    var r = smallRadius ? radius : pi - radius,\\n        code = 0;\\n    if (lambda < -r) code |= 1; // left\\n    else if (lambda > r) code |= 2; // right\\n    if (phi < -r) code |= 4; // below\\n    else if (phi > r) code |= 8; // above\\n    return code;\\n  }\\n\\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi, radius - pi]);\\n}\\n\",\"export default function(a, b, x0, y0, x1, y1) {\\n  var ax = a[0],\\n      ay = a[1],\\n      bx = b[0],\\n      by = b[1],\\n      t0 = 0,\\n      t1 = 1,\\n      dx = bx - ax,\\n      dy = by - ay,\\n      r;\\n\\n  r = x0 - ax;\\n  if (!dx && r > 0) return;\\n  r /= dx;\\n  if (dx < 0) {\\n    if (r < t0) return;\\n    if (r < t1) t1 = r;\\n  } else if (dx > 0) {\\n    if (r > t1) return;\\n    if (r > t0) t0 = r;\\n  }\\n\\n  r = x1 - ax;\\n  if (!dx && r < 0) return;\\n  r /= dx;\\n  if (dx < 0) {\\n    if (r > t1) return;\\n    if (r > t0) t0 = r;\\n  } else if (dx > 0) {\\n    if (r < t0) return;\\n    if (r < t1) t1 = r;\\n  }\\n\\n  r = y0 - ay;\\n  if (!dy && r > 0) return;\\n  r /= dy;\\n  if (dy < 0) {\\n    if (r < t0) return;\\n    if (r < t1) t1 = r;\\n  } else if (dy > 0) {\\n    if (r > t1) return;\\n    if (r > t0) t0 = r;\\n  }\\n\\n  r = y1 - ay;\\n  if (!dy && r < 0) return;\\n  r /= dy;\\n  if (dy < 0) {\\n    if (r > t1) return;\\n    if (r > t0) t0 = r;\\n  } else if (dy > 0) {\\n    if (r < t0) return;\\n    if (r < t1) t1 = r;\\n  }\\n\\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\\n  return true;\\n}\\n\",\"import {abs, epsilon} from \\\"../math\\\";\\nimport clipBuffer from \\\"./buffer\\\";\\nimport clipLine from \\\"./line\\\";\\nimport clipRejoin from \\\"./rejoin\\\";\\nimport {merge} from \\\"d3-array\\\";\\n\\nvar clipMax = 1e9, clipMin = -clipMax;\\n\\n// TODO Use d3-polygon’s polygonContains here for the ring check?\\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\\n\\nexport default function clipRectangle(x0, y0, x1, y1) {\\n\\n  function visible(x, y) {\\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\\n  }\\n\\n  function interpolate(from, to, direction, stream) {\\n    var a = 0, a1 = 0;\\n    if (from == null\\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\\n        || comparePoint(from, to) < 0 ^ direction > 0) {\\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\\n      while ((a = (a + direction + 4) % 4) !== a1);\\n    } else {\\n      stream.point(to[0], to[1]);\\n    }\\n  }\\n\\n  function corner(p, direction) {\\n    return abs(p[0] - x0) < epsilon ? direction > 0 ? 0 : 3\\n        : abs(p[0] - x1) < epsilon ? direction > 0 ? 2 : 1\\n        : abs(p[1] - y0) < epsilon ? direction > 0 ? 1 : 0\\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\\n  }\\n\\n  function compareIntersection(a, b) {\\n    return comparePoint(a.x, b.x);\\n  }\\n\\n  function comparePoint(a, b) {\\n    var ca = corner(a, 1),\\n        cb = corner(b, 1);\\n    return ca !== cb ? ca - cb\\n        : ca === 0 ? b[1] - a[1]\\n        : ca === 1 ? a[0] - b[0]\\n        : ca === 2 ? a[1] - b[1]\\n        : b[0] - a[0];\\n  }\\n\\n  return function(stream) {\\n    var activeStream = stream,\\n        bufferStream = clipBuffer(),\\n        segments,\\n        polygon,\\n        ring,\\n        x__, y__, v__, // first point\\n        x_, y_, v_, // previous point\\n        first,\\n        clean;\\n\\n    var clipStream = {\\n      point: point,\\n      lineStart: lineStart,\\n      lineEnd: lineEnd,\\n      polygonStart: polygonStart,\\n      polygonEnd: polygonEnd\\n    };\\n\\n    function point(x, y) {\\n      if (visible(x, y)) activeStream.point(x, y);\\n    }\\n\\n    function polygonInside() {\\n      var winding = 0;\\n\\n      for (var i = 0, n = polygon.length; i < n; ++i) {\\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\\n        }\\n      }\\n\\n      return winding;\\n    }\\n\\n    // Buffer geometry within a polygon and then clip it en masse.\\n    function polygonStart() {\\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\\n    }\\n\\n    function polygonEnd() {\\n      var startInside = polygonInside(),\\n          cleanInside = clean && startInside,\\n          visible = (segments = merge(segments)).length;\\n      if (cleanInside || visible) {\\n        stream.polygonStart();\\n        if (cleanInside) {\\n          stream.lineStart();\\n          interpolate(null, null, 1, stream);\\n          stream.lineEnd();\\n        }\\n        if (visible) {\\n          clipRejoin(segments, compareIntersection, startInside, interpolate, stream);\\n        }\\n        stream.polygonEnd();\\n      }\\n      activeStream = stream, segments = polygon = ring = null;\\n    }\\n\\n    function lineStart() {\\n      clipStream.point = linePoint;\\n      if (polygon) polygon.push(ring = []);\\n      first = true;\\n      v_ = false;\\n      x_ = y_ = NaN;\\n    }\\n\\n    // TODO rather than special-case polygons, simply handle them separately.\\n    // Ideally, coincident intersection points should be jittered to avoid\\n    // clipping issues.\\n    function lineEnd() {\\n      if (segments) {\\n        linePoint(x__, y__);\\n        if (v__ && v_) bufferStream.rejoin();\\n        segments.push(bufferStream.result());\\n      }\\n      clipStream.point = point;\\n      if (v_) activeStream.lineEnd();\\n    }\\n\\n    function linePoint(x, y) {\\n      var v = visible(x, y);\\n      if (polygon) ring.push([x, y]);\\n      if (first) {\\n        x__ = x, y__ = y, v__ = v;\\n        first = false;\\n        if (v) {\\n          activeStream.lineStart();\\n          activeStream.point(x, y);\\n        }\\n      } else {\\n        if (v && v_) activeStream.point(x, y);\\n        else {\\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\\n          if (clipLine(a, b, x0, y0, x1, y1)) {\\n            if (!v_) {\\n              activeStream.lineStart();\\n              activeStream.point(a[0], a[1]);\\n            }\\n            activeStream.point(b[0], b[1]);\\n            if (!v) activeStream.lineEnd();\\n            clean = false;\\n          } else if (v) {\\n            activeStream.lineStart();\\n            activeStream.point(x, y);\\n            clean = false;\\n          }\\n        }\\n      }\\n      x_ = x, y_ = y, v_ = v;\\n    }\\n\\n    return clipStream;\\n  };\\n}\\n\",\"import clipRectangle from \\\"./rectangle\\\";\\n\\nexport default function() {\\n  var x0 = 0,\\n      y0 = 0,\\n      x1 = 960,\\n      y1 = 500,\\n      cache,\\n      cacheStream,\\n      clip;\\n\\n  return clip = {\\n    stream: function(stream) {\\n      return cache && cacheStream === stream ? cache : cache = clipRectangle(x0, y0, x1, y1)(cacheStream = stream);\\n    },\\n    extent: function(_) {\\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\\n    }\\n  };\\n}\\n\",\"import adder from \\\"./adder\\\";\\nimport {abs, atan2, cos, radians, sin, sqrt} from \\\"./math\\\";\\nimport noop from \\\"./noop\\\";\\nimport stream from \\\"./stream\\\";\\n\\nvar lengthSum = adder(),\\n    lambda0,\\n    sinPhi0,\\n    cosPhi0;\\n\\nvar lengthStream = {\\n  sphere: noop,\\n  point: noop,\\n  lineStart: lengthLineStart,\\n  lineEnd: noop,\\n  polygonStart: noop,\\n  polygonEnd: noop\\n};\\n\\nfunction lengthLineStart() {\\n  lengthStream.point = lengthPointFirst;\\n  lengthStream.lineEnd = lengthLineEnd;\\n}\\n\\nfunction lengthLineEnd() {\\n  lengthStream.point = lengthStream.lineEnd = noop;\\n}\\n\\nfunction lengthPointFirst(lambda, phi) {\\n  lambda *= radians, phi *= radians;\\n  lambda0 = lambda, sinPhi0 = sin(phi), cosPhi0 = cos(phi);\\n  lengthStream.point = lengthPoint;\\n}\\n\\nfunction lengthPoint(lambda, phi) {\\n  lambda *= radians, phi *= radians;\\n  var sinPhi = sin(phi),\\n      cosPhi = cos(phi),\\n      delta = abs(lambda - lambda0),\\n      cosDelta = cos(delta),\\n      sinDelta = sin(delta),\\n      x = cosPhi * sinDelta,\\n      y = cosPhi0 * sinPhi - sinPhi0 * cosPhi * cosDelta,\\n      z = sinPhi0 * sinPhi + cosPhi0 * cosPhi * cosDelta;\\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\\n  lambda0 = lambda, sinPhi0 = sinPhi, cosPhi0 = cosPhi;\\n}\\n\\nexport default function(object) {\\n  lengthSum.reset();\\n  stream(object, lengthStream);\\n  return +lengthSum;\\n}\\n\",\"import length from \\\"./length\\\";\\n\\nvar coordinates = [null, null],\\n    object = {type: \\\"LineString\\\", coordinates: coordinates};\\n\\nexport default function(a, b) {\\n  coordinates[0] = a;\\n  coordinates[1] = b;\\n  return length(object);\\n}\\n\",\"import {default as polygonContains} from \\\"./polygonContains\\\";\\nimport {default as distance} from \\\"./distance\\\";\\nimport {epsilon, radians} from \\\"./math\\\";\\n\\nvar containsObjectType = {\\n  Feature: function(object, point) {\\n    return containsGeometry(object.geometry, point);\\n  },\\n  FeatureCollection: function(object, point) {\\n    var features = object.features, i = -1, n = features.length;\\n    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;\\n    return false;\\n  }\\n};\\n\\nvar containsGeometryType = {\\n  Sphere: function() {\\n    return true;\\n  },\\n  Point: function(object, point) {\\n    return containsPoint(object.coordinates, point);\\n  },\\n  MultiPoint: function(object, point) {\\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\\n    while (++i < n) if (containsPoint(coordinates[i], point)) return true;\\n    return false;\\n  },\\n  LineString: function(object, point) {\\n    return containsLine(object.coordinates, point);\\n  },\\n  MultiLineString: function(object, point) {\\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\\n    while (++i < n) if (containsLine(coordinates[i], point)) return true;\\n    return false;\\n  },\\n  Polygon: function(object, point) {\\n    return containsPolygon(object.coordinates, point);\\n  },\\n  MultiPolygon: function(object, point) {\\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\\n    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;\\n    return false;\\n  },\\n  GeometryCollection: function(object, point) {\\n    var geometries = object.geometries, i = -1, n = geometries.length;\\n    while (++i < n) if (containsGeometry(geometries[i], point)) return true;\\n    return false;\\n  }\\n};\\n\\nfunction containsGeometry(geometry, point) {\\n  return geometry && containsGeometryType.hasOwnProperty(geometry.type)\\n      ? containsGeometryType[geometry.type](geometry, point)\\n      : false;\\n}\\n\\nfunction containsPoint(coordinates, point) {\\n  return distance(coordinates, point) === 0;\\n}\\n\\nfunction containsLine(coordinates, point) {\\n  var ab = distance(coordinates[0], coordinates[1]),\\n      ao = distance(coordinates[0], point),\\n      ob = distance(point, coordinates[1]);\\n  return ao + ob <= ab + epsilon;\\n}\\n\\nfunction containsPolygon(coordinates, point) {\\n  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\\n}\\n\\nfunction ringRadians(ring) {\\n  return ring = ring.map(pointRadians), ring.pop(), ring;\\n}\\n\\nfunction pointRadians(point) {\\n  return [point[0] * radians, point[1] * radians];\\n}\\n\\nexport default function(object, point) {\\n  return (object && containsObjectType.hasOwnProperty(object.type)\\n      ? containsObjectType[object.type]\\n      : containsGeometry)(object, point);\\n}\\n\",\"import {range} from \\\"d3-array\\\";\\nimport {abs, ceil, epsilon} from \\\"./math\\\";\\n\\nfunction graticuleX(y0, y1, dy) {\\n  var y = range(y0, y1 - epsilon, dy).concat(y1);\\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\\n}\\n\\nfunction graticuleY(x0, x1, dx) {\\n  var x = range(x0, x1 - epsilon, dx).concat(x1);\\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\\n}\\n\\nexport default function graticule() {\\n  var x1, x0, X1, X0,\\n      y1, y0, Y1, Y0,\\n      dx = 10, dy = dx, DX = 90, DY = 360,\\n      x, y, X, Y,\\n      precision = 2.5;\\n\\n  function graticule() {\\n    return {type: \\\"MultiLineString\\\", coordinates: lines()};\\n  }\\n\\n  function lines() {\\n    return range(ceil(X0 / DX) * DX, X1, DX).map(X)\\n        .concat(range(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\\n        .concat(range(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon; }).map(x))\\n        .concat(range(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon; }).map(y));\\n  }\\n\\n  graticule.lines = function() {\\n    return lines().map(function(coordinates) { return {type: \\\"LineString\\\", coordinates: coordinates}; });\\n  };\\n\\n  graticule.outline = function() {\\n    return {\\n      type: \\\"Polygon\\\",\\n      coordinates: [\\n        X(X0).concat(\\n        Y(Y1).slice(1),\\n        X(X1).reverse().slice(1),\\n        Y(Y0).reverse().slice(1))\\n      ]\\n    };\\n  };\\n\\n  graticule.extent = function(_) {\\n    if (!arguments.length) return graticule.extentMinor();\\n    return graticule.extentMajor(_).extentMinor(_);\\n  };\\n\\n  graticule.extentMajor = function(_) {\\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\\n    X0 = +_[0][0], X1 = +_[1][0];\\n    Y0 = +_[0][1], Y1 = +_[1][1];\\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\\n    return graticule.precision(precision);\\n  };\\n\\n  graticule.extentMinor = function(_) {\\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\\n    x0 = +_[0][0], x1 = +_[1][0];\\n    y0 = +_[0][1], y1 = +_[1][1];\\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\\n    return graticule.precision(precision);\\n  };\\n\\n  graticule.step = function(_) {\\n    if (!arguments.length) return graticule.stepMinor();\\n    return graticule.stepMajor(_).stepMinor(_);\\n  };\\n\\n  graticule.stepMajor = function(_) {\\n    if (!arguments.length) return [DX, DY];\\n    DX = +_[0], DY = +_[1];\\n    return graticule;\\n  };\\n\\n  graticule.stepMinor = function(_) {\\n    if (!arguments.length) return [dx, dy];\\n    dx = +_[0], dy = +_[1];\\n    return graticule;\\n  };\\n\\n  graticule.precision = function(_) {\\n    if (!arguments.length) return precision;\\n    precision = +_;\\n    x = graticuleX(y0, y1, 90);\\n    y = graticuleY(x0, x1, precision);\\n    X = graticuleX(Y0, Y1, 90);\\n    Y = graticuleY(X0, X1, precision);\\n    return graticule;\\n  };\\n\\n  return graticule\\n      .extentMajor([[-180, -90 + epsilon], [180, 90 - epsilon]])\\n      .extentMinor([[-180, -80 - epsilon], [180, 80 + epsilon]]);\\n}\\n\\nexport function graticule10() {\\n  return graticule()();\\n}\\n\",\"import {asin, atan2, cos, degrees, haversin, radians, sin, sqrt} from \\\"./math\\\";\\n\\nexport default function(a, b) {\\n  var x0 = a[0] * radians,\\n      y0 = a[1] * radians,\\n      x1 = b[0] * radians,\\n      y1 = b[1] * radians,\\n      cy0 = cos(y0),\\n      sy0 = sin(y0),\\n      cy1 = cos(y1),\\n      sy1 = sin(y1),\\n      kx0 = cy0 * cos(x0),\\n      ky0 = cy0 * sin(x0),\\n      kx1 = cy1 * cos(x1),\\n      ky1 = cy1 * sin(x1),\\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\\n      k = sin(d);\\n\\n  var interpolate = d ? function(t) {\\n    var B = sin(t *= d) / k,\\n        A = sin(d - t) / k,\\n        x = A * kx0 + B * kx1,\\n        y = A * ky0 + B * ky1,\\n        z = A * sy0 + B * sy1;\\n    return [\\n      atan2(y, x) * degrees,\\n      atan2(z, sqrt(x * x + y * y)) * degrees\\n    ];\\n  } : function() {\\n    return [x0 * degrees, y0 * degrees];\\n  };\\n\\n  interpolate.distance = d;\\n\\n  return interpolate;\\n}\\n\",\"import adder from \\\"../adder\\\";\\nimport {abs} from \\\"../math\\\";\\nimport noop from \\\"../noop\\\";\\n\\nvar areaSum = adder(),\\n    areaRingSum = adder(),\\n    x00,\\n    y00,\\n    x0,\\n    y0;\\n\\nvar areaStream = {\\n  point: noop,\\n  lineStart: noop,\\n  lineEnd: noop,\\n  polygonStart: function() {\\n    areaStream.lineStart = areaRingStart;\\n    areaStream.lineEnd = areaRingEnd;\\n  },\\n  polygonEnd: function() {\\n    areaStream.lineStart = areaStream.lineEnd = areaStream.point = noop;\\n    areaSum.add(abs(areaRingSum));\\n    areaRingSum.reset();\\n  },\\n  result: function() {\\n    var area = areaSum / 2;\\n    areaSum.reset();\\n    return area;\\n  }\\n};\\n\\nfunction areaRingStart() {\\n  areaStream.point = areaPointFirst;\\n}\\n\\nfunction areaPointFirst(x, y) {\\n  areaStream.point = areaPoint;\\n  x00 = x0 = x, y00 = y0 = y;\\n}\\n\\nfunction areaPoint(x, y) {\\n  areaRingSum.add(y0 * x - x0 * y);\\n  x0 = x, y0 = y;\\n}\\n\\nfunction areaRingEnd() {\\n  areaPoint(x00, y00);\\n}\\n\\nexport default areaStream;\\n\",\"export default function(x) {\\n  return x;\\n}\\n\",\"import noop from \\\"../noop\\\";\\n\\nvar x0 = Infinity,\\n    y0 = x0,\\n    x1 = -x0,\\n    y1 = x1;\\n\\nvar boundsStream = {\\n  point: boundsPoint,\\n  lineStart: noop,\\n  lineEnd: noop,\\n  polygonStart: noop,\\n  polygonEnd: noop,\\n  result: function() {\\n    var bounds = [[x0, y0], [x1, y1]];\\n    x1 = y1 = -(y0 = x0 = Infinity);\\n    return bounds;\\n  }\\n};\\n\\nfunction boundsPoint(x, y) {\\n  if (x < x0) x0 = x;\\n  if (x > x1) x1 = x;\\n  if (y < y0) y0 = y;\\n  if (y > y1) y1 = y;\\n}\\n\\nexport default boundsStream;\\n\",\"import {sqrt} from \\\"../math\\\";\\n\\n// TODO Enforce positive area for exterior, negative area for interior?\\n\\nvar X0 = 0,\\n    Y0 = 0,\\n    Z0 = 0,\\n    X1 = 0,\\n    Y1 = 0,\\n    Z1 = 0,\\n    X2 = 0,\\n    Y2 = 0,\\n    Z2 = 0,\\n    x00,\\n    y00,\\n    x0,\\n    y0;\\n\\nvar centroidStream = {\\n  point: centroidPoint,\\n  lineStart: centroidLineStart,\\n  lineEnd: centroidLineEnd,\\n  polygonStart: function() {\\n    centroidStream.lineStart = centroidRingStart;\\n    centroidStream.lineEnd = centroidRingEnd;\\n  },\\n  polygonEnd: function() {\\n    centroidStream.point = centroidPoint;\\n    centroidStream.lineStart = centroidLineStart;\\n    centroidStream.lineEnd = centroidLineEnd;\\n  },\\n  result: function() {\\n    var centroid = Z2 ? [X2 / Z2, Y2 / Z2]\\n        : Z1 ? [X1 / Z1, Y1 / Z1]\\n        : Z0 ? [X0 / Z0, Y0 / Z0]\\n        : [NaN, NaN];\\n    X0 = Y0 = Z0 =\\n    X1 = Y1 = Z1 =\\n    X2 = Y2 = Z2 = 0;\\n    return centroid;\\n  }\\n};\\n\\nfunction centroidPoint(x, y) {\\n  X0 += x;\\n  Y0 += y;\\n  ++Z0;\\n}\\n\\nfunction centroidLineStart() {\\n  centroidStream.point = centroidPointFirstLine;\\n}\\n\\nfunction centroidPointFirstLine(x, y) {\\n  centroidStream.point = centroidPointLine;\\n  centroidPoint(x0 = x, y0 = y);\\n}\\n\\nfunction centroidPointLine(x, y) {\\n  var dx = x - x0, dy = y - y0, z = sqrt(dx * dx + dy * dy);\\n  X1 += z * (x0 + x) / 2;\\n  Y1 += z * (y0 + y) / 2;\\n  Z1 += z;\\n  centroidPoint(x0 = x, y0 = y);\\n}\\n\\nfunction centroidLineEnd() {\\n  centroidStream.point = centroidPoint;\\n}\\n\\nfunction centroidRingStart() {\\n  centroidStream.point = centroidPointFirstRing;\\n}\\n\\nfunction centroidRingEnd() {\\n  centroidPointRing(x00, y00);\\n}\\n\\nfunction centroidPointFirstRing(x, y) {\\n  centroidStream.point = centroidPointRing;\\n  centroidPoint(x00 = x0 = x, y00 = y0 = y);\\n}\\n\\nfunction centroidPointRing(x, y) {\\n  var dx = x - x0,\\n      dy = y - y0,\\n      z = sqrt(dx * dx + dy * dy);\\n\\n  X1 += z * (x0 + x) / 2;\\n  Y1 += z * (y0 + y) / 2;\\n  Z1 += z;\\n\\n  z = y0 * x - x0 * y;\\n  X2 += z * (x0 + x);\\n  Y2 += z * (y0 + y);\\n  Z2 += z * 3;\\n  centroidPoint(x0 = x, y0 = y);\\n}\\n\\nexport default centroidStream;\\n\",\"import {tau} from \\\"../math\\\";\\nimport noop from \\\"../noop\\\";\\n\\nexport default function PathContext(context) {\\n  this._context = context;\\n}\\n\\nPathContext.prototype = {\\n  _radius: 4.5,\\n  pointRadius: function(_) {\\n    return this._radius = _, this;\\n  },\\n  polygonStart: function() {\\n    this._line = 0;\\n  },\\n  polygonEnd: function() {\\n    this._line = NaN;\\n  },\\n  lineStart: function() {\\n    this._point = 0;\\n  },\\n  lineEnd: function() {\\n    if (this._line === 0) this._context.closePath();\\n    this._point = NaN;\\n  },\\n  point: function(x, y) {\\n    switch (this._point) {\\n      case 0: {\\n        this._context.moveTo(x, y);\\n        this._point = 1;\\n        break;\\n      }\\n      case 1: {\\n        this._context.lineTo(x, y);\\n        break;\\n      }\\n      default: {\\n        this._context.moveTo(x + this._radius, y);\\n        this._context.arc(x, y, this._radius, 0, tau);\\n        break;\\n      }\\n    }\\n  },\\n  result: noop\\n};\\n\",\"import adder from \\\"../adder\\\";\\nimport {sqrt} from \\\"../math\\\";\\nimport noop from \\\"../noop\\\";\\n\\nvar lengthSum = adder(),\\n    lengthRing,\\n    x00,\\n    y00,\\n    x0,\\n    y0;\\n\\nvar lengthStream = {\\n  point: noop,\\n  lineStart: function() {\\n    lengthStream.point = lengthPointFirst;\\n  },\\n  lineEnd: function() {\\n    if (lengthRing) lengthPoint(x00, y00);\\n    lengthStream.point = noop;\\n  },\\n  polygonStart: function() {\\n    lengthRing = true;\\n  },\\n  polygonEnd: function() {\\n    lengthRing = null;\\n  },\\n  result: function() {\\n    var length = +lengthSum;\\n    lengthSum.reset();\\n    return length;\\n  }\\n};\\n\\nfunction lengthPointFirst(x, y) {\\n  lengthStream.point = lengthPoint;\\n  x00 = x0 = x, y00 = y0 = y;\\n}\\n\\nfunction lengthPoint(x, y) {\\n  x0 -= x, y0 -= y;\\n  lengthSum.add(sqrt(x0 * x0 + y0 * y0));\\n  x0 = x, y0 = y;\\n}\\n\\nexport default lengthStream;\\n\",\"export default function PathString() {\\n  this._string = [];\\n}\\n\\nPathString.prototype = {\\n  _radius: 4.5,\\n  _circle: circle(4.5),\\n  pointRadius: function(_) {\\n    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;\\n    return this;\\n  },\\n  polygonStart: function() {\\n    this._line = 0;\\n  },\\n  polygonEnd: function() {\\n    this._line = NaN;\\n  },\\n  lineStart: function() {\\n    this._point = 0;\\n  },\\n  lineEnd: function() {\\n    if (this._line === 0) this._string.push(\\\"Z\\\");\\n    this._point = NaN;\\n  },\\n  point: function(x, y) {\\n    switch (this._point) {\\n      case 0: {\\n        this._string.push(\\\"M\\\", x, \\\",\\\", y);\\n        this._point = 1;\\n        break;\\n      }\\n      case 1: {\\n        this._string.push(\\\"L\\\", x, \\\",\\\", y);\\n        break;\\n      }\\n      default: {\\n        if (this._circle == null) this._circle = circle(this._radius);\\n        this._string.push(\\\"M\\\", x, \\\",\\\", y, this._circle);\\n        break;\\n      }\\n    }\\n  },\\n  result: function() {\\n    if (this._string.length) {\\n      var result = this._string.join(\\\"\\\");\\n      this._string = [];\\n      return result;\\n    } else {\\n      return null;\\n    }\\n  }\\n};\\n\\nfunction circle(radius) {\\n  return \\\"m0,\\\" + radius\\n      + \\\"a\\\" + radius + \\\",\\\" + radius + \\\" 0 1,1 0,\\\" + -2 * radius\\n      + \\\"a\\\" + radius + \\\",\\\" + radius + \\\" 0 1,1 0,\\\" + 2 * radius\\n      + \\\"z\\\";\\n}\\n\",\"import identity from \\\"../identity\\\";\\nimport stream from \\\"../stream\\\";\\nimport pathArea from \\\"./area\\\";\\nimport pathBounds from \\\"./bounds\\\";\\nimport pathCentroid from \\\"./centroid\\\";\\nimport PathContext from \\\"./context\\\";\\nimport pathMeasure from \\\"./measure\\\";\\nimport PathString from \\\"./string\\\";\\n\\nexport default function(projection, context) {\\n  var pointRadius = 4.5,\\n      projectionStream,\\n      contextStream;\\n\\n  function path(object) {\\n    if (object) {\\n      if (typeof pointRadius === \\\"function\\\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\\n      stream(object, projectionStream(contextStream));\\n    }\\n    return contextStream.result();\\n  }\\n\\n  path.area = function(object) {\\n    stream(object, projectionStream(pathArea));\\n    return pathArea.result();\\n  };\\n\\n  path.measure = function(object) {\\n    stream(object, projectionStream(pathMeasure));\\n    return pathMeasure.result();\\n  };\\n\\n  path.bounds = function(object) {\\n    stream(object, projectionStream(pathBounds));\\n    return pathBounds.result();\\n  };\\n\\n  path.centroid = function(object) {\\n    stream(object, projectionStream(pathCentroid));\\n    return pathCentroid.result();\\n  };\\n\\n  path.projection = function(_) {\\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity) : (projection = _).stream, path) : projection;\\n  };\\n\\n  path.context = function(_) {\\n    if (!arguments.length) return context;\\n    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\\n    if (typeof pointRadius !== \\\"function\\\") contextStream.pointRadius(pointRadius);\\n    return path;\\n  };\\n\\n  path.pointRadius = function(_) {\\n    if (!arguments.length) return pointRadius;\\n    pointRadius = typeof _ === \\\"function\\\" ? _ : (contextStream.pointRadius(+_), +_);\\n    return path;\\n  };\\n\\n  return path.projection(projection).context(context);\\n}\\n\",\"export default function(methods) {\\n  return {\\n    stream: transformer(methods)\\n  };\\n}\\n\\nexport function transformer(methods) {\\n  return function(stream) {\\n    var s = new TransformStream;\\n    for (var key in methods) s[key] = methods[key];\\n    s.stream = stream;\\n    return s;\\n  };\\n}\\n\\nfunction TransformStream() {}\\n\\nTransformStream.prototype = {\\n  constructor: TransformStream,\\n  point: function(x, y) { this.stream.point(x, y); },\\n  sphere: function() { this.stream.sphere(); },\\n  lineStart: function() { this.stream.lineStart(); },\\n  lineEnd: function() { this.stream.lineEnd(); },\\n  polygonStart: function() { this.stream.polygonStart(); },\\n  polygonEnd: function() { this.stream.polygonEnd(); }\\n};\\n\",\"import {default as geoStream} from \\\"../stream\\\";\\nimport boundsStream from \\\"../path/bounds\\\";\\n\\nfunction fit(projection, fitBounds, object) {\\n  var clip = projection.clipExtent && projection.clipExtent();\\n  projection.scale(150).translate([0, 0]);\\n  if (clip != null) projection.clipExtent(null);\\n  geoStream(object, projection.stream(boundsStream));\\n  fitBounds(boundsStream.result());\\n  if (clip != null) projection.clipExtent(clip);\\n  return projection;\\n}\\n\\nexport function fitExtent(projection, extent, object) {\\n  return fit(projection, function(b) {\\n    var w = extent[1][0] - extent[0][0],\\n        h = extent[1][1] - extent[0][1],\\n        k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\\n        x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\\n        y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\\n    projection.scale(150 * k).translate([x, y]);\\n  }, object);\\n}\\n\\nexport function fitSize(projection, size, object) {\\n  return fitExtent(projection, [[0, 0], size], object);\\n}\\n\\nexport function fitWidth(projection, width, object) {\\n  return fit(projection, function(b) {\\n    var w = +width,\\n        k = w / (b[1][0] - b[0][0]),\\n        x = (w - k * (b[1][0] + b[0][0])) / 2,\\n        y = -k * b[0][1];\\n    projection.scale(150 * k).translate([x, y]);\\n  }, object);\\n}\\n\\nexport function fitHeight(projection, height, object) {\\n  return fit(projection, function(b) {\\n    var h = +height,\\n        k = h / (b[1][1] - b[0][1]),\\n        x = -k * b[0][0],\\n        y = (h - k * (b[1][1] + b[0][1])) / 2;\\n    projection.scale(150 * k).translate([x, y]);\\n  }, object);\\n}\\n\",\"import {cartesian} from \\\"../cartesian\\\";\\nimport {abs, asin, atan2, cos, epsilon, radians, sqrt} from \\\"../math\\\";\\nimport {transformer} from \\\"../transform\\\";\\n\\nvar maxDepth = 16, // maximum depth of subdivision\\n    cosMinDistance = cos(30 * radians); // cos(minimum angular distance)\\n\\nexport default function(project, delta2) {\\n  return +delta2 ? resample(project, delta2) : resampleNone(project);\\n}\\n\\nfunction resampleNone(project) {\\n  return transformer({\\n    point: function(x, y) {\\n      x = project(x, y);\\n      this.stream.point(x[0], x[1]);\\n    }\\n  });\\n}\\n\\nfunction resample(project, delta2) {\\n\\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\\n    var dx = x1 - x0,\\n        dy = y1 - y0,\\n        d2 = dx * dx + dy * dy;\\n    if (d2 > 4 * delta2 && depth--) {\\n      var a = a0 + a1,\\n          b = b0 + b1,\\n          c = c0 + c1,\\n          m = sqrt(a * a + b * b + c * c),\\n          phi2 = asin(c /= m),\\n          lambda2 = abs(abs(c) - 1) < epsilon || abs(lambda0 - lambda1) < epsilon ? (lambda0 + lambda1) / 2 : atan2(b, a),\\n          p = project(lambda2, phi2),\\n          x2 = p[0],\\n          y2 = p[1],\\n          dx2 = x2 - x0,\\n          dy2 = y2 - y0,\\n          dz = dy * dx2 - dx * dy2;\\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\\n        stream.point(x2, y2);\\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\\n      }\\n    }\\n  }\\n  return function(stream) {\\n    var lambda00, x00, y00, a00, b00, c00, // first point\\n        lambda0, x0, y0, a0, b0, c0; // previous point\\n\\n    var resampleStream = {\\n      point: point,\\n      lineStart: lineStart,\\n      lineEnd: lineEnd,\\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\\n    };\\n\\n    function point(x, y) {\\n      x = project(x, y);\\n      stream.point(x[0], x[1]);\\n    }\\n\\n    function lineStart() {\\n      x0 = NaN;\\n      resampleStream.point = linePoint;\\n      stream.lineStart();\\n    }\\n\\n    function linePoint(lambda, phi) {\\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\\n      stream.point(x0, y0);\\n    }\\n\\n    function lineEnd() {\\n      resampleStream.point = point;\\n      stream.lineEnd();\\n    }\\n\\n    function ringStart() {\\n      lineStart();\\n      resampleStream.point = ringPoint;\\n      resampleStream.lineEnd = ringEnd;\\n    }\\n\\n    function ringPoint(lambda, phi) {\\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\\n      resampleStream.point = linePoint;\\n    }\\n\\n    function ringEnd() {\\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\\n      resampleStream.lineEnd = lineEnd;\\n      lineEnd();\\n    }\\n\\n    return resampleStream;\\n  };\\n}\\n\",\"import clipAntimeridian from \\\"../clip/antimeridian\\\";\\nimport clipCircle from \\\"../clip/circle\\\";\\nimport clipRectangle from \\\"../clip/rectangle\\\";\\nimport compose from \\\"../compose\\\";\\nimport identity from \\\"../identity\\\";\\nimport {cos, degrees, radians, sin, sqrt} from \\\"../math\\\";\\nimport {rotateRadians} from \\\"../rotation\\\";\\nimport {transformer} from \\\"../transform\\\";\\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \\\"./fit\\\";\\nimport resample from \\\"./resample\\\";\\n\\nvar transformRadians = transformer({\\n  point: function(x, y) {\\n    this.stream.point(x * radians, y * radians);\\n  }\\n});\\n\\nfunction transformRotate(rotate) {\\n  return transformer({\\n    point: function(x, y) {\\n      var r = rotate(x, y);\\n      return this.stream.point(r[0], r[1]);\\n    }\\n  });\\n}\\n\\nfunction scaleTranslate(k, dx, dy) {\\n  function transform(x, y) {\\n    return [dx + k * x, dy - k * y];\\n  }\\n  transform.invert = function(x, y) {\\n    return [(x - dx) / k, (dy - y) / k];\\n  };\\n  return transform;\\n}\\n\\nfunction scaleTranslateRotate(k, dx, dy, alpha) {\\n  var cosAlpha = cos(alpha),\\n      sinAlpha = sin(alpha),\\n      a = cosAlpha * k,\\n      b = sinAlpha * k,\\n      ai = cosAlpha / k,\\n      bi = sinAlpha / k,\\n      ci = (sinAlpha * dy - cosAlpha * dx) / k,\\n      fi = (sinAlpha * dx + cosAlpha * dy) / k;\\n  function transform(x, y) {\\n    return [a * x - b * y + dx, dy - b * x - a * y];\\n  }\\n  transform.invert = function(x, y) {\\n    return [ai * x - bi * y + ci, fi - bi * x - ai * y];\\n  };\\n  return transform;\\n}\\n\\nexport default function projection(project) {\\n  return projectionMutator(function() { return project; })();\\n}\\n\\nexport function projectionMutator(projectAt) {\\n  var project,\\n      k = 150, // scale\\n      x = 480, y = 250, // translate\\n      lambda = 0, phi = 0, // center\\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, // pre-rotate\\n      alpha = 0, // post-rotate\\n      theta = null, preclip = clipAntimeridian, // pre-clip angle\\n      x0 = null, y0, x1, y1, postclip = identity, // post-clip extent\\n      delta2 = 0.5, // precision\\n      projectResample,\\n      projectTransform,\\n      projectRotateTransform,\\n      cache,\\n      cacheStream;\\n\\n  function projection(point) {\\n    return projectRotateTransform(point[0] * radians, point[1] * radians);\\n  }\\n\\n  function invert(point) {\\n    point = projectRotateTransform.invert(point[0], point[1]);\\n    return point && [point[0] * degrees, point[1] * degrees];\\n  }\\n\\n  projection.stream = function(stream) {\\n    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));\\n  };\\n\\n  projection.preclip = function(_) {\\n    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;\\n  };\\n\\n  projection.postclip = function(_) {\\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\\n  };\\n\\n  projection.clipAngle = function(_) {\\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees;\\n  };\\n\\n  projection.clipExtent = function(_) {\\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\\n  };\\n\\n  projection.scale = function(_) {\\n    return arguments.length ? (k = +_, recenter()) : k;\\n  };\\n\\n  projection.translate = function(_) {\\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\\n  };\\n\\n  projection.center = function(_) {\\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees, phi * degrees];\\n  };\\n\\n  projection.rotate = function(_) {\\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees, deltaPhi * degrees, deltaGamma * degrees];\\n  };\\n\\n  projection.angle = function(_) {\\n    return arguments.length ? (alpha = _ % 360 * radians, recenter()) : alpha * degrees;\\n  };\\n\\n  projection.precision = function(_) {\\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\\n  };\\n\\n  projection.fitExtent = function(extent, object) {\\n    return fitExtent(projection, extent, object);\\n  };\\n\\n  projection.fitSize = function(size, object) {\\n    return fitSize(projection, size, object);\\n  };\\n\\n  projection.fitWidth = function(width, object) {\\n    return fitWidth(projection, width, object);\\n  };\\n\\n  projection.fitHeight = function(height, object) {\\n    return fitHeight(projection, height, object);\\n  };\\n\\n  function recenter() {\\n    var center = scaleTranslateRotate(k, 0, 0, alpha).apply(null, project(lambda, phi)),\\n        transform = (alpha ? scaleTranslateRotate : scaleTranslate)(k, x - center[0], y - center[1], alpha);\\n    rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma);\\n    projectTransform = compose(project, transform);\\n    projectRotateTransform = compose(rotate, projectTransform);\\n    projectResample = resample(projectTransform, delta2);\\n    return reset();\\n  }\\n\\n  function reset() {\\n    cache = cacheStream = null;\\n    return projection;\\n  }\\n\\n  return function() {\\n    project = projectAt.apply(this, arguments);\\n    projection.invert = project.invert && invert;\\n    return recenter();\\n  };\\n}\\n\",\"import {degrees, pi, radians} from \\\"../math\\\";\\nimport {projectionMutator} from \\\"./index\\\";\\n\\nexport function conicProjection(projectAt) {\\n  var phi0 = 0,\\n      phi1 = pi / 3,\\n      m = projectionMutator(projectAt),\\n      p = m(phi0, phi1);\\n\\n  p.parallels = function(_) {\\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees, phi1 * degrees];\\n  };\\n\\n  return p;\\n}\\n\",\"import {abs, asin, atan2, cos, epsilon, sign, sin, sqrt} from \\\"../math\\\";\\nimport {conicProjection} from \\\"./conic\\\";\\nimport {cylindricalEqualAreaRaw} from \\\"./cylindricalEqualArea\\\";\\n\\nexport function conicEqualAreaRaw(y0, y1) {\\n  var sy0 = sin(y0), n = (sy0 + sin(y1)) / 2;\\n\\n  // Are the parallels symmetrical around the Equator?\\n  if (abs(n) < epsilon) return cylindricalEqualAreaRaw(y0);\\n\\n  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;\\n\\n  function project(x, y) {\\n    var r = sqrt(c - 2 * n * sin(y)) / n;\\n    return [r * sin(x *= n), r0 - r * cos(x)];\\n  }\\n\\n  project.invert = function(x, y) {\\n    var r0y = r0 - y;\\n    return [atan2(x, abs(r0y)) / n * sign(r0y), asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\\n  };\\n\\n  return project;\\n}\\n\\nexport default function() {\\n  return conicProjection(conicEqualAreaRaw)\\n      .scale(155.424)\\n      .center([0, 33.6442]);\\n}\\n\",\"import {asin, cos, sin} from \\\"../math\\\";\\n\\nexport function cylindricalEqualAreaRaw(phi0) {\\n  var cosPhi0 = cos(phi0);\\n\\n  function forward(lambda, phi) {\\n    return [lambda * cosPhi0, sin(phi) / cosPhi0];\\n  }\\n\\n  forward.invert = function(x, y) {\\n    return [x / cosPhi0, asin(y * cosPhi0)];\\n  };\\n\\n  return forward;\\n}\\n\",\"import conicEqualArea from \\\"./conicEqualArea\\\";\\n\\nexport default function() {\\n  return conicEqualArea()\\n      .parallels([29.5, 45.5])\\n      .scale(1070)\\n      .translate([480, 250])\\n      .rotate([96, 0])\\n      .center([-0.6, 38.7]);\\n}\\n\",\"import {epsilon} from \\\"../math\\\";\\nimport albers from \\\"./albers\\\";\\nimport conicEqualArea from \\\"./conicEqualArea\\\";\\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \\\"./fit\\\";\\n\\n// The projections must have mutually exclusive clip regions on the sphere,\\n// as this will avoid emitting interleaving lines and polygons.\\nfunction multiplex(streams) {\\n  var n = streams.length;\\n  return {\\n    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\\n    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\\n    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\\n    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\\n    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\\n    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\\n  };\\n}\\n\\n// A composite projection for the United States, configured by default for\\n// 960×500. The projection also works quite well at 960×600 if you change the\\n// scale to 1285 and adjust the translate accordingly. The set of standard\\n// parallels for each region comes from USGS, which is published here:\\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\\nexport default function() {\\n  var cache,\\n      cacheStream,\\n      lower48 = albers(), lower48Point,\\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\\n      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\\n\\n  function albersUsa(coordinates) {\\n    var x = coordinates[0], y = coordinates[1];\\n    return point = null,\\n        (lower48Point.point(x, y), point)\\n        || (alaskaPoint.point(x, y), point)\\n        || (hawaiiPoint.point(x, y), point);\\n  }\\n\\n  albersUsa.invert = function(coordinates) {\\n    var k = lower48.scale(),\\n        t = lower48.translate(),\\n        x = (coordinates[0] - t[0]) / k,\\n        y = (coordinates[1] - t[1]) / k;\\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\\n        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\\n        : lower48).invert(coordinates);\\n  };\\n\\n  albersUsa.stream = function(stream) {\\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\\n  };\\n\\n  albersUsa.precision = function(_) {\\n    if (!arguments.length) return lower48.precision();\\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\\n    return reset();\\n  };\\n\\n  albersUsa.scale = function(_) {\\n    if (!arguments.length) return lower48.scale();\\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\\n    return albersUsa.translate(lower48.translate());\\n  };\\n\\n  albersUsa.translate = function(_) {\\n    if (!arguments.length) return lower48.translate();\\n    var k = lower48.scale(), x = +_[0], y = +_[1];\\n\\n    lower48Point = lower48\\n        .translate(_)\\n        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\\n        .stream(pointStream);\\n\\n    alaskaPoint = alaska\\n        .translate([x - 0.307 * k, y + 0.201 * k])\\n        .clipExtent([[x - 0.425 * k + epsilon, y + 0.120 * k + epsilon], [x - 0.214 * k - epsilon, y + 0.234 * k - epsilon]])\\n        .stream(pointStream);\\n\\n    hawaiiPoint = hawaii\\n        .translate([x - 0.205 * k, y + 0.212 * k])\\n        .clipExtent([[x - 0.214 * k + epsilon, y + 0.166 * k + epsilon], [x - 0.115 * k - epsilon, y + 0.234 * k - epsilon]])\\n        .stream(pointStream);\\n\\n    return reset();\\n  };\\n\\n  albersUsa.fitExtent = function(extent, object) {\\n    return fitExtent(albersUsa, extent, object);\\n  };\\n\\n  albersUsa.fitSize = function(size, object) {\\n    return fitSize(albersUsa, size, object);\\n  };\\n\\n  albersUsa.fitWidth = function(width, object) {\\n    return fitWidth(albersUsa, width, object);\\n  };\\n\\n  albersUsa.fitHeight = function(height, object) {\\n    return fitHeight(albersUsa, height, object);\\n  };\\n\\n  function reset() {\\n    cache = cacheStream = null;\\n    return albersUsa;\\n  }\\n\\n  return albersUsa.scale(1070);\\n}\\n\",\"import {asin, atan2, cos, sin, sqrt} from \\\"../math\\\";\\n\\nexport function azimuthalRaw(scale) {\\n  return function(x, y) {\\n    var cx = cos(x),\\n        cy = cos(y),\\n        k = scale(cx * cy);\\n    return [\\n      k * cy * sin(x),\\n      k * sin(y)\\n    ];\\n  }\\n}\\n\\nexport function azimuthalInvert(angle) {\\n  return function(x, y) {\\n    var z = sqrt(x * x + y * y),\\n        c = angle(z),\\n        sc = sin(c),\\n        cc = cos(c);\\n    return [\\n      atan2(x * sc, z * cc),\\n      asin(z && y * sc / z)\\n    ];\\n  }\\n}\\n\",\"import {asin, sqrt} from \\\"../math\\\";\\nimport {azimuthalRaw, azimuthalInvert} from \\\"./azimuthal\\\";\\nimport projection from \\\"./index\\\";\\n\\nexport var azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\\n  return sqrt(2 / (1 + cxcy));\\n});\\n\\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\\n  return 2 * asin(z / 2);\\n});\\n\\nexport default function() {\\n  return projection(azimuthalEqualAreaRaw)\\n      .scale(124.75)\\n      .clipAngle(180 - 1e-3);\\n}\\n\",\"import {acos, sin} from \\\"../math\\\";\\nimport {azimuthalRaw, azimuthalInvert} from \\\"./azimuthal\\\";\\nimport projection from \\\"./index\\\";\\n\\nexport var azimuthalEquidistantRaw = azimuthalRaw(function(c) {\\n  return (c = acos(c)) && c / sin(c);\\n});\\n\\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\\n  return z;\\n});\\n\\nexport default function() {\\n  return projection(azimuthalEquidistantRaw)\\n      .scale(79.4188)\\n      .clipAngle(180 - 1e-3);\\n}\\n\",\"import {atan, exp, halfPi, log, pi, tan, tau} from \\\"../math\\\";\\nimport rotation from \\\"../rotation\\\";\\nimport projection from \\\"./index\\\";\\n\\nexport function mercatorRaw(lambda, phi) {\\n  return [lambda, log(tan((halfPi + phi) / 2))];\\n}\\n\\nmercatorRaw.invert = function(x, y) {\\n  return [x, 2 * atan(exp(y)) - halfPi];\\n};\\n\\nexport default function() {\\n  return mercatorProjection(mercatorRaw)\\n      .scale(961 / tau);\\n}\\n\\nexport function mercatorProjection(project) {\\n  var m = projection(project),\\n      center = m.center,\\n      scale = m.scale,\\n      translate = m.translate,\\n      clipExtent = m.clipExtent,\\n      x0 = null, y0, x1, y1; // clip extent\\n\\n  m.scale = function(_) {\\n    return arguments.length ? (scale(_), reclip()) : scale();\\n  };\\n\\n  m.translate = function(_) {\\n    return arguments.length ? (translate(_), reclip()) : translate();\\n  };\\n\\n  m.center = function(_) {\\n    return arguments.length ? (center(_), reclip()) : center();\\n  };\\n\\n  m.clipExtent = function(_) {\\n    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\\n  };\\n\\n  function reclip() {\\n    var k = pi * scale(),\\n        t = m(rotation(m.rotate()).invert([0, 0]));\\n    return clipExtent(x0 == null\\n        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\\n        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\\n        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\\n  }\\n\\n  return reclip();\\n}\\n\",\"import {abs, atan, atan2, cos, epsilon, halfPi, log, pow, sign, sin, sqrt, tan} from \\\"../math\\\";\\nimport {conicProjection} from \\\"./conic\\\";\\nimport {mercatorRaw} from \\\"./mercator\\\";\\n\\nfunction tany(y) {\\n  return tan((halfPi + y) / 2);\\n}\\n\\nexport function conicConformalRaw(y0, y1) {\\n  var cy0 = cos(y0),\\n      n = y0 === y1 ? sin(y0) : log(cy0 / cos(y1)) / log(tany(y1) / tany(y0)),\\n      f = cy0 * pow(tany(y0), n) / n;\\n\\n  if (!n) return mercatorRaw;\\n\\n  function project(x, y) {\\n    if (f > 0) { if (y < -halfPi + epsilon) y = -halfPi + epsilon; }\\n    else { if (y > halfPi - epsilon) y = halfPi - epsilon; }\\n    var r = f / pow(tany(y), n);\\n    return [r * sin(n * x), f - r * cos(n * x)];\\n  }\\n\\n  project.invert = function(x, y) {\\n    var fy = f - y, r = sign(n) * sqrt(x * x + fy * fy);\\n    return [atan2(x, abs(fy)) / n * sign(fy), 2 * atan(pow(f / r, 1 / n)) - halfPi];\\n  };\\n\\n  return project;\\n}\\n\\nexport default function() {\\n  return conicProjection(conicConformalRaw)\\n      .scale(109.5)\\n      .parallels([30, 30]);\\n}\\n\",\"import projection from \\\"./index\\\";\\n\\nexport function equirectangularRaw(lambda, phi) {\\n  return [lambda, phi];\\n}\\n\\nequirectangularRaw.invert = equirectangularRaw;\\n\\nexport default function() {\\n  return projection(equirectangularRaw)\\n      .scale(152.63);\\n}\\n\",\"import {abs, atan2, cos, epsilon, sign, sin, sqrt} from \\\"../math\\\";\\nimport {conicProjection} from \\\"./conic\\\";\\nimport {equirectangularRaw} from \\\"./equirectangular\\\";\\n\\nexport function conicEquidistantRaw(y0, y1) {\\n  var cy0 = cos(y0),\\n      n = y0 === y1 ? sin(y0) : (cy0 - cos(y1)) / (y1 - y0),\\n      g = cy0 / n + y0;\\n\\n  if (abs(n) < epsilon) return equirectangularRaw;\\n\\n  function project(x, y) {\\n    var gy = g - y, nx = n * x;\\n    return [gy * sin(nx), g - gy * cos(nx)];\\n  }\\n\\n  project.invert = function(x, y) {\\n    var gy = g - y;\\n    return [atan2(x, abs(gy)) / n * sign(gy), g - sign(n) * sqrt(x * x + gy * gy)];\\n  };\\n\\n  return project;\\n}\\n\\nexport default function() {\\n  return conicProjection(conicEquidistantRaw)\\n      .scale(131.154)\\n      .center([0, 13.9389]);\\n}\\n\",\"import {atan, cos, sin} from \\\"../math\\\";\\nimport {azimuthalInvert} from \\\"./azimuthal\\\";\\nimport projection from \\\"./index\\\";\\n\\nexport function gnomonicRaw(x, y) {\\n  var cy = cos(y), k = cos(x) * cy;\\n  return [cy * sin(x) / k, sin(y) / k];\\n}\\n\\ngnomonicRaw.invert = azimuthalInvert(atan);\\n\\nexport default function() {\\n  return projection(gnomonicRaw)\\n      .scale(144.049)\\n      .clipAngle(60);\\n}\\n\",\"import clipRectangle from \\\"../clip/rectangle\\\";\\nimport identity from \\\"../identity\\\";\\nimport {transformer} from \\\"../transform\\\";\\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \\\"./fit\\\";\\n\\nfunction scaleTranslate(kx, ky, tx, ty) {\\n  return kx === 1 && ky === 1 && tx === 0 && ty === 0 ? identity : transformer({\\n    point: function(x, y) {\\n      this.stream.point(x * kx + tx, y * ky + ty);\\n    }\\n  });\\n}\\n\\nexport default function() {\\n  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, transform = identity, // scale, translate and reflect\\n      x0 = null, y0, x1, y1, // clip extent\\n      postclip = identity,\\n      cache,\\n      cacheStream,\\n      projection;\\n\\n  function reset() {\\n    cache = cacheStream = null;\\n    return projection;\\n  }\\n\\n  return projection = {\\n    stream: function(stream) {\\n      return cache && cacheStream === stream ? cache : cache = transform(postclip(cacheStream = stream));\\n    },\\n    postclip: function(_) {\\n      return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\\n    },\\n    clipExtent: function(_) {\\n      return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\\n    },\\n    scale: function(_) {\\n      return arguments.length ? (transform = scaleTranslate((k = +_) * sx, k * sy, tx, ty), reset()) : k;\\n    },\\n    translate: function(_) {\\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\\n    },\\n    reflectX: function(_) {\\n      return arguments.length ? (transform = scaleTranslate(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : sx < 0;\\n    },\\n    reflectY: function(_) {\\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : sy < 0;\\n    },\\n    fitExtent: function(extent, object) {\\n      return fitExtent(projection, extent, object);\\n    },\\n    fitSize: function(size, object) {\\n      return fitSize(projection, size, object);\\n    },\\n    fitWidth: function(width, object) {\\n      return fitWidth(projection, width, object);\\n    },\\n    fitHeight: function(height, object) {\\n      return fitHeight(projection, height, object);\\n    }\\n  };\\n}\\n\",\"import projection from \\\"./index\\\";\\nimport {abs, epsilon} from \\\"../math\\\";\\n\\nexport function naturalEarth1Raw(lambda, phi) {\\n  var phi2 = phi * phi, phi4 = phi2 * phi2;\\n  return [\\n    lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))),\\n    phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))\\n  ];\\n}\\n\\nnaturalEarth1Raw.invert = function(x, y) {\\n  var phi = y, i = 25, delta;\\n  do {\\n    var phi2 = phi * phi, phi4 = phi2 * phi2;\\n    phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) /\\n        (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));\\n  } while (abs(delta) > epsilon && --i > 0);\\n  return [\\n    x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))),\\n    phi\\n  ];\\n};\\n\\nexport default function() {\\n  return projection(naturalEarth1Raw)\\n      .scale(175.295);\\n}\\n\",\"import {asin, cos, epsilon, sin} from \\\"../math\\\";\\nimport {azimuthalInvert} from \\\"./azimuthal\\\";\\nimport projection from \\\"./index\\\";\\n\\nexport function orthographicRaw(x, y) {\\n  return [cos(y) * sin(x), sin(y)];\\n}\\n\\northographicRaw.invert = azimuthalInvert(asin);\\n\\nexport default function() {\\n  return projection(orthographicRaw)\\n      .scale(249.5)\\n      .clipAngle(90 + epsilon);\\n}\\n\",\"import {atan, cos, sin} from \\\"../math\\\";\\nimport {azimuthalInvert} from \\\"./azimuthal\\\";\\nimport projection from \\\"./index\\\";\\n\\nexport function stereographicRaw(x, y) {\\n  var cy = cos(y), k = 1 + cos(x) * cy;\\n  return [cy * sin(x) / k, sin(y) / k];\\n}\\n\\nstereographicRaw.invert = azimuthalInvert(function(z) {\\n  return 2 * atan(z);\\n});\\n\\nexport default function() {\\n  return projection(stereographicRaw)\\n      .scale(250)\\n      .clipAngle(142);\\n}\\n\",\"import {atan, exp, halfPi, log, tan} from \\\"../math\\\";\\nimport {mercatorProjection} from \\\"./mercator\\\";\\n\\nexport function transverseMercatorRaw(lambda, phi) {\\n  return [log(tan((halfPi + phi) / 2)), -lambda];\\n}\\n\\ntransverseMercatorRaw.invert = function(x, y) {\\n  return [-y, 2 * atan(exp(x)) - halfPi];\\n};\\n\\nexport default function() {\\n  var m = mercatorProjection(transverseMercatorRaw),\\n      center = m.center,\\n      rotate = m.rotate;\\n\\n  m.center = function(_) {\\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\\n  };\\n\\n  m.rotate = function(_) {\\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\\n  };\\n\\n  return rotate([0, 0, 90])\\n      .scale(159.155);\\n}\\n\",\"function defaultSeparation(a, b) {\\n  return a.parent === b.parent ? 1 : 2;\\n}\\n\\nfunction meanX(children) {\\n  return children.reduce(meanXReduce, 0) / children.length;\\n}\\n\\nfunction meanXReduce(x, c) {\\n  return x + c.x;\\n}\\n\\nfunction maxY(children) {\\n  return 1 + children.reduce(maxYReduce, 0);\\n}\\n\\nfunction maxYReduce(y, c) {\\n  return Math.max(y, c.y);\\n}\\n\\nfunction leafLeft(node) {\\n  var children;\\n  while (children = node.children) node = children[0];\\n  return node;\\n}\\n\\nfunction leafRight(node) {\\n  var children;\\n  while (children = node.children) node = children[children.length - 1];\\n  return node;\\n}\\n\\nexport default function() {\\n  var separation = defaultSeparation,\\n      dx = 1,\\n      dy = 1,\\n      nodeSize = false;\\n\\n  function cluster(root) {\\n    var previousNode,\\n        x = 0;\\n\\n    // First walk, computing the initial x & y values.\\n    root.eachAfter(function(node) {\\n      var children = node.children;\\n      if (children) {\\n        node.x = meanX(children);\\n        node.y = maxY(children);\\n      } else {\\n        node.x = previousNode ? x += separation(node, previousNode) : 0;\\n        node.y = 0;\\n        previousNode = node;\\n      }\\n    });\\n\\n    var left = leafLeft(root),\\n        right = leafRight(root),\\n        x0 = left.x - separation(left, right) / 2,\\n        x1 = right.x + separation(right, left) / 2;\\n\\n    // Second walk, normalizing x & y to the desired size.\\n    return root.eachAfter(nodeSize ? function(node) {\\n      node.x = (node.x - root.x) * dx;\\n      node.y = (root.y - node.y) * dy;\\n    } : function(node) {\\n      node.x = (node.x - x0) / (x1 - x0) * dx;\\n      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\\n    });\\n  }\\n\\n  cluster.separation = function(x) {\\n    return arguments.length ? (separation = x, cluster) : separation;\\n  };\\n\\n  cluster.size = function(x) {\\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\\n  };\\n\\n  cluster.nodeSize = function(x) {\\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\\n  };\\n\\n  return cluster;\\n}\\n\",\"function count(node) {\\n  var sum = 0,\\n      children = node.children,\\n      i = children && children.length;\\n  if (!i) sum = 1;\\n  else while (--i >= 0) sum += children[i].value;\\n  node.value = sum;\\n}\\n\\nexport default function() {\\n  return this.eachAfter(count);\\n}\\n\",\"import node_count from \\\"./count\\\";\\nimport node_each from \\\"./each\\\";\\nimport node_eachBefore from \\\"./eachBefore\\\";\\nimport node_eachAfter from \\\"./eachAfter\\\";\\nimport node_sum from \\\"./sum\\\";\\nimport node_sort from \\\"./sort\\\";\\nimport node_path from \\\"./path\\\";\\nimport node_ancestors from \\\"./ancestors\\\";\\nimport node_descendants from \\\"./descendants\\\";\\nimport node_leaves from \\\"./leaves\\\";\\nimport node_links from \\\"./links\\\";\\n\\nexport default function hierarchy(data, children) {\\n  var root = new Node(data),\\n      valued = +data.value && (root.value = data.value),\\n      node,\\n      nodes = [root],\\n      child,\\n      childs,\\n      i,\\n      n;\\n\\n  if (children == null) children = defaultChildren;\\n\\n  while (node = nodes.pop()) {\\n    if (valued) node.value = +node.data.value;\\n    if ((childs = children(node.data)) && (n = childs.length)) {\\n      node.children = new Array(n);\\n      for (i = n - 1; i >= 0; --i) {\\n        nodes.push(child = node.children[i] = new Node(childs[i]));\\n        child.parent = node;\\n        child.depth = node.depth + 1;\\n      }\\n    }\\n  }\\n\\n  return root.eachBefore(computeHeight);\\n}\\n\\nfunction node_copy() {\\n  return hierarchy(this).eachBefore(copyData);\\n}\\n\\nfunction defaultChildren(d) {\\n  return d.children;\\n}\\n\\nfunction copyData(node) {\\n  node.data = node.data.data;\\n}\\n\\nexport function computeHeight(node) {\\n  var height = 0;\\n  do node.height = height;\\n  while ((node = node.parent) && (node.height < ++height));\\n}\\n\\nexport function Node(data) {\\n  this.data = data;\\n  this.depth =\\n  this.height = 0;\\n  this.parent = null;\\n}\\n\\nNode.prototype = hierarchy.prototype = {\\n  constructor: Node,\\n  count: node_count,\\n  each: node_each,\\n  eachAfter: node_eachAfter,\\n  eachBefore: node_eachBefore,\\n  sum: node_sum,\\n  sort: node_sort,\\n  path: node_path,\\n  ancestors: node_ancestors,\\n  descendants: node_descendants,\\n  leaves: node_leaves,\\n  links: node_links,\\n  copy: node_copy\\n};\\n\",\"export default function(callback) {\\n  var node = this, current, next = [node], children, i, n;\\n  do {\\n    current = next.reverse(), next = [];\\n    while (node = current.pop()) {\\n      callback(node), children = node.children;\\n      if (children) for (i = 0, n = children.length; i < n; ++i) {\\n        next.push(children[i]);\\n      }\\n    }\\n  } while (next.length);\\n  return this;\\n}\\n\",\"export default function(callback) {\\n  var node = this, nodes = [node], next = [], children, i, n;\\n  while (node = nodes.pop()) {\\n    next.push(node), children = node.children;\\n    if (children) for (i = 0, n = children.length; i < n; ++i) {\\n      nodes.push(children[i]);\\n    }\\n  }\\n  while (node = next.pop()) {\\n    callback(node);\\n  }\\n  return this;\\n}\\n\",\"export default function(callback) {\\n  var node = this, nodes = [node], children, i;\\n  while (node = nodes.pop()) {\\n    callback(node), children = node.children;\\n    if (children) for (i = children.length - 1; i >= 0; --i) {\\n      nodes.push(children[i]);\\n    }\\n  }\\n  return this;\\n}\\n\",\"export default function(value) {\\n  return this.eachAfter(function(node) {\\n    var sum = +value(node.data) || 0,\\n        children = node.children,\\n        i = children && children.length;\\n    while (--i >= 0) sum += children[i].value;\\n    node.value = sum;\\n  });\\n}\\n\",\"export default function(compare) {\\n  return this.eachBefore(function(node) {\\n    if (node.children) {\\n      node.children.sort(compare);\\n    }\\n  });\\n}\\n\",\"export default function(end) {\\n  var start = this,\\n      ancestor = leastCommonAncestor(start, end),\\n      nodes = [start];\\n  while (start !== ancestor) {\\n    start = start.parent;\\n    nodes.push(start);\\n  }\\n  var k = nodes.length;\\n  while (end !== ancestor) {\\n    nodes.splice(k, 0, end);\\n    end = end.parent;\\n  }\\n  return nodes;\\n}\\n\\nfunction leastCommonAncestor(a, b) {\\n  if (a === b) return a;\\n  var aNodes = a.ancestors(),\\n      bNodes = b.ancestors(),\\n      c = null;\\n  a = aNodes.pop();\\n  b = bNodes.pop();\\n  while (a === b) {\\n    c = a;\\n    a = aNodes.pop();\\n    b = bNodes.pop();\\n  }\\n  return c;\\n}\\n\",\"export default function() {\\n  var node = this, nodes = [node];\\n  while (node = node.parent) {\\n    nodes.push(node);\\n  }\\n  return nodes;\\n}\\n\",\"export default function() {\\n  var nodes = [];\\n  this.each(function(node) {\\n    nodes.push(node);\\n  });\\n  return nodes;\\n}\\n\",\"export default function() {\\n  var leaves = [];\\n  this.eachBefore(function(node) {\\n    if (!node.children) {\\n      leaves.push(node);\\n    }\\n  });\\n  return leaves;\\n}\\n\",\"export default function() {\\n  var root = this, links = [];\\n  root.each(function(node) {\\n    if (node !== root) { // Don’t include the root’s parent, if any.\\n      links.push({source: node.parent, target: node});\\n    }\\n  });\\n  return links;\\n}\\n\",\"export var slice = Array.prototype.slice;\\n\\nexport function shuffle(array) {\\n  var m = array.length,\\n      t,\\n      i;\\n\\n  while (m) {\\n    i = Math.random() * m-- | 0;\\n    t = array[m];\\n    array[m] = array[i];\\n    array[i] = t;\\n  }\\n\\n  return array;\\n}\\n\",\"import {shuffle, slice} from \\\"../array\\\";\\n\\nexport default function(circles) {\\n  var i = 0, n = (circles = shuffle(slice.call(circles))).length, B = [], p, e;\\n\\n  while (i < n) {\\n    p = circles[i];\\n    if (e && enclosesWeak(e, p)) ++i;\\n    else e = encloseBasis(B = extendBasis(B, p)), i = 0;\\n  }\\n\\n  return e;\\n}\\n\\nfunction extendBasis(B, p) {\\n  var i, j;\\n\\n  if (enclosesWeakAll(p, B)) return [p];\\n\\n  // If we get here then B must have at least one element.\\n  for (i = 0; i < B.length; ++i) {\\n    if (enclosesNot(p, B[i])\\n        && enclosesWeakAll(encloseBasis2(B[i], p), B)) {\\n      return [B[i], p];\\n    }\\n  }\\n\\n  // If we get here then B must have at least two elements.\\n  for (i = 0; i < B.length - 1; ++i) {\\n    for (j = i + 1; j < B.length; ++j) {\\n      if (enclosesNot(encloseBasis2(B[i], B[j]), p)\\n          && enclosesNot(encloseBasis2(B[i], p), B[j])\\n          && enclosesNot(encloseBasis2(B[j], p), B[i])\\n          && enclosesWeakAll(encloseBasis3(B[i], B[j], p), B)) {\\n        return [B[i], B[j], p];\\n      }\\n    }\\n  }\\n\\n  // If we get here then something is very wrong.\\n  throw new Error;\\n}\\n\\nfunction enclosesNot(a, b) {\\n  var dr = a.r - b.r, dx = b.x - a.x, dy = b.y - a.y;\\n  return dr < 0 || dr * dr < dx * dx + dy * dy;\\n}\\n\\nfunction enclosesWeak(a, b) {\\n  var dr = a.r - b.r + 1e-6, dx = b.x - a.x, dy = b.y - a.y;\\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\\n}\\n\\nfunction enclosesWeakAll(a, B) {\\n  for (var i = 0; i < B.length; ++i) {\\n    if (!enclosesWeak(a, B[i])) {\\n      return false;\\n    }\\n  }\\n  return true;\\n}\\n\\nfunction encloseBasis(B) {\\n  switch (B.length) {\\n    case 1: return encloseBasis1(B[0]);\\n    case 2: return encloseBasis2(B[0], B[1]);\\n    case 3: return encloseBasis3(B[0], B[1], B[2]);\\n  }\\n}\\n\\nfunction encloseBasis1(a) {\\n  return {\\n    x: a.x,\\n    y: a.y,\\n    r: a.r\\n  };\\n}\\n\\nfunction encloseBasis2(a, b) {\\n  var x1 = a.x, y1 = a.y, r1 = a.r,\\n      x2 = b.x, y2 = b.y, r2 = b.r,\\n      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\\n      l = Math.sqrt(x21 * x21 + y21 * y21);\\n  return {\\n    x: (x1 + x2 + x21 / l * r21) / 2,\\n    y: (y1 + y2 + y21 / l * r21) / 2,\\n    r: (l + r1 + r2) / 2\\n  };\\n}\\n\\nfunction encloseBasis3(a, b, c) {\\n  var x1 = a.x, y1 = a.y, r1 = a.r,\\n      x2 = b.x, y2 = b.y, r2 = b.r,\\n      x3 = c.x, y3 = c.y, r3 = c.r,\\n      a2 = x1 - x2,\\n      a3 = x1 - x3,\\n      b2 = y1 - y2,\\n      b3 = y1 - y3,\\n      c2 = r2 - r1,\\n      c3 = r3 - r1,\\n      d1 = x1 * x1 + y1 * y1 - r1 * r1,\\n      d2 = d1 - x2 * x2 - y2 * y2 + r2 * r2,\\n      d3 = d1 - x3 * x3 - y3 * y3 + r3 * r3,\\n      ab = a3 * b2 - a2 * b3,\\n      xa = (b2 * d3 - b3 * d2) / (ab * 2) - x1,\\n      xb = (b3 * c2 - b2 * c3) / ab,\\n      ya = (a3 * d2 - a2 * d3) / (ab * 2) - y1,\\n      yb = (a2 * c3 - a3 * c2) / ab,\\n      A = xb * xb + yb * yb - 1,\\n      B = 2 * (r1 + xa * xb + ya * yb),\\n      C = xa * xa + ya * ya - r1 * r1,\\n      r = -(A ? (B + Math.sqrt(B * B - 4 * A * C)) / (2 * A) : C / B);\\n  return {\\n    x: x1 + xa + xb * r,\\n    y: y1 + ya + yb * r,\\n    r: r\\n  };\\n}\\n\",\"import enclose from \\\"./enclose\\\";\\n\\nfunction place(a, b, c) {\\n  var ax = a.x,\\n      ay = a.y,\\n      da = b.r + c.r,\\n      db = a.r + c.r,\\n      dx = b.x - ax,\\n      dy = b.y - ay,\\n      dc = dx * dx + dy * dy;\\n  if (dc) {\\n    var x = 0.5 + ((db *= db) - (da *= da)) / (2 * dc),\\n        y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\\n    c.x = ax + x * dx + y * dy;\\n    c.y = ay + x * dy - y * dx;\\n  } else {\\n    c.x = ax + db;\\n    c.y = ay;\\n  }\\n}\\n\\nfunction intersects(a, b) {\\n  var dx = b.x - a.x,\\n      dy = b.y - a.y,\\n      dr = a.r + b.r;\\n  return dr * dr - 1e-6 > dx * dx + dy * dy;\\n}\\n\\nfunction score(node) {\\n  var a = node._,\\n      b = node.next._,\\n      ab = a.r + b.r,\\n      dx = (a.x * b.r + b.x * a.r) / ab,\\n      dy = (a.y * b.r + b.y * a.r) / ab;\\n  return dx * dx + dy * dy;\\n}\\n\\nfunction Node(circle) {\\n  this._ = circle;\\n  this.next = null;\\n  this.previous = null;\\n}\\n\\nexport function packEnclose(circles) {\\n  if (!(n = circles.length)) return 0;\\n\\n  var a, b, c, n, aa, ca, i, j, k, sj, sk;\\n\\n  // Place the first circle.\\n  a = circles[0], a.x = 0, a.y = 0;\\n  if (!(n > 1)) return a.r;\\n\\n  // Place the second circle.\\n  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\\n  if (!(n > 2)) return a.r + b.r;\\n\\n  // Place the third circle.\\n  place(b, a, c = circles[2]);\\n\\n  // Initialize the front-chain using the first three circles a, b and c.\\n  a = new Node(a), b = new Node(b), c = new Node(c);\\n  a.next = c.previous = b;\\n  b.next = a.previous = c;\\n  c.next = b.previous = a;\\n\\n  // Attempt to place each remaining circle…\\n  pack: for (i = 3; i < n; ++i) {\\n    place(a._, b._, c = circles[i]), c = new Node(c);\\n\\n    // Find the closest intersecting circle on the front-chain, if any.\\n    // “Closeness” is determined by linear distance along the front-chain.\\n    // “Ahead” or “behind” is likewise determined by linear distance.\\n    j = b.next, k = a.previous, sj = b._.r, sk = a._.r;\\n    do {\\n      if (sj <= sk) {\\n        if (intersects(j._, c._)) {\\n          b = j, a.next = b, b.previous = a, --i;\\n          continue pack;\\n        }\\n        sj += j._.r, j = j.next;\\n      } else {\\n        if (intersects(k._, c._)) {\\n          a = k, a.next = b, b.previous = a, --i;\\n          continue pack;\\n        }\\n        sk += k._.r, k = k.previous;\\n      }\\n    } while (j !== k.next);\\n\\n    // Success! Insert the new circle c between a and b.\\n    c.previous = a, c.next = b, a.next = b.previous = b = c;\\n\\n    // Compute the new closest circle pair to the centroid.\\n    aa = score(a);\\n    while ((c = c.next) !== b) {\\n      if ((ca = score(c)) < aa) {\\n        a = c, aa = ca;\\n      }\\n    }\\n    b = a.next;\\n  }\\n\\n  // Compute the enclosing circle of the front chain.\\n  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\\n\\n  // Translate the circles to put the enclosing circle around the origin.\\n  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\\n\\n  return c.r;\\n}\\n\\nexport default function(circles) {\\n  packEnclose(circles);\\n  return circles;\\n}\\n\",\"export function optional(f) {\\n  return f == null ? null : required(f);\\n}\\n\\nexport function required(f) {\\n  if (typeof f !== \\\"function\\\") throw new Error;\\n  return f;\\n}\\n\",\"export function constantZero() {\\n  return 0;\\n}\\n\\nexport default function(x) {\\n  return function() {\\n    return x;\\n  };\\n}\\n\",\"import {packEnclose} from \\\"./siblings\\\";\\nimport {optional} from \\\"../accessors\\\";\\nimport constant, {constantZero} from \\\"../constant\\\";\\n\\nfunction defaultRadius(d) {\\n  return Math.sqrt(d.value);\\n}\\n\\nexport default function() {\\n  var radius = null,\\n      dx = 1,\\n      dy = 1,\\n      padding = constantZero;\\n\\n  function pack(root) {\\n    root.x = dx / 2, root.y = dy / 2;\\n    if (radius) {\\n      root.eachBefore(radiusLeaf(radius))\\n          .eachAfter(packChildren(padding, 0.5))\\n          .eachBefore(translateChild(1));\\n    } else {\\n      root.eachBefore(radiusLeaf(defaultRadius))\\n          .eachAfter(packChildren(constantZero, 1))\\n          .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\\n          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\\n    }\\n    return root;\\n  }\\n\\n  pack.radius = function(x) {\\n    return arguments.length ? (radius = optional(x), pack) : radius;\\n  };\\n\\n  pack.size = function(x) {\\n    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\\n  };\\n\\n  pack.padding = function(x) {\\n    return arguments.length ? (padding = typeof x === \\\"function\\\" ? x : constant(+x), pack) : padding;\\n  };\\n\\n  return pack;\\n}\\n\\nfunction radiusLeaf(radius) {\\n  return function(node) {\\n    if (!node.children) {\\n      node.r = Math.max(0, +radius(node) || 0);\\n    }\\n  };\\n}\\n\\nfunction packChildren(padding, k) {\\n  return function(node) {\\n    if (children = node.children) {\\n      var children,\\n          i,\\n          n = children.length,\\n          r = padding(node) * k || 0,\\n          e;\\n\\n      if (r) for (i = 0; i < n; ++i) children[i].r += r;\\n      e = packEnclose(children);\\n      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\\n      node.r = e + r;\\n    }\\n  };\\n}\\n\\nfunction translateChild(k) {\\n  return function(node) {\\n    var parent = node.parent;\\n    node.r *= k;\\n    if (parent) {\\n      node.x = parent.x + k * node.x;\\n      node.y = parent.y + k * node.y;\\n    }\\n  };\\n}\\n\",\"export default function(node) {\\n  node.x0 = Math.round(node.x0);\\n  node.y0 = Math.round(node.y0);\\n  node.x1 = Math.round(node.x1);\\n  node.y1 = Math.round(node.y1);\\n}\\n\",\"export default function(parent, x0, y0, x1, y1) {\\n  var nodes = parent.children,\\n      node,\\n      i = -1,\\n      n = nodes.length,\\n      k = parent.value && (x1 - x0) / parent.value;\\n\\n  while (++i < n) {\\n    node = nodes[i], node.y0 = y0, node.y1 = y1;\\n    node.x0 = x0, node.x1 = x0 += node.value * k;\\n  }\\n}\\n\",\"import roundNode from \\\"./treemap/round\\\";\\nimport treemapDice from \\\"./treemap/dice\\\";\\n\\nexport default function() {\\n  var dx = 1,\\n      dy = 1,\\n      padding = 0,\\n      round = false;\\n\\n  function partition(root) {\\n    var n = root.height + 1;\\n    root.x0 =\\n    root.y0 = padding;\\n    root.x1 = dx;\\n    root.y1 = dy / n;\\n    root.eachBefore(positionNode(dy, n));\\n    if (round) root.eachBefore(roundNode);\\n    return root;\\n  }\\n\\n  function positionNode(dy, n) {\\n    return function(node) {\\n      if (node.children) {\\n        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\\n      }\\n      var x0 = node.x0,\\n          y0 = node.y0,\\n          x1 = node.x1 - padding,\\n          y1 = node.y1 - padding;\\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\\n      node.x0 = x0;\\n      node.y0 = y0;\\n      node.x1 = x1;\\n      node.y1 = y1;\\n    };\\n  }\\n\\n  partition.round = function(x) {\\n    return arguments.length ? (round = !!x, partition) : round;\\n  };\\n\\n  partition.size = function(x) {\\n    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\\n  };\\n\\n  partition.padding = function(x) {\\n    return arguments.length ? (padding = +x, partition) : padding;\\n  };\\n\\n  return partition;\\n}\\n\",\"import {required} from \\\"./accessors\\\";\\nimport {Node, computeHeight} from \\\"./hierarchy/index\\\";\\n\\nvar keyPrefix = \\\"$\\\", // Protect against keys like “__proto__”.\\n    preroot = {depth: -1},\\n    ambiguous = {};\\n\\nfunction defaultId(d) {\\n  return d.id;\\n}\\n\\nfunction defaultParentId(d) {\\n  return d.parentId;\\n}\\n\\nexport default function() {\\n  var id = defaultId,\\n      parentId = defaultParentId;\\n\\n  function stratify(data) {\\n    var d,\\n        i,\\n        n = data.length,\\n        root,\\n        parent,\\n        node,\\n        nodes = new Array(n),\\n        nodeId,\\n        nodeKey,\\n        nodeByKey = {};\\n\\n    for (i = 0; i < n; ++i) {\\n      d = data[i], node = nodes[i] = new Node(d);\\n      if ((nodeId = id(d, i, data)) != null && (nodeId += \\\"\\\")) {\\n        nodeKey = keyPrefix + (node.id = nodeId);\\n        nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;\\n      }\\n    }\\n\\n    for (i = 0; i < n; ++i) {\\n      node = nodes[i], nodeId = parentId(data[i], i, data);\\n      if (nodeId == null || !(nodeId += \\\"\\\")) {\\n        if (root) throw new Error(\\\"multiple roots\\\");\\n        root = node;\\n      } else {\\n        parent = nodeByKey[keyPrefix + nodeId];\\n        if (!parent) throw new Error(\\\"missing: \\\" + nodeId);\\n        if (parent === ambiguous) throw new Error(\\\"ambiguous: \\\" + nodeId);\\n        if (parent.children) parent.children.push(node);\\n        else parent.children = [node];\\n        node.parent = parent;\\n      }\\n    }\\n\\n    if (!root) throw new Error(\\\"no root\\\");\\n    root.parent = preroot;\\n    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\\n    root.parent = null;\\n    if (n > 0) throw new Error(\\\"cycle\\\");\\n\\n    return root;\\n  }\\n\\n  stratify.id = function(x) {\\n    return arguments.length ? (id = required(x), stratify) : id;\\n  };\\n\\n  stratify.parentId = function(x) {\\n    return arguments.length ? (parentId = required(x), stratify) : parentId;\\n  };\\n\\n  return stratify;\\n}\\n\",\"import {Node} from \\\"./hierarchy/index\\\";\\n\\nfunction defaultSeparation(a, b) {\\n  return a.parent === b.parent ? 1 : 2;\\n}\\n\\n// function radialSeparation(a, b) {\\n//   return (a.parent === b.parent ? 1 : 2) / a.depth;\\n// }\\n\\n// This function is used to traverse the left contour of a subtree (or\\n// subforest). It returns the successor of v on this contour. This successor is\\n// either given by the leftmost child of v or by the thread of v. The function\\n// returns null if and only if v is on the highest level of its subtree.\\nfunction nextLeft(v) {\\n  var children = v.children;\\n  return children ? children[0] : v.t;\\n}\\n\\n// This function works analogously to nextLeft.\\nfunction nextRight(v) {\\n  var children = v.children;\\n  return children ? children[children.length - 1] : v.t;\\n}\\n\\n// Shifts the current subtree rooted at w+. This is done by increasing\\n// prelim(w+) and mod(w+) by shift.\\nfunction moveSubtree(wm, wp, shift) {\\n  var change = shift / (wp.i - wm.i);\\n  wp.c -= change;\\n  wp.s += shift;\\n  wm.c += change;\\n  wp.z += shift;\\n  wp.m += shift;\\n}\\n\\n// All other shifts, applied to the smaller subtrees between w- and w+, are\\n// performed by this function. To prepare the shifts, we have to adjust\\n// change(w+), shift(w+), and change(w-).\\nfunction executeShifts(v) {\\n  var shift = 0,\\n      change = 0,\\n      children = v.children,\\n      i = children.length,\\n      w;\\n  while (--i >= 0) {\\n    w = children[i];\\n    w.z += shift;\\n    w.m += shift;\\n    shift += w.s + (change += w.c);\\n  }\\n}\\n\\n// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\\n// returns the specified (default) ancestor.\\nfunction nextAncestor(vim, v, ancestor) {\\n  return vim.a.parent === v.parent ? vim.a : ancestor;\\n}\\n\\nfunction TreeNode(node, i) {\\n  this._ = node;\\n  this.parent = null;\\n  this.children = null;\\n  this.A = null; // default ancestor\\n  this.a = this; // ancestor\\n  this.z = 0; // prelim\\n  this.m = 0; // mod\\n  this.c = 0; // change\\n  this.s = 0; // shift\\n  this.t = null; // thread\\n  this.i = i; // number\\n}\\n\\nTreeNode.prototype = Object.create(Node.prototype);\\n\\nfunction treeRoot(root) {\\n  var tree = new TreeNode(root, 0),\\n      node,\\n      nodes = [tree],\\n      child,\\n      children,\\n      i,\\n      n;\\n\\n  while (node = nodes.pop()) {\\n    if (children = node._.children) {\\n      node.children = new Array(n = children.length);\\n      for (i = n - 1; i >= 0; --i) {\\n        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\\n        child.parent = node;\\n      }\\n    }\\n  }\\n\\n  (tree.parent = new TreeNode(null, 0)).children = [tree];\\n  return tree;\\n}\\n\\n// Node-link tree diagram using the Reingold-Tilford \\\"tidy\\\" algorithm\\nexport default function() {\\n  var separation = defaultSeparation,\\n      dx = 1,\\n      dy = 1,\\n      nodeSize = null;\\n\\n  function tree(root) {\\n    var t = treeRoot(root);\\n\\n    // Compute the layout using Buchheim et al.’s algorithm.\\n    t.eachAfter(firstWalk), t.parent.m = -t.z;\\n    t.eachBefore(secondWalk);\\n\\n    // If a fixed node size is specified, scale x and y.\\n    if (nodeSize) root.eachBefore(sizeNode);\\n\\n    // If a fixed tree size is specified, scale x and y based on the extent.\\n    // Compute the left-most, right-most, and depth-most nodes for extents.\\n    else {\\n      var left = root,\\n          right = root,\\n          bottom = root;\\n      root.eachBefore(function(node) {\\n        if (node.x < left.x) left = node;\\n        if (node.x > right.x) right = node;\\n        if (node.depth > bottom.depth) bottom = node;\\n      });\\n      var s = left === right ? 1 : separation(left, right) / 2,\\n          tx = s - left.x,\\n          kx = dx / (right.x + s + tx),\\n          ky = dy / (bottom.depth || 1);\\n      root.eachBefore(function(node) {\\n        node.x = (node.x + tx) * kx;\\n        node.y = node.depth * ky;\\n      });\\n    }\\n\\n    return root;\\n  }\\n\\n  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\\n  // applied recursively to the children of v, as well as the function\\n  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\\n  // node v is placed to the midpoint of its outermost children.\\n  function firstWalk(v) {\\n    var children = v.children,\\n        siblings = v.parent.children,\\n        w = v.i ? siblings[v.i - 1] : null;\\n    if (children) {\\n      executeShifts(v);\\n      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\\n      if (w) {\\n        v.z = w.z + separation(v._, w._);\\n        v.m = v.z - midpoint;\\n      } else {\\n        v.z = midpoint;\\n      }\\n    } else if (w) {\\n      v.z = w.z + separation(v._, w._);\\n    }\\n    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\\n  }\\n\\n  // Computes all real x-coordinates by summing up the modifiers recursively.\\n  function secondWalk(v) {\\n    v._.x = v.z + v.parent.m;\\n    v.m += v.parent.m;\\n  }\\n\\n  // The core of the algorithm. Here, a new subtree is combined with the\\n  // previous subtrees. Threads are used to traverse the inside and outside\\n  // contours of the left and right subtree up to the highest common level. The\\n  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\\n  // superscript o means outside and i means inside, the subscript - means left\\n  // subtree and + means right subtree. For summing up the modifiers along the\\n  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\\n  // nodes of the inside contours conflict, we compute the left one of the\\n  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\\n  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\\n  // Finally, we add a new thread (if necessary).\\n  function apportion(v, w, ancestor) {\\n    if (w) {\\n      var vip = v,\\n          vop = v,\\n          vim = w,\\n          vom = vip.parent.children[0],\\n          sip = vip.m,\\n          sop = vop.m,\\n          sim = vim.m,\\n          som = vom.m,\\n          shift;\\n      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\\n        vom = nextLeft(vom);\\n        vop = nextRight(vop);\\n        vop.a = v;\\n        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\\n        if (shift > 0) {\\n          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\\n          sip += shift;\\n          sop += shift;\\n        }\\n        sim += vim.m;\\n        sip += vip.m;\\n        som += vom.m;\\n        sop += vop.m;\\n      }\\n      if (vim && !nextRight(vop)) {\\n        vop.t = vim;\\n        vop.m += sim - sop;\\n      }\\n      if (vip && !nextLeft(vom)) {\\n        vom.t = vip;\\n        vom.m += sip - som;\\n        ancestor = v;\\n      }\\n    }\\n    return ancestor;\\n  }\\n\\n  function sizeNode(node) {\\n    node.x *= dx;\\n    node.y = node.depth * dy;\\n  }\\n\\n  tree.separation = function(x) {\\n    return arguments.length ? (separation = x, tree) : separation;\\n  };\\n\\n  tree.size = function(x) {\\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\\n  };\\n\\n  tree.nodeSize = function(x) {\\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\\n  };\\n\\n  return tree;\\n}\\n\",\"export default function(parent, x0, y0, x1, y1) {\\n  var nodes = parent.children,\\n      node,\\n      i = -1,\\n      n = nodes.length,\\n      k = parent.value && (y1 - y0) / parent.value;\\n\\n  while (++i < n) {\\n    node = nodes[i], node.x0 = x0, node.x1 = x1;\\n    node.y0 = y0, node.y1 = y0 += node.value * k;\\n  }\\n}\\n\",\"import treemapDice from \\\"./dice\\\";\\nimport treemapSlice from \\\"./slice\\\";\\n\\nexport var phi = (1 + Math.sqrt(5)) / 2;\\n\\nexport function squarifyRatio(ratio, parent, x0, y0, x1, y1) {\\n  var rows = [],\\n      nodes = parent.children,\\n      row,\\n      nodeValue,\\n      i0 = 0,\\n      i1 = 0,\\n      n = nodes.length,\\n      dx, dy,\\n      value = parent.value,\\n      sumValue,\\n      minValue,\\n      maxValue,\\n      newRatio,\\n      minRatio,\\n      alpha,\\n      beta;\\n\\n  while (i0 < n) {\\n    dx = x1 - x0, dy = y1 - y0;\\n\\n    // Find the next non-empty node.\\n    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\\n    minValue = maxValue = sumValue;\\n    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\\n    beta = sumValue * sumValue * alpha;\\n    minRatio = Math.max(maxValue / beta, beta / minValue);\\n\\n    // Keep adding nodes while the aspect ratio maintains or improves.\\n    for (; i1 < n; ++i1) {\\n      sumValue += nodeValue = nodes[i1].value;\\n      if (nodeValue < minValue) minValue = nodeValue;\\n      if (nodeValue > maxValue) maxValue = nodeValue;\\n      beta = sumValue * sumValue * alpha;\\n      newRatio = Math.max(maxValue / beta, beta / minValue);\\n      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\\n      minRatio = newRatio;\\n    }\\n\\n    // Position and record the row orientation.\\n    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\\n    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\\n    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\\n    value -= sumValue, i0 = i1;\\n  }\\n\\n  return rows;\\n}\\n\\nexport default (function custom(ratio) {\\n\\n  function squarify(parent, x0, y0, x1, y1) {\\n    squarifyRatio(ratio, parent, x0, y0, x1, y1);\\n  }\\n\\n  squarify.ratio = function(x) {\\n    return custom((x = +x) > 1 ? x : 1);\\n  };\\n\\n  return squarify;\\n})(phi);\\n\",\"import roundNode from \\\"./round\\\";\\nimport squarify from \\\"./squarify\\\";\\nimport {required} from \\\"../accessors\\\";\\nimport constant, {constantZero} from \\\"../constant\\\";\\n\\nexport default function() {\\n  var tile = squarify,\\n      round = false,\\n      dx = 1,\\n      dy = 1,\\n      paddingStack = [0],\\n      paddingInner = constantZero,\\n      paddingTop = constantZero,\\n      paddingRight = constantZero,\\n      paddingBottom = constantZero,\\n      paddingLeft = constantZero;\\n\\n  function treemap(root) {\\n    root.x0 =\\n    root.y0 = 0;\\n    root.x1 = dx;\\n    root.y1 = dy;\\n    root.eachBefore(positionNode);\\n    paddingStack = [0];\\n    if (round) root.eachBefore(roundNode);\\n    return root;\\n  }\\n\\n  function positionNode(node) {\\n    var p = paddingStack[node.depth],\\n        x0 = node.x0 + p,\\n        y0 = node.y0 + p,\\n        x1 = node.x1 - p,\\n        y1 = node.y1 - p;\\n    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\\n    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\\n    node.x0 = x0;\\n    node.y0 = y0;\\n    node.x1 = x1;\\n    node.y1 = y1;\\n    if (node.children) {\\n      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\\n      x0 += paddingLeft(node) - p;\\n      y0 += paddingTop(node) - p;\\n      x1 -= paddingRight(node) - p;\\n      y1 -= paddingBottom(node) - p;\\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\\n      tile(node, x0, y0, x1, y1);\\n    }\\n  }\\n\\n  treemap.round = function(x) {\\n    return arguments.length ? (round = !!x, treemap) : round;\\n  };\\n\\n  treemap.size = function(x) {\\n    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\\n  };\\n\\n  treemap.tile = function(x) {\\n    return arguments.length ? (tile = required(x), treemap) : tile;\\n  };\\n\\n  treemap.padding = function(x) {\\n    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\\n  };\\n\\n  treemap.paddingInner = function(x) {\\n    return arguments.length ? (paddingInner = typeof x === \\\"function\\\" ? x : constant(+x), treemap) : paddingInner;\\n  };\\n\\n  treemap.paddingOuter = function(x) {\\n    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\\n  };\\n\\n  treemap.paddingTop = function(x) {\\n    return arguments.length ? (paddingTop = typeof x === \\\"function\\\" ? x : constant(+x), treemap) : paddingTop;\\n  };\\n\\n  treemap.paddingRight = function(x) {\\n    return arguments.length ? (paddingRight = typeof x === \\\"function\\\" ? x : constant(+x), treemap) : paddingRight;\\n  };\\n\\n  treemap.paddingBottom = function(x) {\\n    return arguments.length ? (paddingBottom = typeof x === \\\"function\\\" ? x : constant(+x), treemap) : paddingBottom;\\n  };\\n\\n  treemap.paddingLeft = function(x) {\\n    return arguments.length ? (paddingLeft = typeof x === \\\"function\\\" ? x : constant(+x), treemap) : paddingLeft;\\n  };\\n\\n  return treemap;\\n}\\n\",\"export default function(parent, x0, y0, x1, y1) {\\n  var nodes = parent.children,\\n      i, n = nodes.length,\\n      sum, sums = new Array(n + 1);\\n\\n  for (sums[0] = sum = i = 0; i < n; ++i) {\\n    sums[i + 1] = sum += nodes[i].value;\\n  }\\n\\n  partition(0, n, parent.value, x0, y0, x1, y1);\\n\\n  function partition(i, j, value, x0, y0, x1, y1) {\\n    if (i >= j - 1) {\\n      var node = nodes[i];\\n      node.x0 = x0, node.y0 = y0;\\n      node.x1 = x1, node.y1 = y1;\\n      return;\\n    }\\n\\n    var valueOffset = sums[i],\\n        valueTarget = (value / 2) + valueOffset,\\n        k = i + 1,\\n        hi = j - 1;\\n\\n    while (k < hi) {\\n      var mid = k + hi >>> 1;\\n      if (sums[mid] < valueTarget) k = mid + 1;\\n      else hi = mid;\\n    }\\n\\n    if ((valueTarget - sums[k - 1]) < (sums[k] - valueTarget) && i + 1 < k) --k;\\n\\n    var valueLeft = sums[k] - valueOffset,\\n        valueRight = value - valueLeft;\\n\\n    if ((x1 - x0) > (y1 - y0)) {\\n      var xk = (x0 * valueRight + x1 * valueLeft) / value;\\n      partition(i, k, valueLeft, x0, y0, xk, y1);\\n      partition(k, j, valueRight, xk, y0, x1, y1);\\n    } else {\\n      var yk = (y0 * valueRight + y1 * valueLeft) / value;\\n      partition(i, k, valueLeft, x0, y0, x1, yk);\\n      partition(k, j, valueRight, x0, yk, x1, y1);\\n    }\\n  }\\n}\\n\",\"import dice from \\\"./dice\\\";\\nimport slice from \\\"./slice\\\";\\n\\nexport default function(parent, x0, y0, x1, y1) {\\n  (parent.depth & 1 ? slice : dice)(parent, x0, y0, x1, y1);\\n}\\n\",\"import treemapDice from \\\"./dice\\\";\\nimport treemapSlice from \\\"./slice\\\";\\nimport {phi, squarifyRatio} from \\\"./squarify\\\";\\n\\nexport default (function custom(ratio) {\\n\\n  function resquarify(parent, x0, y0, x1, y1) {\\n    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\\n      var rows,\\n          row,\\n          nodes,\\n          i,\\n          j = -1,\\n          n,\\n          m = rows.length,\\n          value = parent.value;\\n\\n      while (++j < m) {\\n        row = rows[j], nodes = row.children;\\n        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\\n        if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\\n        else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\\n        value -= row.value;\\n      }\\n    } else {\\n      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\\n      rows.ratio = ratio;\\n    }\\n  }\\n\\n  resquarify.ratio = function(x) {\\n    return custom((x = +x) > 1 ? x : 1);\\n  };\\n\\n  return resquarify;\\n})(phi);\\n\",\"export default function(polygon) {\\n  var i = -1,\\n      n = polygon.length,\\n      a,\\n      b = polygon[n - 1],\\n      area = 0;\\n\\n  while (++i < n) {\\n    a = b;\\n    b = polygon[i];\\n    area += a[1] * b[0] - a[0] * b[1];\\n  }\\n\\n  return area / 2;\\n}\\n\",\"export default function(polygon) {\\n  var i = -1,\\n      n = polygon.length,\\n      x = 0,\\n      y = 0,\\n      a,\\n      b = polygon[n - 1],\\n      c,\\n      k = 0;\\n\\n  while (++i < n) {\\n    a = b;\\n    b = polygon[i];\\n    k += c = a[0] * b[1] - b[0] * a[1];\\n    x += (a[0] + b[0]) * c;\\n    y += (a[1] + b[1]) * c;\\n  }\\n\\n  return k *= 3, [x / k, y / k];\\n}\\n\",\"// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\\n// the 3D cross product in a quadrant I Cartesian coordinate system (+x is\\n// right, +y is up). Returns a positive value if ABC is counter-clockwise,\\n// negative if clockwise, and zero if the points are collinear.\\nexport default function(a, b, c) {\\n  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\\n}\\n\",\"import cross from \\\"./cross\\\";\\n\\nfunction lexicographicOrder(a, b) {\\n  return a[0] - b[0] || a[1] - b[1];\\n}\\n\\n// Computes the upper convex hull per the monotone chain algorithm.\\n// Assumes points.length >= 3, is sorted by x, unique in y.\\n// Returns an array of indices into points in left-to-right order.\\nfunction computeUpperHullIndexes(points) {\\n  var n = points.length,\\n      indexes = [0, 1],\\n      size = 2;\\n\\n  for (var i = 2; i < n; ++i) {\\n    while (size > 1 && cross(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\\n    indexes[size++] = i;\\n  }\\n\\n  return indexes.slice(0, size); // remove popped points\\n}\\n\\nexport default function(points) {\\n  if ((n = points.length) < 3) return null;\\n\\n  var i,\\n      n,\\n      sortedPoints = new Array(n),\\n      flippedPoints = new Array(n);\\n\\n  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\\n  sortedPoints.sort(lexicographicOrder);\\n  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\\n\\n  var upperIndexes = computeUpperHullIndexes(sortedPoints),\\n      lowerIndexes = computeUpperHullIndexes(flippedPoints);\\n\\n  // Construct the hull polygon, removing possible duplicate endpoints.\\n  var skipLeft = lowerIndexes[0] === upperIndexes[0],\\n      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\\n      hull = [];\\n\\n  // Add upper hull in right-to-l order.\\n  // Then add lower hull in left-to-right order.\\n  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\\n  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\\n\\n  return hull;\\n}\\n\",\"export default function(polygon, point) {\\n  var n = polygon.length,\\n      p = polygon[n - 1],\\n      x = point[0], y = point[1],\\n      x0 = p[0], y0 = p[1],\\n      x1, y1,\\n      inside = false;\\n\\n  for (var i = 0; i < n; ++i) {\\n    p = polygon[i], x1 = p[0], y1 = p[1];\\n    if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\\n    x0 = x1, y0 = y1;\\n  }\\n\\n  return inside;\\n}\\n\",\"export default function(polygon) {\\n  var i = -1,\\n      n = polygon.length,\\n      b = polygon[n - 1],\\n      xa,\\n      ya,\\n      xb = b[0],\\n      yb = b[1],\\n      perimeter = 0;\\n\\n  while (++i < n) {\\n    xa = xb;\\n    ya = yb;\\n    b = polygon[i];\\n    xb = b[0];\\n    yb = b[1];\\n    xa -= xb;\\n    ya -= yb;\\n    perimeter += Math.sqrt(xa * xa + ya * ya);\\n  }\\n\\n  return perimeter;\\n}\\n\",\"export default function() {\\n  return Math.random();\\n}\\n\",\"import defaultSource from \\\"./defaultSource\\\";\\n\\nexport default (function sourceRandomUniform(source) {\\n  function randomUniform(min, max) {\\n    min = min == null ? 0 : +min;\\n    max = max == null ? 1 : +max;\\n    if (arguments.length === 1) max = min, min = 0;\\n    else max -= min;\\n    return function() {\\n      return source() * max + min;\\n    };\\n  }\\n\\n  randomUniform.source = sourceRandomUniform;\\n\\n  return randomUniform;\\n})(defaultSource);\\n\",\"import defaultSource from \\\"./defaultSource\\\";\\n\\nexport default (function sourceRandomNormal(source) {\\n  function randomNormal(mu, sigma) {\\n    var x, r;\\n    mu = mu == null ? 0 : +mu;\\n    sigma = sigma == null ? 1 : +sigma;\\n    return function() {\\n      var y;\\n\\n      // If available, use the second previously-generated uniform random.\\n      if (x != null) y = x, x = null;\\n\\n      // Otherwise, generate a new x and y.\\n      else do {\\n        x = source() * 2 - 1;\\n        y = source() * 2 - 1;\\n        r = x * x + y * y;\\n      } while (!r || r > 1);\\n\\n      return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\\n    };\\n  }\\n\\n  randomNormal.source = sourceRandomNormal;\\n\\n  return randomNormal;\\n})(defaultSource);\\n\",\"import defaultSource from \\\"./defaultSource\\\";\\nimport normal from \\\"./normal\\\";\\n\\nexport default (function sourceRandomLogNormal(source) {\\n  function randomLogNormal() {\\n    var randomNormal = normal.source(source).apply(this, arguments);\\n    return function() {\\n      return Math.exp(randomNormal());\\n    };\\n  }\\n\\n  randomLogNormal.source = sourceRandomLogNormal;\\n\\n  return randomLogNormal;\\n})(defaultSource);\\n\",\"import defaultSource from \\\"./defaultSource\\\";\\n\\nexport default (function sourceRandomIrwinHall(source) {\\n  function randomIrwinHall(n) {\\n    return function() {\\n      for (var sum = 0, i = 0; i < n; ++i) sum += source();\\n      return sum;\\n    };\\n  }\\n\\n  randomIrwinHall.source = sourceRandomIrwinHall;\\n\\n  return randomIrwinHall;\\n})(defaultSource);\\n\",\"import defaultSource from \\\"./defaultSource\\\";\\nimport irwinHall from \\\"./irwinHall\\\";\\n\\nexport default (function sourceRandomBates(source) {\\n  function randomBates(n) {\\n    var randomIrwinHall = irwinHall.source(source)(n);\\n    return function() {\\n      return randomIrwinHall() / n;\\n    };\\n  }\\n\\n  randomBates.source = sourceRandomBates;\\n\\n  return randomBates;\\n})(defaultSource);\\n\",\"import defaultSource from \\\"./defaultSource\\\";\\n\\nexport default (function sourceRandomExponential(source) {\\n  function randomExponential(lambda) {\\n    return function() {\\n      return -Math.log(1 - source()) / lambda;\\n    };\\n  }\\n\\n  randomExponential.source = sourceRandomExponential;\\n\\n  return randomExponential;\\n})(defaultSource);\\n\",\"var array = Array.prototype;\\n\\nexport var map = array.map;\\nexport var slice = array.slice;\\n\",\"import {map} from \\\"d3-collection\\\";\\nimport {slice} from \\\"./array\\\";\\n\\nexport var implicit = {name: \\\"implicit\\\"};\\n\\nexport default function ordinal(range) {\\n  var index = map(),\\n      domain = [],\\n      unknown = implicit;\\n\\n  range = range == null ? [] : slice.call(range);\\n\\n  function scale(d) {\\n    var key = d + \\\"\\\", i = index.get(key);\\n    if (!i) {\\n      if (unknown !== implicit) return unknown;\\n      index.set(key, i = domain.push(d));\\n    }\\n    return range[(i - 1) % range.length];\\n  }\\n\\n  scale.domain = function(_) {\\n    if (!arguments.length) return domain.slice();\\n    domain = [], index = map();\\n    var i = -1, n = _.length, d, key;\\n    while (++i < n) if (!index.has(key = (d = _[i]) + \\\"\\\")) index.set(key, domain.push(d));\\n    return scale;\\n  };\\n\\n  scale.range = function(_) {\\n    return arguments.length ? (range = slice.call(_), scale) : range.slice();\\n  };\\n\\n  scale.unknown = function(_) {\\n    return arguments.length ? (unknown = _, scale) : unknown;\\n  };\\n\\n  scale.copy = function() {\\n    return ordinal()\\n        .domain(domain)\\n        .range(range)\\n        .unknown(unknown);\\n  };\\n\\n  return scale;\\n}\\n\",\"import {range as sequence} from \\\"d3-array\\\";\\nimport ordinal from \\\"./ordinal\\\";\\n\\nexport default function band() {\\n  var scale = ordinal().unknown(undefined),\\n      domain = scale.domain,\\n      ordinalRange = scale.range,\\n      range = [0, 1],\\n      step,\\n      bandwidth,\\n      round = false,\\n      paddingInner = 0,\\n      paddingOuter = 0,\\n      align = 0.5;\\n\\n  delete scale.unknown;\\n\\n  function rescale() {\\n    var n = domain().length,\\n        reverse = range[1] < range[0],\\n        start = range[reverse - 0],\\n        stop = range[1 - reverse];\\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\\n    if (round) step = Math.floor(step);\\n    start += (stop - start - step * (n - paddingInner)) * align;\\n    bandwidth = step * (1 - paddingInner);\\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\\n    var values = sequence(n).map(function(i) { return start + step * i; });\\n    return ordinalRange(reverse ? values.reverse() : values);\\n  }\\n\\n  scale.domain = function(_) {\\n    return arguments.length ? (domain(_), rescale()) : domain();\\n  };\\n\\n  scale.range = function(_) {\\n    return arguments.length ? (range = [+_[0], +_[1]], rescale()) : range.slice();\\n  };\\n\\n  scale.rangeRound = function(_) {\\n    return range = [+_[0], +_[1]], round = true, rescale();\\n  };\\n\\n  scale.bandwidth = function() {\\n    return bandwidth;\\n  };\\n\\n  scale.step = function() {\\n    return step;\\n  };\\n\\n  scale.round = function(_) {\\n    return arguments.length ? (round = !!_, rescale()) : round;\\n  };\\n\\n  scale.padding = function(_) {\\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\\n  };\\n\\n  scale.paddingInner = function(_) {\\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\\n  };\\n\\n  scale.paddingOuter = function(_) {\\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\\n  };\\n\\n  scale.align = function(_) {\\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\\n  };\\n\\n  scale.copy = function() {\\n    return band()\\n        .domain(domain())\\n        .range(range)\\n        .round(round)\\n        .paddingInner(paddingInner)\\n        .paddingOuter(paddingOuter)\\n        .align(align);\\n  };\\n\\n  return rescale();\\n}\\n\\nfunction pointish(scale) {\\n  var copy = scale.copy;\\n\\n  scale.padding = scale.paddingOuter;\\n  delete scale.paddingInner;\\n  delete scale.paddingOuter;\\n\\n  scale.copy = function() {\\n    return pointish(copy());\\n  };\\n\\n  return scale;\\n}\\n\\nexport function point() {\\n  return pointish(band().paddingInner(1));\\n}\\n\",\"export default function(x) {\\n  return function() {\\n    return x;\\n  };\\n}\\n\",\"export default function(x) {\\n  return +x;\\n}\\n\",\"import {bisect} from \\\"d3-array\\\";\\nimport {interpolate as interpolateValue, interpolateRound} from \\\"d3-interpolate\\\";\\nimport {map, slice} from \\\"./array\\\";\\nimport constant from \\\"./constant\\\";\\nimport number from \\\"./number\\\";\\n\\nvar unit = [0, 1];\\n\\nexport function deinterpolateLinear(a, b) {\\n  return (b -= (a = +a))\\n      ? function(x) { return (x - a) / b; }\\n      : constant(b);\\n}\\n\\nfunction deinterpolateClamp(deinterpolate) {\\n  return function(a, b) {\\n    var d = deinterpolate(a = +a, b = +b);\\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\\n  };\\n}\\n\\nfunction reinterpolateClamp(reinterpolate) {\\n  return function(a, b) {\\n    var r = reinterpolate(a = +a, b = +b);\\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\\n  };\\n}\\n\\nfunction bimap(domain, range, deinterpolate, reinterpolate) {\\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\\n  return function(x) { return r0(d0(x)); };\\n}\\n\\nfunction polymap(domain, range, deinterpolate, reinterpolate) {\\n  var j = Math.min(domain.length, range.length) - 1,\\n      d = new Array(j),\\n      r = new Array(j),\\n      i = -1;\\n\\n  // Reverse descending domains.\\n  if (domain[j] < domain[0]) {\\n    domain = domain.slice().reverse();\\n    range = range.slice().reverse();\\n  }\\n\\n  while (++i < j) {\\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\\n    r[i] = reinterpolate(range[i], range[i + 1]);\\n  }\\n\\n  return function(x) {\\n    var i = bisect(domain, x, 1, j) - 1;\\n    return r[i](d[i](x));\\n  };\\n}\\n\\nexport function copy(source, target) {\\n  return target\\n      .domain(source.domain())\\n      .range(source.range())\\n      .interpolate(source.interpolate())\\n      .clamp(source.clamp());\\n}\\n\\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\\nexport default function continuous(deinterpolate, reinterpolate) {\\n  var domain = unit,\\n      range = unit,\\n      interpolate = interpolateValue,\\n      clamp = false,\\n      piecewise,\\n      output,\\n      input;\\n\\n  function rescale() {\\n    piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;\\n    output = input = null;\\n    return scale;\\n  }\\n\\n  function scale(x) {\\n    return (output || (output = piecewise(domain, range, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate)))(+x);\\n  }\\n\\n  scale.invert = function(y) {\\n    return (input || (input = piecewise(range, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\\n  };\\n\\n  scale.domain = function(_) {\\n    return arguments.length ? (domain = map.call(_, number), rescale()) : domain.slice();\\n  };\\n\\n  scale.range = function(_) {\\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\\n  };\\n\\n  scale.rangeRound = function(_) {\\n    return range = slice.call(_), interpolate = interpolateRound, rescale();\\n  };\\n\\n  scale.clamp = function(_) {\\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\\n  };\\n\\n  scale.interpolate = function(_) {\\n    return arguments.length ? (interpolate = _, rescale()) : interpolate;\\n  };\\n\\n  return rescale();\\n}\\n\",\"import {tickStep} from \\\"d3-array\\\";\\nimport {format, formatPrefix, formatSpecifier, precisionFixed, precisionPrefix, precisionRound} from \\\"d3-format\\\";\\n\\nexport default function(domain, count, specifier) {\\n  var start = domain[0],\\n      stop = domain[domain.length - 1],\\n      step = tickStep(start, stop, count == null ? 10 : count),\\n      precision;\\n  specifier = formatSpecifier(specifier == null ? \\\",f\\\" : specifier);\\n  switch (specifier.type) {\\n    case \\\"s\\\": {\\n      var value = Math.max(Math.abs(start), Math.abs(stop));\\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\\n      return formatPrefix(specifier, value);\\n    }\\n    case \\\"\\\":\\n    case \\\"e\\\":\\n    case \\\"g\\\":\\n    case \\\"p\\\":\\n    case \\\"r\\\": {\\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \\\"e\\\");\\n      break;\\n    }\\n    case \\\"f\\\":\\n    case \\\"%\\\": {\\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \\\"%\\\") * 2;\\n      break;\\n    }\\n  }\\n  return format(specifier);\\n}\\n\",\"import {ticks, tickIncrement} from \\\"d3-array\\\";\\nimport {interpolateNumber as reinterpolate} from \\\"d3-interpolate\\\";\\nimport {default as continuous, copy, deinterpolateLinear as deinterpolate} from \\\"./continuous\\\";\\nimport tickFormat from \\\"./tickFormat\\\";\\n\\nexport function linearish(scale) {\\n  var domain = scale.domain;\\n\\n  scale.ticks = function(count) {\\n    var d = domain();\\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\\n  };\\n\\n  scale.tickFormat = function(count, specifier) {\\n    return tickFormat(domain(), count, specifier);\\n  };\\n\\n  scale.nice = function(count) {\\n    if (count == null) count = 10;\\n\\n    var d = domain(),\\n        i0 = 0,\\n        i1 = d.length - 1,\\n        start = d[i0],\\n        stop = d[i1],\\n        step;\\n\\n    if (stop < start) {\\n      step = start, start = stop, stop = step;\\n      step = i0, i0 = i1, i1 = step;\\n    }\\n\\n    step = tickIncrement(start, stop, count);\\n\\n    if (step > 0) {\\n      start = Math.floor(start / step) * step;\\n      stop = Math.ceil(stop / step) * step;\\n      step = tickIncrement(start, stop, count);\\n    } else if (step < 0) {\\n      start = Math.ceil(start * step) / step;\\n      stop = Math.floor(stop * step) / step;\\n      step = tickIncrement(start, stop, count);\\n    }\\n\\n    if (step > 0) {\\n      d[i0] = Math.floor(start / step) * step;\\n      d[i1] = Math.ceil(stop / step) * step;\\n      domain(d);\\n    } else if (step < 0) {\\n      d[i0] = Math.ceil(start * step) / step;\\n      d[i1] = Math.floor(stop * step) / step;\\n      domain(d);\\n    }\\n\\n    return scale;\\n  };\\n\\n  return scale;\\n}\\n\\nexport default function linear() {\\n  var scale = continuous(deinterpolate, reinterpolate);\\n\\n  scale.copy = function() {\\n    return copy(scale, linear());\\n  };\\n\\n  return linearish(scale);\\n}\\n\",\"import {map} from \\\"./array\\\";\\nimport {linearish} from \\\"./linear\\\";\\nimport number from \\\"./number\\\";\\n\\nexport default function identity() {\\n  var domain = [0, 1];\\n\\n  function scale(x) {\\n    return +x;\\n  }\\n\\n  scale.invert = scale;\\n\\n  scale.domain = scale.range = function(_) {\\n    return arguments.length ? (domain = map.call(_, number), scale) : domain.slice();\\n  };\\n\\n  scale.copy = function() {\\n    return identity().domain(domain);\\n  };\\n\\n  return linearish(scale);\\n}\\n\",\"export default function(domain, interval) {\\n  domain = domain.slice();\\n\\n  var i0 = 0,\\n      i1 = domain.length - 1,\\n      x0 = domain[i0],\\n      x1 = domain[i1],\\n      t;\\n\\n  if (x1 < x0) {\\n    t = i0, i0 = i1, i1 = t;\\n    t = x0, x0 = x1, x1 = t;\\n  }\\n\\n  domain[i0] = interval.floor(x0);\\n  domain[i1] = interval.ceil(x1);\\n  return domain;\\n}\\n\",\"import {ticks} from \\\"d3-array\\\";\\nimport {format} from \\\"d3-format\\\";\\nimport constant from \\\"./constant\\\";\\nimport nice from \\\"./nice\\\";\\nimport {default as continuous, copy} from \\\"./continuous\\\";\\n\\nfunction deinterpolate(a, b) {\\n  return (b = Math.log(b / a))\\n      ? function(x) { return Math.log(x / a) / b; }\\n      : constant(b);\\n}\\n\\nfunction reinterpolate(a, b) {\\n  return a < 0\\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\\n}\\n\\nfunction pow10(x) {\\n  return isFinite(x) ? +(\\\"1e\\\" + x) : x < 0 ? 0 : x;\\n}\\n\\nfunction powp(base) {\\n  return base === 10 ? pow10\\n      : base === Math.E ? Math.exp\\n      : function(x) { return Math.pow(base, x); };\\n}\\n\\nfunction logp(base) {\\n  return base === Math.E ? Math.log\\n      : base === 10 && Math.log10\\n      || base === 2 && Math.log2\\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\\n}\\n\\nfunction reflect(f) {\\n  return function(x) {\\n    return -f(-x);\\n  };\\n}\\n\\nexport default function log() {\\n  var scale = continuous(deinterpolate, reinterpolate).domain([1, 10]),\\n      domain = scale.domain,\\n      base = 10,\\n      logs = logp(10),\\n      pows = powp(10);\\n\\n  function rescale() {\\n    logs = logp(base), pows = powp(base);\\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\\n    return scale;\\n  }\\n\\n  scale.base = function(_) {\\n    return arguments.length ? (base = +_, rescale()) : base;\\n  };\\n\\n  scale.domain = function(_) {\\n    return arguments.length ? (domain(_), rescale()) : domain();\\n  };\\n\\n  scale.ticks = function(count) {\\n    var d = domain(),\\n        u = d[0],\\n        v = d[d.length - 1],\\n        r;\\n\\n    if (r = v < u) i = u, u = v, v = i;\\n\\n    var i = logs(u),\\n        j = logs(v),\\n        p,\\n        k,\\n        t,\\n        n = count == null ? 10 : +count,\\n        z = [];\\n\\n    if (!(base % 1) && j - i < n) {\\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\\n      if (u > 0) for (; i < j; ++i) {\\n        for (k = 1, p = pows(i); k < base; ++k) {\\n          t = p * k;\\n          if (t < u) continue;\\n          if (t > v) break;\\n          z.push(t);\\n        }\\n      } else for (; i < j; ++i) {\\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\\n          t = p * k;\\n          if (t < u) continue;\\n          if (t > v) break;\\n          z.push(t);\\n        }\\n      }\\n    } else {\\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\\n    }\\n\\n    return r ? z.reverse() : z;\\n  };\\n\\n  scale.tickFormat = function(count, specifier) {\\n    if (specifier == null) specifier = base === 10 ? \\\".0e\\\" : \\\",\\\";\\n    if (typeof specifier !== \\\"function\\\") specifier = format(specifier);\\n    if (count === Infinity) return specifier;\\n    if (count == null) count = 10;\\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\\n    return function(d) {\\n      var i = d / pows(Math.round(logs(d)));\\n      if (i * base < base - 0.5) i *= base;\\n      return i <= k ? specifier(d) : \\\"\\\";\\n    };\\n  };\\n\\n  scale.nice = function() {\\n    return domain(nice(domain(), {\\n      floor: function(x) { return pows(Math.floor(logs(x))); },\\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\\n    }));\\n  };\\n\\n  scale.copy = function() {\\n    return copy(scale, log().base(base));\\n  };\\n\\n  return scale;\\n}\\n\",\"import constant from \\\"./constant\\\";\\nimport {linearish} from \\\"./linear\\\";\\nimport {default as continuous, copy} from \\\"./continuous\\\";\\n\\nfunction raise(x, exponent) {\\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\\n}\\n\\nexport default function pow() {\\n  var exponent = 1,\\n      scale = continuous(deinterpolate, reinterpolate),\\n      domain = scale.domain;\\n\\n  function deinterpolate(a, b) {\\n    return (b = raise(b, exponent) - (a = raise(a, exponent)))\\n        ? function(x) { return (raise(x, exponent) - a) / b; }\\n        : constant(b);\\n  }\\n\\n  function reinterpolate(a, b) {\\n    b = raise(b, exponent) - (a = raise(a, exponent));\\n    return function(t) { return raise(a + b * t, 1 / exponent); };\\n  }\\n\\n  scale.exponent = function(_) {\\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\\n  };\\n\\n  scale.copy = function() {\\n    return copy(scale, pow().exponent(exponent));\\n  };\\n\\n  return linearish(scale);\\n}\\n\\nexport function sqrt() {\\n  return pow().exponent(0.5);\\n}\\n\",\"import {ascending, bisect, quantile as threshold} from \\\"d3-array\\\";\\nimport {slice} from \\\"./array\\\";\\n\\nexport default function quantile() {\\n  var domain = [],\\n      range = [],\\n      thresholds = [];\\n\\n  function rescale() {\\n    var i = 0, n = Math.max(1, range.length);\\n    thresholds = new Array(n - 1);\\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\\n    return scale;\\n  }\\n\\n  function scale(x) {\\n    if (!isNaN(x = +x)) return range[bisect(thresholds, x)];\\n  }\\n\\n  scale.invertExtent = function(y) {\\n    var i = range.indexOf(y);\\n    return i < 0 ? [NaN, NaN] : [\\n      i > 0 ? thresholds[i - 1] : domain[0],\\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\\n    ];\\n  };\\n\\n  scale.domain = function(_) {\\n    if (!arguments.length) return domain.slice();\\n    domain = [];\\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\\n    domain.sort(ascending);\\n    return rescale();\\n  };\\n\\n  scale.range = function(_) {\\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\\n  };\\n\\n  scale.quantiles = function() {\\n    return thresholds.slice();\\n  };\\n\\n  scale.copy = function() {\\n    return quantile()\\n        .domain(domain)\\n        .range(range);\\n  };\\n\\n  return scale;\\n}\\n\",\"import {bisect} from \\\"d3-array\\\";\\nimport {slice} from \\\"./array\\\";\\nimport {linearish} from \\\"./linear\\\";\\n\\nexport default function quantize() {\\n  var x0 = 0,\\n      x1 = 1,\\n      n = 1,\\n      domain = [0.5],\\n      range = [0, 1];\\n\\n  function scale(x) {\\n    if (x <= x) return range[bisect(domain, x, 0, n)];\\n  }\\n\\n  function rescale() {\\n    var i = -1;\\n    domain = new Array(n);\\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\\n    return scale;\\n  }\\n\\n  scale.domain = function(_) {\\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\\n  };\\n\\n  scale.range = function(_) {\\n    return arguments.length ? (n = (range = slice.call(_)).length - 1, rescale()) : range.slice();\\n  };\\n\\n  scale.invertExtent = function(y) {\\n    var i = range.indexOf(y);\\n    return i < 0 ? [NaN, NaN]\\n        : i < 1 ? [x0, domain[0]]\\n        : i >= n ? [domain[n - 1], x1]\\n        : [domain[i - 1], domain[i]];\\n  };\\n\\n  scale.copy = function() {\\n    return quantize()\\n        .domain([x0, x1])\\n        .range(range);\\n  };\\n\\n  return linearish(scale);\\n}\\n\",\"import {bisect} from \\\"d3-array\\\";\\nimport {slice} from \\\"./array\\\";\\n\\nexport default function threshold() {\\n  var domain = [0.5],\\n      range = [0, 1],\\n      n = 1;\\n\\n  function scale(x) {\\n    if (x <= x) return range[bisect(domain, x, 0, n)];\\n  }\\n\\n  scale.domain = function(_) {\\n    return arguments.length ? (domain = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\\n  };\\n\\n  scale.range = function(_) {\\n    return arguments.length ? (range = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\\n  };\\n\\n  scale.invertExtent = function(y) {\\n    var i = range.indexOf(y);\\n    return [domain[i - 1], domain[i]];\\n  };\\n\\n  scale.copy = function() {\\n    return threshold()\\n        .domain(domain)\\n        .range(range);\\n  };\\n\\n  return scale;\\n}\\n\",\"var t0 = new Date,\\n    t1 = new Date;\\n\\nexport default function newInterval(floori, offseti, count, field) {\\n\\n  function interval(date) {\\n    return floori(date = new Date(+date)), date;\\n  }\\n\\n  interval.floor = interval;\\n\\n  interval.ceil = function(date) {\\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\\n  };\\n\\n  interval.round = function(date) {\\n    var d0 = interval(date),\\n        d1 = interval.ceil(date);\\n    return date - d0 < d1 - date ? d0 : d1;\\n  };\\n\\n  interval.offset = function(date, step) {\\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\\n  };\\n\\n  interval.range = function(start, stop, step) {\\n    var range = [], previous;\\n    start = interval.ceil(start);\\n    step = step == null ? 1 : Math.floor(step);\\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\\n    do range.push(previous = new Date(+start)), offseti(start, step), floori(start);\\n    while (previous < start && start < stop);\\n    return range;\\n  };\\n\\n  interval.filter = function(test) {\\n    return newInterval(function(date) {\\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\\n    }, function(date, step) {\\n      if (date >= date) {\\n        if (step < 0) while (++step <= 0) {\\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\\n        } else while (--step >= 0) {\\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\\n        }\\n      }\\n    });\\n  };\\n\\n  if (count) {\\n    interval.count = function(start, end) {\\n      t0.setTime(+start), t1.setTime(+end);\\n      floori(t0), floori(t1);\\n      return Math.floor(count(t0, t1));\\n    };\\n\\n    interval.every = function(step) {\\n      step = Math.floor(step);\\n      return !isFinite(step) || !(step > 0) ? null\\n          : !(step > 1) ? interval\\n          : interval.filter(field\\n              ? function(d) { return field(d) % step === 0; }\\n              : function(d) { return interval.count(0, d) % step === 0; });\\n    };\\n  }\\n\\n  return interval;\\n}\\n\",\"import interval from \\\"./interval\\\";\\n\\nvar millisecond = interval(function() {\\n  // noop\\n}, function(date, step) {\\n  date.setTime(+date + step);\\n}, function(start, end) {\\n  return end - start;\\n});\\n\\n// An optimized implementation for this simple case.\\nmillisecond.every = function(k) {\\n  k = Math.floor(k);\\n  if (!isFinite(k) || !(k > 0)) return null;\\n  if (!(k > 1)) return millisecond;\\n  return interval(function(date) {\\n    date.setTime(Math.floor(date / k) * k);\\n  }, function(date, step) {\\n    date.setTime(+date + step * k);\\n  }, function(start, end) {\\n    return (end - start) / k;\\n  });\\n};\\n\\nexport default millisecond;\\nexport var milliseconds = millisecond.range;\\n\",\"export var durationSecond = 1e3;\\nexport var durationMinute = 6e4;\\nexport var durationHour = 36e5;\\nexport var durationDay = 864e5;\\nexport var durationWeek = 6048e5;\\n\",\"import interval from \\\"./interval\\\";\\nimport {durationSecond} from \\\"./duration\\\";\\n\\nvar second = interval(function(date) {\\n  date.setTime(Math.floor(date / durationSecond) * durationSecond);\\n}, function(date, step) {\\n  date.setTime(+date + step * durationSecond);\\n}, function(start, end) {\\n  return (end - start) / durationSecond;\\n}, function(date) {\\n  return date.getUTCSeconds();\\n});\\n\\nexport default second;\\nexport var seconds = second.range;\\n\",\"import interval from \\\"./interval\\\";\\nimport {durationMinute} from \\\"./duration\\\";\\n\\nvar minute = interval(function(date) {\\n  date.setTime(Math.floor(date / durationMinute) * durationMinute);\\n}, function(date, step) {\\n  date.setTime(+date + step * durationMinute);\\n}, function(start, end) {\\n  return (end - start) / durationMinute;\\n}, function(date) {\\n  return date.getMinutes();\\n});\\n\\nexport default minute;\\nexport var minutes = minute.range;\\n\",\"import interval from \\\"./interval\\\";\\nimport {durationHour, durationMinute} from \\\"./duration\\\";\\n\\nvar hour = interval(function(date) {\\n  var offset = date.getTimezoneOffset() * durationMinute % durationHour;\\n  if (offset < 0) offset += durationHour;\\n  date.setTime(Math.floor((+date - offset) / durationHour) * durationHour + offset);\\n}, function(date, step) {\\n  date.setTime(+date + step * durationHour);\\n}, function(start, end) {\\n  return (end - start) / durationHour;\\n}, function(date) {\\n  return date.getHours();\\n});\\n\\nexport default hour;\\nexport var hours = hour.range;\\n\",\"import interval from \\\"./interval\\\";\\nimport {durationDay, durationMinute} from \\\"./duration\\\";\\n\\nvar day = interval(function(date) {\\n  date.setHours(0, 0, 0, 0);\\n}, function(date, step) {\\n  date.setDate(date.getDate() + step);\\n}, function(start, end) {\\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\\n}, function(date) {\\n  return date.getDate() - 1;\\n});\\n\\nexport default day;\\nexport var days = day.range;\\n\",\"import interval from \\\"./interval\\\";\\nimport {durationMinute, durationWeek} from \\\"./duration\\\";\\n\\nfunction weekday(i) {\\n  return interval(function(date) {\\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\\n    date.setHours(0, 0, 0, 0);\\n  }, function(date, step) {\\n    date.setDate(date.getDate() + step * 7);\\n  }, function(start, end) {\\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\\n  });\\n}\\n\\nexport var sunday = weekday(0);\\nexport var monday = weekday(1);\\nexport var tuesday = weekday(2);\\nexport var wednesday = weekday(3);\\nexport var thursday = weekday(4);\\nexport var friday = weekday(5);\\nexport var saturday = weekday(6);\\n\\nexport var sundays = sunday.range;\\nexport var mondays = monday.range;\\nexport var tuesdays = tuesday.range;\\nexport var wednesdays = wednesday.range;\\nexport var thursdays = thursday.range;\\nexport var fridays = friday.range;\\nexport var saturdays = saturday.range;\\n\",\"import interval from \\\"./interval\\\";\\n\\nvar month = interval(function(date) {\\n  date.setDate(1);\\n  date.setHours(0, 0, 0, 0);\\n}, function(date, step) {\\n  date.setMonth(date.getMonth() + step);\\n}, function(start, end) {\\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\\n}, function(date) {\\n  return date.getMonth();\\n});\\n\\nexport default month;\\nexport var months = month.range;\\n\",\"import interval from \\\"./interval\\\";\\n\\nvar year = interval(function(date) {\\n  date.setMonth(0, 1);\\n  date.setHours(0, 0, 0, 0);\\n}, function(date, step) {\\n  date.setFullYear(date.getFullYear() + step);\\n}, function(start, end) {\\n  return end.getFullYear() - start.getFullYear();\\n}, function(date) {\\n  return date.getFullYear();\\n});\\n\\n// An optimized implementation for this simple case.\\nyear.every = function(k) {\\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\\n    date.setMonth(0, 1);\\n    date.setHours(0, 0, 0, 0);\\n  }, function(date, step) {\\n    date.setFullYear(date.getFullYear() + step * k);\\n  });\\n};\\n\\nexport default year;\\nexport var years = year.range;\\n\",\"import interval from \\\"./interval\\\";\\nimport {durationMinute} from \\\"./duration\\\";\\n\\nvar utcMinute = interval(function(date) {\\n  date.setUTCSeconds(0, 0);\\n}, function(date, step) {\\n  date.setTime(+date + step * durationMinute);\\n}, function(start, end) {\\n  return (end - start) / durationMinute;\\n}, function(date) {\\n  return date.getUTCMinutes();\\n});\\n\\nexport default utcMinute;\\nexport var utcMinutes = utcMinute.range;\\n\",\"import interval from \\\"./interval\\\";\\nimport {durationHour} from \\\"./duration\\\";\\n\\nvar utcHour = interval(function(date) {\\n  date.setUTCMinutes(0, 0, 0);\\n}, function(date, step) {\\n  date.setTime(+date + step * durationHour);\\n}, function(start, end) {\\n  return (end - start) / durationHour;\\n}, function(date) {\\n  return date.getUTCHours();\\n});\\n\\nexport default utcHour;\\nexport var utcHours = utcHour.range;\\n\",\"import interval from \\\"./interval\\\";\\nimport {durationDay} from \\\"./duration\\\";\\n\\nvar utcDay = interval(function(date) {\\n  date.setUTCHours(0, 0, 0, 0);\\n}, function(date, step) {\\n  date.setUTCDate(date.getUTCDate() + step);\\n}, function(start, end) {\\n  return (end - start) / durationDay;\\n}, function(date) {\\n  return date.getUTCDate() - 1;\\n});\\n\\nexport default utcDay;\\nexport var utcDays = utcDay.range;\\n\",\"import interval from \\\"./interval\\\";\\nimport {durationWeek} from \\\"./duration\\\";\\n\\nfunction utcWeekday(i) {\\n  return interval(function(date) {\\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\\n    date.setUTCHours(0, 0, 0, 0);\\n  }, function(date, step) {\\n    date.setUTCDate(date.getUTCDate() + step * 7);\\n  }, function(start, end) {\\n    return (end - start) / durationWeek;\\n  });\\n}\\n\\nexport var utcSunday = utcWeekday(0);\\nexport var utcMonday = utcWeekday(1);\\nexport var utcTuesday = utcWeekday(2);\\nexport var utcWednesday = utcWeekday(3);\\nexport var utcThursday = utcWeekday(4);\\nexport var utcFriday = utcWeekday(5);\\nexport var utcSaturday = utcWeekday(6);\\n\\nexport var utcSundays = utcSunday.range;\\nexport var utcMondays = utcMonday.range;\\nexport var utcTuesdays = utcTuesday.range;\\nexport var utcWednesdays = utcWednesday.range;\\nexport var utcThursdays = utcThursday.range;\\nexport var utcFridays = utcFriday.range;\\nexport var utcSaturdays = utcSaturday.range;\\n\",\"import interval from \\\"./interval\\\";\\n\\nvar utcMonth = interval(function(date) {\\n  date.setUTCDate(1);\\n  date.setUTCHours(0, 0, 0, 0);\\n}, function(date, step) {\\n  date.setUTCMonth(date.getUTCMonth() + step);\\n}, function(start, end) {\\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\\n}, function(date) {\\n  return date.getUTCMonth();\\n});\\n\\nexport default utcMonth;\\nexport var utcMonths = utcMonth.range;\\n\",\"import interval from \\\"./interval\\\";\\n\\nvar utcYear = interval(function(date) {\\n  date.setUTCMonth(0, 1);\\n  date.setUTCHours(0, 0, 0, 0);\\n}, function(date, step) {\\n  date.setUTCFullYear(date.getUTCFullYear() + step);\\n}, function(start, end) {\\n  return end.getUTCFullYear() - start.getUTCFullYear();\\n}, function(date) {\\n  return date.getUTCFullYear();\\n});\\n\\n// An optimized implementation for this simple case.\\nutcYear.every = function(k) {\\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\\n    date.setUTCMonth(0, 1);\\n    date.setUTCHours(0, 0, 0, 0);\\n  }, function(date, step) {\\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\\n  });\\n};\\n\\nexport default utcYear;\\nexport var utcYears = utcYear.range;\\n\",\"import {\\n  timeDay,\\n  timeSunday,\\n  timeMonday,\\n  timeThursday,\\n  timeYear,\\n  utcDay,\\n  utcSunday,\\n  utcMonday,\\n  utcThursday,\\n  utcYear\\n} from \\\"d3-time\\\";\\n\\nfunction localDate(d) {\\n  if (0 <= d.y && d.y < 100) {\\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\\n    date.setFullYear(d.y);\\n    return date;\\n  }\\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\\n}\\n\\nfunction utcDate(d) {\\n  if (0 <= d.y && d.y < 100) {\\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\\n    date.setUTCFullYear(d.y);\\n    return date;\\n  }\\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\\n}\\n\\nfunction newYear(y) {\\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\\n}\\n\\nexport default function formatLocale(locale) {\\n  var locale_dateTime = locale.dateTime,\\n      locale_date = locale.date,\\n      locale_time = locale.time,\\n      locale_periods = locale.periods,\\n      locale_weekdays = locale.days,\\n      locale_shortWeekdays = locale.shortDays,\\n      locale_months = locale.months,\\n      locale_shortMonths = locale.shortMonths;\\n\\n  var periodRe = formatRe(locale_periods),\\n      periodLookup = formatLookup(locale_periods),\\n      weekdayRe = formatRe(locale_weekdays),\\n      weekdayLookup = formatLookup(locale_weekdays),\\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\\n      monthRe = formatRe(locale_months),\\n      monthLookup = formatLookup(locale_months),\\n      shortMonthRe = formatRe(locale_shortMonths),\\n      shortMonthLookup = formatLookup(locale_shortMonths);\\n\\n  var formats = {\\n    \\\"a\\\": formatShortWeekday,\\n    \\\"A\\\": formatWeekday,\\n    \\\"b\\\": formatShortMonth,\\n    \\\"B\\\": formatMonth,\\n    \\\"c\\\": null,\\n    \\\"d\\\": formatDayOfMonth,\\n    \\\"e\\\": formatDayOfMonth,\\n    \\\"f\\\": formatMicroseconds,\\n    \\\"H\\\": formatHour24,\\n    \\\"I\\\": formatHour12,\\n    \\\"j\\\": formatDayOfYear,\\n    \\\"L\\\": formatMilliseconds,\\n    \\\"m\\\": formatMonthNumber,\\n    \\\"M\\\": formatMinutes,\\n    \\\"p\\\": formatPeriod,\\n    \\\"Q\\\": formatUnixTimestamp,\\n    \\\"s\\\": formatUnixTimestampSeconds,\\n    \\\"S\\\": formatSeconds,\\n    \\\"u\\\": formatWeekdayNumberMonday,\\n    \\\"U\\\": formatWeekNumberSunday,\\n    \\\"V\\\": formatWeekNumberISO,\\n    \\\"w\\\": formatWeekdayNumberSunday,\\n    \\\"W\\\": formatWeekNumberMonday,\\n    \\\"x\\\": null,\\n    \\\"X\\\": null,\\n    \\\"y\\\": formatYear,\\n    \\\"Y\\\": formatFullYear,\\n    \\\"Z\\\": formatZone,\\n    \\\"%\\\": formatLiteralPercent\\n  };\\n\\n  var utcFormats = {\\n    \\\"a\\\": formatUTCShortWeekday,\\n    \\\"A\\\": formatUTCWeekday,\\n    \\\"b\\\": formatUTCShortMonth,\\n    \\\"B\\\": formatUTCMonth,\\n    \\\"c\\\": null,\\n    \\\"d\\\": formatUTCDayOfMonth,\\n    \\\"e\\\": formatUTCDayOfMonth,\\n    \\\"f\\\": formatUTCMicroseconds,\\n    \\\"H\\\": formatUTCHour24,\\n    \\\"I\\\": formatUTCHour12,\\n    \\\"j\\\": formatUTCDayOfYear,\\n    \\\"L\\\": formatUTCMilliseconds,\\n    \\\"m\\\": formatUTCMonthNumber,\\n    \\\"M\\\": formatUTCMinutes,\\n    \\\"p\\\": formatUTCPeriod,\\n    \\\"Q\\\": formatUnixTimestamp,\\n    \\\"s\\\": formatUnixTimestampSeconds,\\n    \\\"S\\\": formatUTCSeconds,\\n    \\\"u\\\": formatUTCWeekdayNumberMonday,\\n    \\\"U\\\": formatUTCWeekNumberSunday,\\n    \\\"V\\\": formatUTCWeekNumberISO,\\n    \\\"w\\\": formatUTCWeekdayNumberSunday,\\n    \\\"W\\\": formatUTCWeekNumberMonday,\\n    \\\"x\\\": null,\\n    \\\"X\\\": null,\\n    \\\"y\\\": formatUTCYear,\\n    \\\"Y\\\": formatUTCFullYear,\\n    \\\"Z\\\": formatUTCZone,\\n    \\\"%\\\": formatLiteralPercent\\n  };\\n\\n  var parses = {\\n    \\\"a\\\": parseShortWeekday,\\n    \\\"A\\\": parseWeekday,\\n    \\\"b\\\": parseShortMonth,\\n    \\\"B\\\": parseMonth,\\n    \\\"c\\\": parseLocaleDateTime,\\n    \\\"d\\\": parseDayOfMonth,\\n    \\\"e\\\": parseDayOfMonth,\\n    \\\"f\\\": parseMicroseconds,\\n    \\\"H\\\": parseHour24,\\n    \\\"I\\\": parseHour24,\\n    \\\"j\\\": parseDayOfYear,\\n    \\\"L\\\": parseMilliseconds,\\n    \\\"m\\\": parseMonthNumber,\\n    \\\"M\\\": parseMinutes,\\n    \\\"p\\\": parsePeriod,\\n    \\\"Q\\\": parseUnixTimestamp,\\n    \\\"s\\\": parseUnixTimestampSeconds,\\n    \\\"S\\\": parseSeconds,\\n    \\\"u\\\": parseWeekdayNumberMonday,\\n    \\\"U\\\": parseWeekNumberSunday,\\n    \\\"V\\\": parseWeekNumberISO,\\n    \\\"w\\\": parseWeekdayNumberSunday,\\n    \\\"W\\\": parseWeekNumberMonday,\\n    \\\"x\\\": parseLocaleDate,\\n    \\\"X\\\": parseLocaleTime,\\n    \\\"y\\\": parseYear,\\n    \\\"Y\\\": parseFullYear,\\n    \\\"Z\\\": parseZone,\\n    \\\"%\\\": parseLiteralPercent\\n  };\\n\\n  // These recursive directive definitions must be deferred.\\n  formats.x = newFormat(locale_date, formats);\\n  formats.X = newFormat(locale_time, formats);\\n  formats.c = newFormat(locale_dateTime, formats);\\n  utcFormats.x = newFormat(locale_date, utcFormats);\\n  utcFormats.X = newFormat(locale_time, utcFormats);\\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\\n\\n  function newFormat(specifier, formats) {\\n    return function(date) {\\n      var string = [],\\n          i = -1,\\n          j = 0,\\n          n = specifier.length,\\n          c,\\n          pad,\\n          format;\\n\\n      if (!(date instanceof Date)) date = new Date(+date);\\n\\n      while (++i < n) {\\n        if (specifier.charCodeAt(i) === 37) {\\n          string.push(specifier.slice(j, i));\\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\\n          else pad = c === \\\"e\\\" ? \\\" \\\" : \\\"0\\\";\\n          if (format = formats[c]) c = format(date, pad);\\n          string.push(c);\\n          j = i + 1;\\n        }\\n      }\\n\\n      string.push(specifier.slice(j, i));\\n      return string.join(\\\"\\\");\\n    };\\n  }\\n\\n  function newParse(specifier, newDate) {\\n    return function(string) {\\n      var d = newYear(1900),\\n          i = parseSpecifier(d, specifier, string += \\\"\\\", 0),\\n          week, day;\\n      if (i != string.length) return null;\\n\\n      // If a UNIX timestamp is specified, return it.\\n      if (\\\"Q\\\" in d) return new Date(d.Q);\\n\\n      // The am-pm flag is 0 for AM, and 1 for PM.\\n      if (\\\"p\\\" in d) d.H = d.H % 12 + d.p * 12;\\n\\n      // Convert day-of-week and week-of-year to day-of-year.\\n      if (\\\"V\\\" in d) {\\n        if (d.V < 1 || d.V > 53) return null;\\n        if (!(\\\"w\\\" in d)) d.w = 1;\\n        if (\\\"Z\\\" in d) {\\n          week = utcDate(newYear(d.y)), day = week.getUTCDay();\\n          week = day > 4 || day === 0 ? utcMonday.ceil(week) : utcMonday(week);\\n          week = utcDay.offset(week, (d.V - 1) * 7);\\n          d.y = week.getUTCFullYear();\\n          d.m = week.getUTCMonth();\\n          d.d = week.getUTCDate() + (d.w + 6) % 7;\\n        } else {\\n          week = newDate(newYear(d.y)), day = week.getDay();\\n          week = day > 4 || day === 0 ? timeMonday.ceil(week) : timeMonday(week);\\n          week = timeDay.offset(week, (d.V - 1) * 7);\\n          d.y = week.getFullYear();\\n          d.m = week.getMonth();\\n          d.d = week.getDate() + (d.w + 6) % 7;\\n        }\\n      } else if (\\\"W\\\" in d || \\\"U\\\" in d) {\\n        if (!(\\\"w\\\" in d)) d.w = \\\"u\\\" in d ? d.u % 7 : \\\"W\\\" in d ? 1 : 0;\\n        day = \\\"Z\\\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\\n        d.m = 0;\\n        d.d = \\\"W\\\" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;\\n      }\\n\\n      // If a time zone is specified, all fields are interpreted as UTC and then\\n      // offset according to the specified time zone.\\n      if (\\\"Z\\\" in d) {\\n        d.H += d.Z / 100 | 0;\\n        d.M += d.Z % 100;\\n        return utcDate(d);\\n      }\\n\\n      // Otherwise, all fields are in local time.\\n      return newDate(d);\\n    };\\n  }\\n\\n  function parseSpecifier(d, specifier, string, j) {\\n    var i = 0,\\n        n = specifier.length,\\n        m = string.length,\\n        c,\\n        parse;\\n\\n    while (i < n) {\\n      if (j >= m) return -1;\\n      c = specifier.charCodeAt(i++);\\n      if (c === 37) {\\n        c = specifier.charAt(i++);\\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\\n      } else if (c != string.charCodeAt(j++)) {\\n        return -1;\\n      }\\n    }\\n\\n    return j;\\n  }\\n\\n  function parsePeriod(d, string, i) {\\n    var n = periodRe.exec(string.slice(i));\\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\\n  }\\n\\n  function parseShortWeekday(d, string, i) {\\n    var n = shortWeekdayRe.exec(string.slice(i));\\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\\n  }\\n\\n  function parseWeekday(d, string, i) {\\n    var n = weekdayRe.exec(string.slice(i));\\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\\n  }\\n\\n  function parseShortMonth(d, string, i) {\\n    var n = shortMonthRe.exec(string.slice(i));\\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\\n  }\\n\\n  function parseMonth(d, string, i) {\\n    var n = monthRe.exec(string.slice(i));\\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\\n  }\\n\\n  function parseLocaleDateTime(d, string, i) {\\n    return parseSpecifier(d, locale_dateTime, string, i);\\n  }\\n\\n  function parseLocaleDate(d, string, i) {\\n    return parseSpecifier(d, locale_date, string, i);\\n  }\\n\\n  function parseLocaleTime(d, string, i) {\\n    return parseSpecifier(d, locale_time, string, i);\\n  }\\n\\n  function formatShortWeekday(d) {\\n    return locale_shortWeekdays[d.getDay()];\\n  }\\n\\n  function formatWeekday(d) {\\n    return locale_weekdays[d.getDay()];\\n  }\\n\\n  function formatShortMonth(d) {\\n    return locale_shortMonths[d.getMonth()];\\n  }\\n\\n  function formatMonth(d) {\\n    return locale_months[d.getMonth()];\\n  }\\n\\n  function formatPeriod(d) {\\n    return locale_periods[+(d.getHours() >= 12)];\\n  }\\n\\n  function formatUTCShortWeekday(d) {\\n    return locale_shortWeekdays[d.getUTCDay()];\\n  }\\n\\n  function formatUTCWeekday(d) {\\n    return locale_weekdays[d.getUTCDay()];\\n  }\\n\\n  function formatUTCShortMonth(d) {\\n    return locale_shortMonths[d.getUTCMonth()];\\n  }\\n\\n  function formatUTCMonth(d) {\\n    return locale_months[d.getUTCMonth()];\\n  }\\n\\n  function formatUTCPeriod(d) {\\n    return locale_periods[+(d.getUTCHours() >= 12)];\\n  }\\n\\n  return {\\n    format: function(specifier) {\\n      var f = newFormat(specifier += \\\"\\\", formats);\\n      f.toString = function() { return specifier; };\\n      return f;\\n    },\\n    parse: function(specifier) {\\n      var p = newParse(specifier += \\\"\\\", localDate);\\n      p.toString = function() { return specifier; };\\n      return p;\\n    },\\n    utcFormat: function(specifier) {\\n      var f = newFormat(specifier += \\\"\\\", utcFormats);\\n      f.toString = function() { return specifier; };\\n      return f;\\n    },\\n    utcParse: function(specifier) {\\n      var p = newParse(specifier, utcDate);\\n      p.toString = function() { return specifier; };\\n      return p;\\n    }\\n  };\\n}\\n\\nvar pads = {\\\"-\\\": \\\"\\\", \\\"_\\\": \\\" \\\", \\\"0\\\": \\\"0\\\"},\\n    numberRe = /^\\\\s*\\\\d+/, // note: ignores next directive\\n    percentRe = /^%/,\\n    requoteRe = /[\\\\\\\\^$*+?|[\\\\]().{}]/g;\\n\\nfunction pad(value, fill, width) {\\n  var sign = value < 0 ? \\\"-\\\" : \\\"\\\",\\n      string = (sign ? -value : value) + \\\"\\\",\\n      length = string.length;\\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\\n}\\n\\nfunction requote(s) {\\n  return s.replace(requoteRe, \\\"\\\\\\\\$&\\\");\\n}\\n\\nfunction formatRe(names) {\\n  return new RegExp(\\\"^(?:\\\" + names.map(requote).join(\\\"|\\\") + \\\")\\\", \\\"i\\\");\\n}\\n\\nfunction formatLookup(names) {\\n  var map = {}, i = -1, n = names.length;\\n  while (++i < n) map[names[i].toLowerCase()] = i;\\n  return map;\\n}\\n\\nfunction parseWeekdayNumberSunday(d, string, i) {\\n  var n = numberRe.exec(string.slice(i, i + 1));\\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\\n}\\n\\nfunction parseWeekdayNumberMonday(d, string, i) {\\n  var n = numberRe.exec(string.slice(i, i + 1));\\n  return n ? (d.u = +n[0], i + n[0].length) : -1;\\n}\\n\\nfunction parseWeekNumberSunday(d, string, i) {\\n  var n = numberRe.exec(string.slice(i, i + 2));\\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\\n}\\n\\nfunction parseWeekNumberISO(d, string, i) {\\n  var n = numberRe.exec(string.slice(i, i + 2));\\n  return n ? (d.V = +n[0], i + n[0].length) : -1;\\n}\\n\\nfunction parseWeekNumberMonday(d, string, i) {\\n  var n = numberRe.exec(string.slice(i, i + 2));\\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\\n}\\n\\nfunction parseFullYear(d, string, i) {\\n  var n = numberRe.exec(string.slice(i, i + 4));\\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\\n}\\n\\nfunction parseYear(d, string, i) {\\n  var n = numberRe.exec(string.slice(i, i + 2));\\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\\n}\\n\\nfunction parseZone(d, string, i) {\\n  var n = /^(Z)|([+-]\\\\d\\\\d)(?::?(\\\\d\\\\d))?/.exec(string.slice(i, i + 6));\\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \\\"00\\\")), i + n[0].length) : -1;\\n}\\n\\nfunction parseMonthNumber(d, string, i) {\\n  var n = numberRe.exec(string.slice(i, i + 2));\\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\\n}\\n\\nfunction parseDayOfMonth(d, string, i) {\\n  var n = numberRe.exec(string.slice(i, i + 2));\\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\\n}\\n\\nfunction parseDayOfYear(d, string, i) {\\n  var n = numberRe.exec(string.slice(i, i + 3));\\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\\n}\\n\\nfunction parseHour24(d, string, i) {\\n  var n = numberRe.exec(string.slice(i, i + 2));\\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\\n}\\n\\nfunction parseMinutes(d, string, i) {\\n  var n = numberRe.exec(string.slice(i, i + 2));\\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\\n}\\n\\nfunction parseSeconds(d, string, i) {\\n  var n = numberRe.exec(string.slice(i, i + 2));\\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\\n}\\n\\nfunction parseMilliseconds(d, string, i) {\\n  var n = numberRe.exec(string.slice(i, i + 3));\\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\\n}\\n\\nfunction parseMicroseconds(d, string, i) {\\n  var n = numberRe.exec(string.slice(i, i + 6));\\n  return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;\\n}\\n\\nfunction parseLiteralPercent(d, string, i) {\\n  var n = percentRe.exec(string.slice(i, i + 1));\\n  return n ? i + n[0].length : -1;\\n}\\n\\nfunction parseUnixTimestamp(d, string, i) {\\n  var n = numberRe.exec(string.slice(i));\\n  return n ? (d.Q = +n[0], i + n[0].length) : -1;\\n}\\n\\nfunction parseUnixTimestampSeconds(d, string, i) {\\n  var n = numberRe.exec(string.slice(i));\\n  return n ? (d.Q = (+n[0]) * 1000, i + n[0].length) : -1;\\n}\\n\\nfunction formatDayOfMonth(d, p) {\\n  return pad(d.getDate(), p, 2);\\n}\\n\\nfunction formatHour24(d, p) {\\n  return pad(d.getHours(), p, 2);\\n}\\n\\nfunction formatHour12(d, p) {\\n  return pad(d.getHours() % 12 || 12, p, 2);\\n}\\n\\nfunction formatDayOfYear(d, p) {\\n  return pad(1 + timeDay.count(timeYear(d), d), p, 3);\\n}\\n\\nfunction formatMilliseconds(d, p) {\\n  return pad(d.getMilliseconds(), p, 3);\\n}\\n\\nfunction formatMicroseconds(d, p) {\\n  return formatMilliseconds(d, p) + \\\"000\\\";\\n}\\n\\nfunction formatMonthNumber(d, p) {\\n  return pad(d.getMonth() + 1, p, 2);\\n}\\n\\nfunction formatMinutes(d, p) {\\n  return pad(d.getMinutes(), p, 2);\\n}\\n\\nfunction formatSeconds(d, p) {\\n  return pad(d.getSeconds(), p, 2);\\n}\\n\\nfunction formatWeekdayNumberMonday(d) {\\n  var day = d.getDay();\\n  return day === 0 ? 7 : day;\\n}\\n\\nfunction formatWeekNumberSunday(d, p) {\\n  return pad(timeSunday.count(timeYear(d), d), p, 2);\\n}\\n\\nfunction formatWeekNumberISO(d, p) {\\n  var day = d.getDay();\\n  d = (day >= 4 || day === 0) ? timeThursday(d) : timeThursday.ceil(d);\\n  return pad(timeThursday.count(timeYear(d), d) + (timeYear(d).getDay() === 4), p, 2);\\n}\\n\\nfunction formatWeekdayNumberSunday(d) {\\n  return d.getDay();\\n}\\n\\nfunction formatWeekNumberMonday(d, p) {\\n  return pad(timeMonday.count(timeYear(d), d), p, 2);\\n}\\n\\nfunction formatYear(d, p) {\\n  return pad(d.getFullYear() % 100, p, 2);\\n}\\n\\nfunction formatFullYear(d, p) {\\n  return pad(d.getFullYear() % 10000, p, 4);\\n}\\n\\nfunction formatZone(d) {\\n  var z = d.getTimezoneOffset();\\n  return (z > 0 ? \\\"-\\\" : (z *= -1, \\\"+\\\"))\\n      + pad(z / 60 | 0, \\\"0\\\", 2)\\n      + pad(z % 60, \\\"0\\\", 2);\\n}\\n\\nfunction formatUTCDayOfMonth(d, p) {\\n  return pad(d.getUTCDate(), p, 2);\\n}\\n\\nfunction formatUTCHour24(d, p) {\\n  return pad(d.getUTCHours(), p, 2);\\n}\\n\\nfunction formatUTCHour12(d, p) {\\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\\n}\\n\\nfunction formatUTCDayOfYear(d, p) {\\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\\n}\\n\\nfunction formatUTCMilliseconds(d, p) {\\n  return pad(d.getUTCMilliseconds(), p, 3);\\n}\\n\\nfunction formatUTCMicroseconds(d, p) {\\n  return formatUTCMilliseconds(d, p) + \\\"000\\\";\\n}\\n\\nfunction formatUTCMonthNumber(d, p) {\\n  return pad(d.getUTCMonth() + 1, p, 2);\\n}\\n\\nfunction formatUTCMinutes(d, p) {\\n  return pad(d.getUTCMinutes(), p, 2);\\n}\\n\\nfunction formatUTCSeconds(d, p) {\\n  return pad(d.getUTCSeconds(), p, 2);\\n}\\n\\nfunction formatUTCWeekdayNumberMonday(d) {\\n  var dow = d.getUTCDay();\\n  return dow === 0 ? 7 : dow;\\n}\\n\\nfunction formatUTCWeekNumberSunday(d, p) {\\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\\n}\\n\\nfunction formatUTCWeekNumberISO(d, p) {\\n  var day = d.getUTCDay();\\n  d = (day >= 4 || day === 0) ? utcThursday(d) : utcThursday.ceil(d);\\n  return pad(utcThursday.count(utcYear(d), d) + (utcYear(d).getUTCDay() === 4), p, 2);\\n}\\n\\nfunction formatUTCWeekdayNumberSunday(d) {\\n  return d.getUTCDay();\\n}\\n\\nfunction formatUTCWeekNumberMonday(d, p) {\\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\\n}\\n\\nfunction formatUTCYear(d, p) {\\n  return pad(d.getUTCFullYear() % 100, p, 2);\\n}\\n\\nfunction formatUTCFullYear(d, p) {\\n  return pad(d.getUTCFullYear() % 10000, p, 4);\\n}\\n\\nfunction formatUTCZone() {\\n  return \\\"+0000\\\";\\n}\\n\\nfunction formatLiteralPercent() {\\n  return \\\"%\\\";\\n}\\n\\nfunction formatUnixTimestamp(d) {\\n  return +d;\\n}\\n\\nfunction formatUnixTimestampSeconds(d) {\\n  return Math.floor(+d / 1000);\\n}\\n\",\"import formatLocale from \\\"./locale\\\";\\n\\nvar locale;\\nexport var timeFormat;\\nexport var timeParse;\\nexport var utcFormat;\\nexport var utcParse;\\n\\ndefaultLocale({\\n  dateTime: \\\"%x, %X\\\",\\n  date: \\\"%-m/%-d/%Y\\\",\\n  time: \\\"%-I:%M:%S %p\\\",\\n  periods: [\\\"AM\\\", \\\"PM\\\"],\\n  days: [\\\"Sunday\\\", \\\"Monday\\\", \\\"Tuesday\\\", \\\"Wednesday\\\", \\\"Thursday\\\", \\\"Friday\\\", \\\"Saturday\\\"],\\n  shortDays: [\\\"Sun\\\", \\\"Mon\\\", \\\"Tue\\\", \\\"Wed\\\", \\\"Thu\\\", \\\"Fri\\\", \\\"Sat\\\"],\\n  months: [\\\"January\\\", \\\"February\\\", \\\"March\\\", \\\"April\\\", \\\"May\\\", \\\"June\\\", \\\"July\\\", \\\"August\\\", \\\"September\\\", \\\"October\\\", \\\"November\\\", \\\"December\\\"],\\n  shortMonths: [\\\"Jan\\\", \\\"Feb\\\", \\\"Mar\\\", \\\"Apr\\\", \\\"May\\\", \\\"Jun\\\", \\\"Jul\\\", \\\"Aug\\\", \\\"Sep\\\", \\\"Oct\\\", \\\"Nov\\\", \\\"Dec\\\"]\\n});\\n\\nexport default function defaultLocale(definition) {\\n  locale = formatLocale(definition);\\n  timeFormat = locale.format;\\n  timeParse = locale.parse;\\n  utcFormat = locale.utcFormat;\\n  utcParse = locale.utcParse;\\n  return locale;\\n}\\n\",\"import {utcFormat} from \\\"./defaultLocale\\\";\\n\\nexport var isoSpecifier = \\\"%Y-%m-%dT%H:%M:%S.%LZ\\\";\\n\\nfunction formatIsoNative(date) {\\n  return date.toISOString();\\n}\\n\\nvar formatIso = Date.prototype.toISOString\\n    ? formatIsoNative\\n    : utcFormat(isoSpecifier);\\n\\nexport default formatIso;\\n\",\"import {isoSpecifier} from \\\"./isoFormat\\\";\\nimport {utcParse} from \\\"./defaultLocale\\\";\\n\\nfunction parseIsoNative(string) {\\n  var date = new Date(string);\\n  return isNaN(date) ? null : date;\\n}\\n\\nvar parseIso = +new Date(\\\"2000-01-01T00:00:00.000Z\\\")\\n    ? parseIsoNative\\n    : utcParse(isoSpecifier);\\n\\nexport default parseIso;\\n\",\"import {bisector, tickStep} from \\\"d3-array\\\";\\nimport {interpolateNumber as reinterpolate} from \\\"d3-interpolate\\\";\\nimport {timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond} from \\\"d3-time\\\";\\nimport {timeFormat} from \\\"d3-time-format\\\";\\nimport {map} from \\\"./array\\\";\\nimport {default as continuous, copy, deinterpolateLinear as deinterpolate} from \\\"./continuous\\\";\\nimport nice from \\\"./nice\\\";\\n\\nvar durationSecond = 1000,\\n    durationMinute = durationSecond * 60,\\n    durationHour = durationMinute * 60,\\n    durationDay = durationHour * 24,\\n    durationWeek = durationDay * 7,\\n    durationMonth = durationDay * 30,\\n    durationYear = durationDay * 365;\\n\\nfunction date(t) {\\n  return new Date(t);\\n}\\n\\nfunction number(t) {\\n  return t instanceof Date ? +t : +new Date(+t);\\n}\\n\\nexport function calendar(year, month, week, day, hour, minute, second, millisecond, format) {\\n  var scale = continuous(deinterpolate, reinterpolate),\\n      invert = scale.invert,\\n      domain = scale.domain;\\n\\n  var formatMillisecond = format(\\\".%L\\\"),\\n      formatSecond = format(\\\":%S\\\"),\\n      formatMinute = format(\\\"%I:%M\\\"),\\n      formatHour = format(\\\"%I %p\\\"),\\n      formatDay = format(\\\"%a %d\\\"),\\n      formatWeek = format(\\\"%b %d\\\"),\\n      formatMonth = format(\\\"%B\\\"),\\n      formatYear = format(\\\"%Y\\\");\\n\\n  var tickIntervals = [\\n    [second,  1,      durationSecond],\\n    [second,  5,  5 * durationSecond],\\n    [second, 15, 15 * durationSecond],\\n    [second, 30, 30 * durationSecond],\\n    [minute,  1,      durationMinute],\\n    [minute,  5,  5 * durationMinute],\\n    [minute, 15, 15 * durationMinute],\\n    [minute, 30, 30 * durationMinute],\\n    [  hour,  1,      durationHour  ],\\n    [  hour,  3,  3 * durationHour  ],\\n    [  hour,  6,  6 * durationHour  ],\\n    [  hour, 12, 12 * durationHour  ],\\n    [   day,  1,      durationDay   ],\\n    [   day,  2,  2 * durationDay   ],\\n    [  week,  1,      durationWeek  ],\\n    [ month,  1,      durationMonth ],\\n    [ month,  3,  3 * durationMonth ],\\n    [  year,  1,      durationYear  ]\\n  ];\\n\\n  function tickFormat(date) {\\n    return (second(date) < date ? formatMillisecond\\n        : minute(date) < date ? formatSecond\\n        : hour(date) < date ? formatMinute\\n        : day(date) < date ? formatHour\\n        : month(date) < date ? (week(date) < date ? formatDay : formatWeek)\\n        : year(date) < date ? formatMonth\\n        : formatYear)(date);\\n  }\\n\\n  function tickInterval(interval, start, stop, step) {\\n    if (interval == null) interval = 10;\\n\\n    // If a desired tick count is specified, pick a reasonable tick interval\\n    // based on the extent of the domain and a rough estimate of tick size.\\n    // Otherwise, assume interval is already a time interval and use it.\\n    if (typeof interval === \\\"number\\\") {\\n      var target = Math.abs(stop - start) / interval,\\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\\n      if (i === tickIntervals.length) {\\n        step = tickStep(start / durationYear, stop / durationYear, interval);\\n        interval = year;\\n      } else if (i) {\\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\\n        step = i[1];\\n        interval = i[0];\\n      } else {\\n        step = Math.max(tickStep(start, stop, interval), 1);\\n        interval = millisecond;\\n      }\\n    }\\n\\n    return step == null ? interval : interval.every(step);\\n  }\\n\\n  scale.invert = function(y) {\\n    return new Date(invert(y));\\n  };\\n\\n  scale.domain = function(_) {\\n    return arguments.length ? domain(map.call(_, number)) : domain().map(date);\\n  };\\n\\n  scale.ticks = function(interval, step) {\\n    var d = domain(),\\n        t0 = d[0],\\n        t1 = d[d.length - 1],\\n        r = t1 < t0,\\n        t;\\n    if (r) t = t0, t0 = t1, t1 = t;\\n    t = tickInterval(interval, t0, t1, step);\\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\\n    return r ? t.reverse() : t;\\n  };\\n\\n  scale.tickFormat = function(count, specifier) {\\n    return specifier == null ? tickFormat : format(specifier);\\n  };\\n\\n  scale.nice = function(interval, step) {\\n    var d = domain();\\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\\n        ? domain(nice(d, interval))\\n        : scale;\\n  };\\n\\n  scale.copy = function() {\\n    return copy(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format));\\n  };\\n\\n  return scale;\\n}\\n\\nexport default function() {\\n  return calendar(timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond, timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\\n}\\n\",\"import {calendar} from \\\"./time\\\";\\nimport {utcFormat} from \\\"d3-time-format\\\";\\nimport {utcYear, utcMonth, utcWeek, utcDay, utcHour, utcMinute, utcSecond, utcMillisecond} from \\\"d3-time\\\";\\n\\nexport default function() {\\n  return calendar(utcYear, utcMonth, utcWeek, utcDay, utcHour, utcMinute, utcSecond, utcMillisecond, utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\\n}\\n\",\"import {linearish} from \\\"./linear\\\";\\n\\nexport default function sequential(interpolator) {\\n  var x0 = 0,\\n      x1 = 1,\\n      clamp = false;\\n\\n  function scale(x) {\\n    var t = (x - x0) / (x1 - x0);\\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\\n  }\\n\\n  scale.domain = function(_) {\\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\\n  };\\n\\n  scale.clamp = function(_) {\\n    return arguments.length ? (clamp = !!_, scale) : clamp;\\n  };\\n\\n  scale.interpolator = function(_) {\\n    return arguments.length ? (interpolator = _, scale) : interpolator;\\n  };\\n\\n  scale.copy = function() {\\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\\n  };\\n\\n  return linearish(scale);\\n}\\n\",\"export default function(specifier) {\\n  var n = specifier.length / 6 | 0, colors = new Array(n), i = 0;\\n  while (i < n) colors[i] = \\\"#\\\" + specifier.slice(i * 6, ++i * 6);\\n  return colors;\\n}\\n\",\"import colors from \\\"../colors\\\";\\n\\nexport default colors(\\\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\\\");\\n\",\"import colors from \\\"../colors\\\";\\n\\nexport default colors(\\\"7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666\\\");\\n\",\"import colors from \\\"../colors\\\";\\n\\nexport default colors(\\\"1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666\\\");\\n\",\"import colors from \\\"../colors\\\";\\n\\nexport default colors(\\\"a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928\\\");\\n\",\"import colors from \\\"../colors\\\";\\n\\nexport default colors(\\\"fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2\\\");\\n\",\"import colors from \\\"../colors\\\";\\n\\nexport default colors(\\\"b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc\\\");\\n\",\"import colors from \\\"../colors\\\";\\n\\nexport default colors(\\\"e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999\\\");\\n\",\"import colors from \\\"../colors\\\";\\n\\nexport default colors(\\\"66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3\\\");\\n\",\"import colors from \\\"../colors\\\";\\n\\nexport default colors(\\\"8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f\\\");\\n\",\"import {interpolateRgbBasis} from \\\"d3-interpolate\\\";\\n\\nexport default function(scheme) {\\n  return interpolateRgbBasis(scheme[scheme.length - 1]);\\n}\\n\",\"import colors from \\\"../colors\\\";\\nimport ramp from \\\"../ramp\\\";\\n\\nexport var scheme = new Array(3).concat(\\n  \\\"d8b365f5f5f55ab4ac\\\",\\n  \\\"a6611adfc27d80cdc1018571\\\",\\n  \\\"a6611adfc27df5f5f580cdc1018571\\\",\\n  \\\"8c510ad8b365f6e8c3c7eae55ab4ac01665e\\\",\\n  \\\"8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e\\\",\\n  \\\"8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e\\\",\\n  \\\"8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e\\\",\\n  \\\"5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30\\\",\\n  \\\"5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30\\\"\\n).map(colors);\\n\\nexport default ramp(scheme);\\n\",\"import colors from \\\"../colors\\\";\\nimport ramp from \\\"../ramp\\\";\\n\\nexport var scheme = new Array(3).concat(\\n  \\\"af8dc3f7f7f77fbf7b\\\",\\n  \\\"7b3294c2a5cfa6dba0008837\\\",\\n  \\\"7b3294c2a5cff7f7f7a6dba0008837\\\",\\n  \\\"762a83af8dc3e7d4e8d9f0d37fbf7b1b7837\\\",\\n  \\\"762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837\\\",\\n  \\\"762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837\\\",\\n  \\\"762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837\\\",\\n  \\\"40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b\\\",\\n  \\\"40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b\\\"\\n).map(colors);\\n\\nexport default ramp(scheme);\\n\",\"import colors from \\\"../colors\\\";\\nimport ramp from \\\"../ramp\\\";\\n\\nexport var scheme = new Array(3).concat(\\n  \\\"e9a3c9f7f7f7a1d76a\\\",\\n  \\\"d01c8bf1b6dab8e1864dac26\\\",\\n  \\\"d01c8bf1b6daf7f7f7b8e1864dac26\\\",\\n  \\\"c51b7de9a3c9fde0efe6f5d0a1d76a4d9221\\\",\\n  \\\"c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221\\\",\\n  \\\"c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221\\\",\\n  \\\"c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221\\\",\\n  \\\"8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419\\\",\\n  \\\"8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419\\\"\\n).map(colors);\\n\\nexport default ramp(scheme);\\n\",\"import colors from \\\"../colors\\\";\\nimport ramp from \\\"../ramp\\\";\\n\\nexport var scheme = new Array(3).concat(\\n  \\\"998ec3f7f7f7f1a340\\\",\\n  \\\"5e3c99b2abd2fdb863e66101\\\",\\n  \\\"5e3c99b2abd2f7f7f7fdb863e66101\\\",\\n  \\\"542788998ec3d8daebfee0b6f1a340b35806\\\",\\n  \\\"542788998ec3d8daebf7f7f7fee0b6f1a340b35806\\\",\\n  \\\"5427888073acb2abd2d8daebfee0b6fdb863e08214b35806\\\",\\n  \\\"5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806\\\",\\n  \\\"2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08\\\",\\n  \\\"2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08\\\"\\n).map(colors);\\n\\nexport default ramp(scheme);\\n\",\"import colors from \\\"../colors\\\";\\nimport ramp from \\\"../ramp\\\";\\n\\nexport var scheme = new Array(3).concat(\\n  \\\"ef8a62f7f7f767a9cf\\\",\\n  \\\"ca0020f4a58292c5de0571b0\\\",\\n  \\\"ca0020f4a582f7f7f792c5de0571b0\\\",\\n  \\\"b2182bef8a62fddbc7d1e5f067a9cf2166ac\\\",\\n  \\\"b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac\\\",\\n  \\\"b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac\\\",\\n  \\\"b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac\\\",\\n  \\\"67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061\\\",\\n  \\\"67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061\\\"\\n).map(colors);\\n\\nexport default ramp(scheme);\\n\",\"import colors from \\\"../colors\\\";\\nimport ramp from \\\"../ramp\\\";\\n\\nexport var scheme = new Array(3).concat(\\n  \\\"ef8a62ffffff999999\\\",\\n  \\\"ca0020f4a582bababa404040\\\",\\n  \\\"ca0020f4a582ffffffbababa404040\\\",\\n  \\\"b2182bef8a62fddbc7e0e0e09999994d4d4d\\\",\\n  \\\"b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d\\\",\\n  \\\"b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d\\\",\\n  \\\"b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d\\\",\\n  \\\"67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a\\\",\\n  \\\"67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a\\\"\\n).map(colors);\\n\\nexport default ramp(scheme);\\n\",\"import colors from \\\"../colors\\\";\\nimport ramp from \\\"../ramp\\\";\\n\\nexport var scheme = new Array(3).concat(\\n  \\\"fc8d59ffffbf91bfdb\\\",\\n  \\\"d7191cfdae61abd9e92c7bb6\\\",\\n  \\\"d7191cfdae61ffffbfabd9e92c7bb6\\\",\\n  \\\"d73027fc8d59fee090e0f3f891bfdb4575b4\\\",\\n  \\\"d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4\\\",\\n  \\\"d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4\\\",\\n  \\\"d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4\\\",\\n  \\\"a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695\\\",\\n  \\\"a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695\\\"\\n).map(colors);\\n\\nexport default ramp(scheme);\\n\",\"import colors from \\\"../colors\\\";\\nimport ramp from \\\"../ramp\\\";\\n\\nexport var scheme = new Array(3).concat(\\n  \\\"fc8d59ffffbf91cf60\\\",\\n  \\\"d7191cfdae61a6d96a1a9641\\\",\\n  \\\"d7191cfdae61ffffbfa6d96a1a9641\\\",\\n  \\\"d73027fc8d59fee08bd9ef8b91cf601a9850\\\",\\n  \\\"d73027fc8d59fee08bffffbfd9ef8b91cf601a9850\\\",\\n  \\\"d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850\\\",\\n  \\\"d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850\\\",\\n  \\\"a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837\\\",\\n  \\\"a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837\\\"\\n).map(colors);\\n\\nexport default ramp(scheme);\\n\",\"import colors from \\\"../colors\\\";\\nimport ramp from \\\"../ramp\\\";\\n\\nexport var scheme = new Array(3).concat(\\n  \\\"fc8d59ffffbf99d594\\\",\\n  \\\"d7191cfdae61abdda42b83ba\\\",\\n  \\\"d7191cfdae61ffffbfabdda42b83ba\\\",\\n  \\\"d53e4ffc8d59fee08be6f59899d5943288bd\\\",\\n  \\\"d53e4ffc8d59fee08bffffbfe6f59899d5943288bd\\\",\\n  \\\"d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd\\\",\\n  \\\"d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd\\\",\\n  \\\"9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2\\\",\\n  \\\"9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2\\\"\\n).map(colors);\\n\\nexport default ramp(scheme);\\n\",\"import colors from \\\"../colors\\\";\\nimport ramp from \\\"../ramp\\\";\\n\\nexport var scheme = new Array(3).concat(\\n  \\\"e5f5f999d8c92ca25f\\\",\\n  \\\"edf8fbb2e2e266c2a4238b45\\\",\\n  \\\"edf8fbb2e2e266c2a42ca25f006d2c\\\",\\n  \\\"edf8fbccece699d8c966c2a42ca25f006d2c\\\",\\n  \\\"edf8fbccece699d8c966c2a441ae76238b45005824\\\",\\n  \\\"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824\\\",\\n  \\\"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b\\\"\\n).map(colors);\\n\\nexport default ramp(scheme);\\n\",\"import colors from \\\"../colors\\\";\\nimport ramp from \\\"../ramp\\\";\\n\\nexport var scheme = new Array(3).concat(\\n  \\\"e0ecf49ebcda8856a7\\\",\\n  \\\"edf8fbb3cde38c96c688419d\\\",\\n  \\\"edf8fbb3cde38c96c68856a7810f7c\\\",\\n  \\\"edf8fbbfd3e69ebcda8c96c68856a7810f7c\\\",\\n  \\\"edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b\\\",\\n  \\\"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b\\\",\\n  \\\"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b\\\"\\n).map(colors);\\n\\nexport default ramp(scheme);\\n\",\"import colors from \\\"../colors\\\";\\nimport ramp from \\\"../ramp\\\";\\n\\nexport var scheme = new Array(3).concat(\\n  \\\"e0f3dba8ddb543a2ca\\\",\\n  \\\"f0f9e8bae4bc7bccc42b8cbe\\\",\\n  \\\"f0f9e8bae4bc7bccc443a2ca0868ac\\\",\\n  \\\"f0f9e8ccebc5a8ddb57bccc443a2ca0868ac\\\",\\n  \\\"f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e\\\",\\n  \\\"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e\\\",\\n  \\\"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081\\\"\\n).map(colors);\\n\\nexport default ramp(scheme);\\n\",\"import colors from \\\"../colors\\\";\\nimport ramp from \\\"../ramp\\\";\\n\\nexport var scheme = new Array(3).concat(\\n  \\\"fee8c8fdbb84e34a33\\\",\\n  \\\"fef0d9fdcc8afc8d59d7301f\\\",\\n  \\\"fef0d9fdcc8afc8d59e34a33b30000\\\",\\n  \\\"fef0d9fdd49efdbb84fc8d59e34a33b30000\\\",\\n  \\\"fef0d9fdd49efdbb84fc8d59ef6548d7301f990000\\\",\\n  \\\"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000\\\",\\n  \\\"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000\\\"\\n).map(colors);\\n\\nexport default ramp(scheme);\\n\",\"import colors from \\\"../colors\\\";\\nimport ramp from \\\"../ramp\\\";\\n\\nexport var scheme = new Array(3).concat(\\n  \\\"ece2f0a6bddb1c9099\\\",\\n  \\\"f6eff7bdc9e167a9cf02818a\\\",\\n  \\\"f6eff7bdc9e167a9cf1c9099016c59\\\",\\n  \\\"f6eff7d0d1e6a6bddb67a9cf1c9099016c59\\\",\\n  \\\"f6eff7d0d1e6a6bddb67a9cf3690c002818a016450\\\",\\n  \\\"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450\\\",\\n  \\\"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636\\\"\\n).map(colors);\\n\\nexport default ramp(scheme);\\n\",\"import colors from \\\"../colors\\\";\\nimport ramp from \\\"../ramp\\\";\\n\\nexport var scheme = new Array(3).concat(\\n  \\\"ece7f2a6bddb2b8cbe\\\",\\n  \\\"f1eef6bdc9e174a9cf0570b0\\\",\\n  \\\"f1eef6bdc9e174a9cf2b8cbe045a8d\\\",\\n  \\\"f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d\\\",\\n  \\\"f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b\\\",\\n  \\\"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b\\\",\\n  \\\"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858\\\"\\n).map(colors);\\n\\nexport default ramp(scheme);\\n\",\"import colors from \\\"../colors\\\";\\nimport ramp from \\\"../ramp\\\";\\n\\nexport var scheme = new Array(3).concat(\\n  \\\"e7e1efc994c7dd1c77\\\",\\n  \\\"f1eef6d7b5d8df65b0ce1256\\\",\\n  \\\"f1eef6d7b5d8df65b0dd1c77980043\\\",\\n  \\\"f1eef6d4b9dac994c7df65b0dd1c77980043\\\",\\n  \\\"f1eef6d4b9dac994c7df65b0e7298ace125691003f\\\",\\n  \\\"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f\\\",\\n  \\\"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f\\\"\\n).map(colors);\\n\\nexport default ramp(scheme);\\n\",\"import colors from \\\"../colors\\\";\\nimport ramp from \\\"../ramp\\\";\\n\\nexport var scheme = new Array(3).concat(\\n  \\\"fde0ddfa9fb5c51b8a\\\",\\n  \\\"feebe2fbb4b9f768a1ae017e\\\",\\n  \\\"feebe2fbb4b9f768a1c51b8a7a0177\\\",\\n  \\\"feebe2fcc5c0fa9fb5f768a1c51b8a7a0177\\\",\\n  \\\"feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177\\\",\\n  \\\"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177\\\",\\n  \\\"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a\\\"\\n).map(colors);\\n\\nexport default ramp(scheme);\\n\",\"import colors from \\\"../colors\\\";\\nimport ramp from \\\"../ramp\\\";\\n\\nexport var scheme = new Array(3).concat(\\n  \\\"edf8b17fcdbb2c7fb8\\\",\\n  \\\"ffffcca1dab441b6c4225ea8\\\",\\n  \\\"ffffcca1dab441b6c42c7fb8253494\\\",\\n  \\\"ffffccc7e9b47fcdbb41b6c42c7fb8253494\\\",\\n  \\\"ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84\\\",\\n  \\\"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84\\\",\\n  \\\"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58\\\"\\n).map(colors);\\n\\nexport default ramp(scheme);\\n\",\"import colors from \\\"../colors\\\";\\nimport ramp from \\\"../ramp\\\";\\n\\nexport var scheme = new Array(3).concat(\\n  \\\"f7fcb9addd8e31a354\\\",\\n  \\\"ffffccc2e69978c679238443\\\",\\n  \\\"ffffccc2e69978c67931a354006837\\\",\\n  \\\"ffffccd9f0a3addd8e78c67931a354006837\\\",\\n  \\\"ffffccd9f0a3addd8e78c67941ab5d238443005a32\\\",\\n  \\\"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32\\\",\\n  \\\"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529\\\"\\n).map(colors);\\n\\nexport default ramp(scheme);\\n\",\"import colors from \\\"../colors\\\";\\nimport ramp from \\\"../ramp\\\";\\n\\nexport var scheme = new Array(3).concat(\\n  \\\"fff7bcfec44fd95f0e\\\",\\n  \\\"ffffd4fed98efe9929cc4c02\\\",\\n  \\\"ffffd4fed98efe9929d95f0e993404\\\",\\n  \\\"ffffd4fee391fec44ffe9929d95f0e993404\\\",\\n  \\\"ffffd4fee391fec44ffe9929ec7014cc4c028c2d04\\\",\\n  \\\"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04\\\",\\n  \\\"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506\\\"\\n).map(colors);\\n\\nexport default ramp(scheme);\\n\",\"import colors from \\\"../colors\\\";\\nimport ramp from \\\"../ramp\\\";\\n\\nexport var scheme = new Array(3).concat(\\n  \\\"ffeda0feb24cf03b20\\\",\\n  \\\"ffffb2fecc5cfd8d3ce31a1c\\\",\\n  \\\"ffffb2fecc5cfd8d3cf03b20bd0026\\\",\\n  \\\"ffffb2fed976feb24cfd8d3cf03b20bd0026\\\",\\n  \\\"ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026\\\",\\n  \\\"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026\\\",\\n  \\\"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026\\\"\\n).map(colors);\\n\\nexport default ramp(scheme);\\n\",\"import colors from \\\"../colors\\\";\\nimport ramp from \\\"../ramp\\\";\\n\\nexport var scheme = new Array(3).concat(\\n  \\\"deebf79ecae13182bd\\\",\\n  \\\"eff3ffbdd7e76baed62171b5\\\",\\n  \\\"eff3ffbdd7e76baed63182bd08519c\\\",\\n  \\\"eff3ffc6dbef9ecae16baed63182bd08519c\\\",\\n  \\\"eff3ffc6dbef9ecae16baed64292c62171b5084594\\\",\\n  \\\"f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594\\\",\\n  \\\"f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b\\\"\\n).map(colors);\\n\\nexport default ramp(scheme);\\n\",\"import colors from \\\"../colors\\\";\\nimport ramp from \\\"../ramp\\\";\\n\\nexport var scheme = new Array(3).concat(\\n  \\\"e5f5e0a1d99b31a354\\\",\\n  \\\"edf8e9bae4b374c476238b45\\\",\\n  \\\"edf8e9bae4b374c47631a354006d2c\\\",\\n  \\\"edf8e9c7e9c0a1d99b74c47631a354006d2c\\\",\\n  \\\"edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32\\\",\\n  \\\"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32\\\",\\n  \\\"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b\\\"\\n).map(colors);\\n\\nexport default ramp(scheme);\\n\",\"import colors from \\\"../colors\\\";\\nimport ramp from \\\"../ramp\\\";\\n\\nexport var scheme = new Array(3).concat(\\n  \\\"f0f0f0bdbdbd636363\\\",\\n  \\\"f7f7f7cccccc969696525252\\\",\\n  \\\"f7f7f7cccccc969696636363252525\\\",\\n  \\\"f7f7f7d9d9d9bdbdbd969696636363252525\\\",\\n  \\\"f7f7f7d9d9d9bdbdbd969696737373525252252525\\\",\\n  \\\"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525\\\",\\n  \\\"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000\\\"\\n).map(colors);\\n\\nexport default ramp(scheme);\\n\",\"import colors from \\\"../colors\\\";\\nimport ramp from \\\"../ramp\\\";\\n\\nexport var scheme = new Array(3).concat(\\n  \\\"efedf5bcbddc756bb1\\\",\\n  \\\"f2f0f7cbc9e29e9ac86a51a3\\\",\\n  \\\"f2f0f7cbc9e29e9ac8756bb154278f\\\",\\n  \\\"f2f0f7dadaebbcbddc9e9ac8756bb154278f\\\",\\n  \\\"f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486\\\",\\n  \\\"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486\\\",\\n  \\\"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d\\\"\\n).map(colors);\\n\\nexport default ramp(scheme);\\n\",\"import colors from \\\"../colors\\\";\\nimport ramp from \\\"../ramp\\\";\\n\\nexport var scheme = new Array(3).concat(\\n  \\\"fee0d2fc9272de2d26\\\",\\n  \\\"fee5d9fcae91fb6a4acb181d\\\",\\n  \\\"fee5d9fcae91fb6a4ade2d26a50f15\\\",\\n  \\\"fee5d9fcbba1fc9272fb6a4ade2d26a50f15\\\",\\n  \\\"fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d\\\",\\n  \\\"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d\\\",\\n  \\\"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d\\\"\\n).map(colors);\\n\\nexport default ramp(scheme);\\n\",\"import colors from \\\"../colors\\\";\\nimport ramp from \\\"../ramp\\\";\\n\\nexport var scheme = new Array(3).concat(\\n  \\\"fee6cefdae6be6550d\\\",\\n  \\\"feeddefdbe85fd8d3cd94701\\\",\\n  \\\"feeddefdbe85fd8d3ce6550da63603\\\",\\n  \\\"feeddefdd0a2fdae6bfd8d3ce6550da63603\\\",\\n  \\\"feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04\\\",\\n  \\\"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04\\\",\\n  \\\"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704\\\"\\n).map(colors);\\n\\nexport default ramp(scheme);\\n\",\"import {cubehelix} from \\\"d3-color\\\";\\nimport {interpolateCubehelixLong} from \\\"d3-interpolate\\\";\\n\\nexport default interpolateCubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\\n\",\"import {cubehelix} from \\\"d3-color\\\";\\nimport {interpolateCubehelixLong} from \\\"d3-interpolate\\\";\\n\\nexport var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\\n\\nexport var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\\n\\nvar rainbow = cubehelix();\\n\\nexport default function(t) {\\n  if (t < 0 || t > 1) t -= Math.floor(t);\\n  var ts = Math.abs(t - 0.5);\\n  rainbow.h = 360 * t - 100;\\n  rainbow.s = 1.5 - 1.5 * ts;\\n  rainbow.l = 0.8 - 0.9 * ts;\\n  return rainbow + \\\"\\\";\\n}\\n\",\"import colors from \\\"../colors\\\";\\n\\nfunction ramp(range) {\\n  var n = range.length;\\n  return function(t) {\\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\\n  };\\n}\\n\\nexport default ramp(colors(\\\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\\\"));\\n\\nexport var magma = ramp(colors(\\\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\\\"));\\n\\nexport var inferno = ramp(colors(\\\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\\\"));\\n\\nexport var plasma = ramp(colors(\\\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\\\"));\\n\",\"export default function(x) {\\n  return function constant() {\\n    return x;\\n  };\\n}\\n\",\"export var abs = Math.abs;\\nexport var atan2 = Math.atan2;\\nexport var cos = Math.cos;\\nexport var max = Math.max;\\nexport var min = Math.min;\\nexport var sin = Math.sin;\\nexport var sqrt = Math.sqrt;\\n\\nexport var epsilon = 1e-12;\\nexport var pi = Math.PI;\\nexport var halfPi = pi / 2;\\nexport var tau = 2 * pi;\\n\\nexport function acos(x) {\\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\\n}\\n\\nexport function asin(x) {\\n  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);\\n}\\n\",\"import {path} from \\\"d3-path\\\";\\nimport constant from \\\"./constant\\\";\\nimport {abs, acos, asin, atan2, cos, epsilon, halfPi, max, min, pi, sin, sqrt, tau} from \\\"./math\\\";\\n\\nfunction arcInnerRadius(d) {\\n  return d.innerRadius;\\n}\\n\\nfunction arcOuterRadius(d) {\\n  return d.outerRadius;\\n}\\n\\nfunction arcStartAngle(d) {\\n  return d.startAngle;\\n}\\n\\nfunction arcEndAngle(d) {\\n  return d.endAngle;\\n}\\n\\nfunction arcPadAngle(d) {\\n  return d && d.padAngle; // Note: optional!\\n}\\n\\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\\n  var x10 = x1 - x0, y10 = y1 - y0,\\n      x32 = x3 - x2, y32 = y3 - y2,\\n      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\\n  return [x0 + t * x10, y0 + t * y10];\\n}\\n\\n// Compute perpendicular offset line of length rc.\\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\\n  var x01 = x0 - x1,\\n      y01 = y0 - y1,\\n      lo = (cw ? rc : -rc) / sqrt(x01 * x01 + y01 * y01),\\n      ox = lo * y01,\\n      oy = -lo * x01,\\n      x11 = x0 + ox,\\n      y11 = y0 + oy,\\n      x10 = x1 + ox,\\n      y10 = y1 + oy,\\n      x00 = (x11 + x10) / 2,\\n      y00 = (y11 + y10) / 2,\\n      dx = x10 - x11,\\n      dy = y10 - y11,\\n      d2 = dx * dx + dy * dy,\\n      r = r1 - rc,\\n      D = x11 * y10 - x10 * y11,\\n      d = (dy < 0 ? -1 : 1) * sqrt(max(0, r * r * d2 - D * D)),\\n      cx0 = (D * dy - dx * d) / d2,\\n      cy0 = (-D * dx - dy * d) / d2,\\n      cx1 = (D * dy + dx * d) / d2,\\n      cy1 = (-D * dx + dy * d) / d2,\\n      dx0 = cx0 - x00,\\n      dy0 = cy0 - y00,\\n      dx1 = cx1 - x00,\\n      dy1 = cy1 - y00;\\n\\n  // Pick the closer of the two intersection points.\\n  // TODO Is there a faster way to determine which intersection to use?\\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\\n\\n  return {\\n    cx: cx0,\\n    cy: cy0,\\n    x01: -ox,\\n    y01: -oy,\\n    x11: cx0 * (r1 / r - 1),\\n    y11: cy0 * (r1 / r - 1)\\n  };\\n}\\n\\nexport default function() {\\n  var innerRadius = arcInnerRadius,\\n      outerRadius = arcOuterRadius,\\n      cornerRadius = constant(0),\\n      padRadius = null,\\n      startAngle = arcStartAngle,\\n      endAngle = arcEndAngle,\\n      padAngle = arcPadAngle,\\n      context = null;\\n\\n  function arc() {\\n    var buffer,\\n        r,\\n        r0 = +innerRadius.apply(this, arguments),\\n        r1 = +outerRadius.apply(this, arguments),\\n        a0 = startAngle.apply(this, arguments) - halfPi,\\n        a1 = endAngle.apply(this, arguments) - halfPi,\\n        da = abs(a1 - a0),\\n        cw = a1 > a0;\\n\\n    if (!context) context = buffer = path();\\n\\n    // Ensure that the outer radius is always larger than the inner radius.\\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\\n\\n    // Is it a point?\\n    if (!(r1 > epsilon)) context.moveTo(0, 0);\\n\\n    // Or is it a circle or annulus?\\n    else if (da > tau - epsilon) {\\n      context.moveTo(r1 * cos(a0), r1 * sin(a0));\\n      context.arc(0, 0, r1, a0, a1, !cw);\\n      if (r0 > epsilon) {\\n        context.moveTo(r0 * cos(a1), r0 * sin(a1));\\n        context.arc(0, 0, r0, a1, a0, cw);\\n      }\\n    }\\n\\n    // Or is it a circular or annular sector?\\n    else {\\n      var a01 = a0,\\n          a11 = a1,\\n          a00 = a0,\\n          a10 = a1,\\n          da0 = da,\\n          da1 = da,\\n          ap = padAngle.apply(this, arguments) / 2,\\n          rp = (ap > epsilon) && (padRadius ? +padRadius.apply(this, arguments) : sqrt(r0 * r0 + r1 * r1)),\\n          rc = min(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\\n          rc0 = rc,\\n          rc1 = rc,\\n          t0,\\n          t1;\\n\\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\\n      if (rp > epsilon) {\\n        var p0 = asin(rp / r0 * sin(ap)),\\n            p1 = asin(rp / r1 * sin(ap));\\n        if ((da0 -= p0 * 2) > epsilon) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\\n        if ((da1 -= p1 * 2) > epsilon) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\\n      }\\n\\n      var x01 = r1 * cos(a01),\\n          y01 = r1 * sin(a01),\\n          x10 = r0 * cos(a10),\\n          y10 = r0 * sin(a10);\\n\\n      // Apply rounded corners?\\n      if (rc > epsilon) {\\n        var x11 = r1 * cos(a11),\\n            y11 = r1 * sin(a11),\\n            x00 = r0 * cos(a00),\\n            y00 = r0 * sin(a00);\\n\\n        // Restrict the corner radius according to the sector angle.\\n        if (da < pi) {\\n          var oc = da0 > epsilon ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\\n              ax = x01 - oc[0],\\n              ay = y01 - oc[1],\\n              bx = x11 - oc[0],\\n              by = y11 - oc[1],\\n              kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt(ax * ax + ay * ay) * sqrt(bx * bx + by * by))) / 2),\\n              lc = sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\\n          rc0 = min(rc, (r0 - lc) / (kc - 1));\\n          rc1 = min(rc, (r1 - lc) / (kc + 1));\\n        }\\n      }\\n\\n      // Is the sector collapsed to a line?\\n      if (!(da1 > epsilon)) context.moveTo(x01, y01);\\n\\n      // Does the sector’s outer ring have rounded corners?\\n      else if (rc1 > epsilon) {\\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\\n\\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\\n\\n        // Have the corners merged?\\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\\n\\n        // Otherwise, draw the two corners and the ring.\\n        else {\\n          context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\\n          context.arc(0, 0, r1, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\\n          context.arc(t1.cx, t1.cy, rc1, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\\n        }\\n      }\\n\\n      // Or is the outer ring just a circular arc?\\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\\n\\n      // Is there no inner ring, and it’s a circular sector?\\n      // Or perhaps it’s an annular sector collapsed due to padding?\\n      if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10);\\n\\n      // Does the sector’s inner ring (or point) have rounded corners?\\n      else if (rc0 > epsilon) {\\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\\n\\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\\n\\n        // Have the corners merged?\\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\\n\\n        // Otherwise, draw the two corners and the ring.\\n        else {\\n          context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\\n          context.arc(0, 0, r0, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\\n          context.arc(t1.cx, t1.cy, rc0, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\\n        }\\n      }\\n\\n      // Or is the inner ring just a circular arc?\\n      else context.arc(0, 0, r0, a10, a00, cw);\\n    }\\n\\n    context.closePath();\\n\\n    if (buffer) return context = null, buffer + \\\"\\\" || null;\\n  }\\n\\n  arc.centroid = function() {\\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;\\n    return [cos(a) * r, sin(a) * r];\\n  };\\n\\n  arc.innerRadius = function(_) {\\n    return arguments.length ? (innerRadius = typeof _ === \\\"function\\\" ? _ : constant(+_), arc) : innerRadius;\\n  };\\n\\n  arc.outerRadius = function(_) {\\n    return arguments.length ? (outerRadius = typeof _ === \\\"function\\\" ? _ : constant(+_), arc) : outerRadius;\\n  };\\n\\n  arc.cornerRadius = function(_) {\\n    return arguments.length ? (cornerRadius = typeof _ === \\\"function\\\" ? _ : constant(+_), arc) : cornerRadius;\\n  };\\n\\n  arc.padRadius = function(_) {\\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \\\"function\\\" ? _ : constant(+_), arc) : padRadius;\\n  };\\n\\n  arc.startAngle = function(_) {\\n    return arguments.length ? (startAngle = typeof _ === \\\"function\\\" ? _ : constant(+_), arc) : startAngle;\\n  };\\n\\n  arc.endAngle = function(_) {\\n    return arguments.length ? (endAngle = typeof _ === \\\"function\\\" ? _ : constant(+_), arc) : endAngle;\\n  };\\n\\n  arc.padAngle = function(_) {\\n    return arguments.length ? (padAngle = typeof _ === \\\"function\\\" ? _ : constant(+_), arc) : padAngle;\\n  };\\n\\n  arc.context = function(_) {\\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\\n  };\\n\\n  return arc;\\n}\\n\",\"function Linear(context) {\\n  this._context = context;\\n}\\n\\nLinear.prototype = {\\n  areaStart: function() {\\n    this._line = 0;\\n  },\\n  areaEnd: function() {\\n    this._line = NaN;\\n  },\\n  lineStart: function() {\\n    this._point = 0;\\n  },\\n  lineEnd: function() {\\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\\n    this._line = 1 - this._line;\\n  },\\n  point: function(x, y) {\\n    x = +x, y = +y;\\n    switch (this._point) {\\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\\n      case 1: this._point = 2; // proceed\\n      default: this._context.lineTo(x, y); break;\\n    }\\n  }\\n};\\n\\nexport default function(context) {\\n  return new Linear(context);\\n}\\n\",\"export function x(p) {\\n  return p[0];\\n}\\n\\nexport function y(p) {\\n  return p[1];\\n}\\n\",\"import {path} from \\\"d3-path\\\";\\nimport constant from \\\"./constant\\\";\\nimport curveLinear from \\\"./curve/linear\\\";\\nimport {x as pointX, y as pointY} from \\\"./point\\\";\\n\\nexport default function() {\\n  var x = pointX,\\n      y = pointY,\\n      defined = constant(true),\\n      context = null,\\n      curve = curveLinear,\\n      output = null;\\n\\n  function line(data) {\\n    var i,\\n        n = data.length,\\n        d,\\n        defined0 = false,\\n        buffer;\\n\\n    if (context == null) output = curve(buffer = path());\\n\\n    for (i = 0; i <= n; ++i) {\\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\\n        if (defined0 = !defined0) output.lineStart();\\n        else output.lineEnd();\\n      }\\n      if (defined0) output.point(+x(d, i, data), +y(d, i, data));\\n    }\\n\\n    if (buffer) return output = null, buffer + \\\"\\\" || null;\\n  }\\n\\n  line.x = function(_) {\\n    return arguments.length ? (x = typeof _ === \\\"function\\\" ? _ : constant(+_), line) : x;\\n  };\\n\\n  line.y = function(_) {\\n    return arguments.length ? (y = typeof _ === \\\"function\\\" ? _ : constant(+_), line) : y;\\n  };\\n\\n  line.defined = function(_) {\\n    return arguments.length ? (defined = typeof _ === \\\"function\\\" ? _ : constant(!!_), line) : defined;\\n  };\\n\\n  line.curve = function(_) {\\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\\n  };\\n\\n  line.context = function(_) {\\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\\n  };\\n\\n  return line;\\n}\\n\",\"import {path} from \\\"d3-path\\\";\\nimport constant from \\\"./constant\\\";\\nimport curveLinear from \\\"./curve/linear\\\";\\nimport line from \\\"./line\\\";\\nimport {x as pointX, y as pointY} from \\\"./point\\\";\\n\\nexport default function() {\\n  var x0 = pointX,\\n      x1 = null,\\n      y0 = constant(0),\\n      y1 = pointY,\\n      defined = constant(true),\\n      context = null,\\n      curve = curveLinear,\\n      output = null;\\n\\n  function area(data) {\\n    var i,\\n        j,\\n        k,\\n        n = data.length,\\n        d,\\n        defined0 = false,\\n        buffer,\\n        x0z = new Array(n),\\n        y0z = new Array(n);\\n\\n    if (context == null) output = curve(buffer = path());\\n\\n    for (i = 0; i <= n; ++i) {\\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\\n        if (defined0 = !defined0) {\\n          j = i;\\n          output.areaStart();\\n          output.lineStart();\\n        } else {\\n          output.lineEnd();\\n          output.lineStart();\\n          for (k = i - 1; k >= j; --k) {\\n            output.point(x0z[k], y0z[k]);\\n          }\\n          output.lineEnd();\\n          output.areaEnd();\\n        }\\n      }\\n      if (defined0) {\\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\\n      }\\n    }\\n\\n    if (buffer) return output = null, buffer + \\\"\\\" || null;\\n  }\\n\\n  function arealine() {\\n    return line().defined(defined).curve(curve).context(context);\\n  }\\n\\n  area.x = function(_) {\\n    return arguments.length ? (x0 = typeof _ === \\\"function\\\" ? _ : constant(+_), x1 = null, area) : x0;\\n  };\\n\\n  area.x0 = function(_) {\\n    return arguments.length ? (x0 = typeof _ === \\\"function\\\" ? _ : constant(+_), area) : x0;\\n  };\\n\\n  area.x1 = function(_) {\\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \\\"function\\\" ? _ : constant(+_), area) : x1;\\n  };\\n\\n  area.y = function(_) {\\n    return arguments.length ? (y0 = typeof _ === \\\"function\\\" ? _ : constant(+_), y1 = null, area) : y0;\\n  };\\n\\n  area.y0 = function(_) {\\n    return arguments.length ? (y0 = typeof _ === \\\"function\\\" ? _ : constant(+_), area) : y0;\\n  };\\n\\n  area.y1 = function(_) {\\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \\\"function\\\" ? _ : constant(+_), area) : y1;\\n  };\\n\\n  area.lineX0 =\\n  area.lineY0 = function() {\\n    return arealine().x(x0).y(y0);\\n  };\\n\\n  area.lineY1 = function() {\\n    return arealine().x(x0).y(y1);\\n  };\\n\\n  area.lineX1 = function() {\\n    return arealine().x(x1).y(y0);\\n  };\\n\\n  area.defined = function(_) {\\n    return arguments.length ? (defined = typeof _ === \\\"function\\\" ? _ : constant(!!_), area) : defined;\\n  };\\n\\n  area.curve = function(_) {\\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\\n  };\\n\\n  area.context = function(_) {\\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\\n  };\\n\\n  return area;\\n}\\n\",\"export default function(a, b) {\\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\\n}\\n\",\"export default function(d) {\\n  return d;\\n}\\n\",\"import constant from \\\"./constant\\\";\\nimport descending from \\\"./descending\\\";\\nimport identity from \\\"./identity\\\";\\nimport {tau} from \\\"./math\\\";\\n\\nexport default function() {\\n  var value = identity,\\n      sortValues = descending,\\n      sort = null,\\n      startAngle = constant(0),\\n      endAngle = constant(tau),\\n      padAngle = constant(0);\\n\\n  function pie(data) {\\n    var i,\\n        n = data.length,\\n        j,\\n        k,\\n        sum = 0,\\n        index = new Array(n),\\n        arcs = new Array(n),\\n        a0 = +startAngle.apply(this, arguments),\\n        da = Math.min(tau, Math.max(-tau, endAngle.apply(this, arguments) - a0)),\\n        a1,\\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\\n        pa = p * (da < 0 ? -1 : 1),\\n        v;\\n\\n    for (i = 0; i < n; ++i) {\\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\\n        sum += v;\\n      }\\n    }\\n\\n    // Optionally sort the arcs by previously-computed values or by data.\\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\\n\\n    // Compute the arcs! They are stored in the original data's order.\\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\\n        data: data[j],\\n        index: i,\\n        value: v,\\n        startAngle: a0,\\n        endAngle: a1,\\n        padAngle: p\\n      };\\n    }\\n\\n    return arcs;\\n  }\\n\\n  pie.value = function(_) {\\n    return arguments.length ? (value = typeof _ === \\\"function\\\" ? _ : constant(+_), pie) : value;\\n  };\\n\\n  pie.sortValues = function(_) {\\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\\n  };\\n\\n  pie.sort = function(_) {\\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\\n  };\\n\\n  pie.startAngle = function(_) {\\n    return arguments.length ? (startAngle = typeof _ === \\\"function\\\" ? _ : constant(+_), pie) : startAngle;\\n  };\\n\\n  pie.endAngle = function(_) {\\n    return arguments.length ? (endAngle = typeof _ === \\\"function\\\" ? _ : constant(+_), pie) : endAngle;\\n  };\\n\\n  pie.padAngle = function(_) {\\n    return arguments.length ? (padAngle = typeof _ === \\\"function\\\" ? _ : constant(+_), pie) : padAngle;\\n  };\\n\\n  return pie;\\n}\\n\",\"import curveLinear from \\\"./linear\\\";\\n\\nexport var curveRadialLinear = curveRadial(curveLinear);\\n\\nfunction Radial(curve) {\\n  this._curve = curve;\\n}\\n\\nRadial.prototype = {\\n  areaStart: function() {\\n    this._curve.areaStart();\\n  },\\n  areaEnd: function() {\\n    this._curve.areaEnd();\\n  },\\n  lineStart: function() {\\n    this._curve.lineStart();\\n  },\\n  lineEnd: function() {\\n    this._curve.lineEnd();\\n  },\\n  point: function(a, r) {\\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\\n  }\\n};\\n\\nexport default function curveRadial(curve) {\\n\\n  function radial(context) {\\n    return new Radial(curve(context));\\n  }\\n\\n  radial._curve = curve;\\n\\n  return radial;\\n}\\n\",\"import curveRadial, {curveRadialLinear} from \\\"./curve/radial\\\";\\nimport line from \\\"./line\\\";\\n\\nexport function lineRadial(l) {\\n  var c = l.curve;\\n\\n  l.angle = l.x, delete l.x;\\n  l.radius = l.y, delete l.y;\\n\\n  l.curve = function(_) {\\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\\n  };\\n\\n  return l;\\n}\\n\\nexport default function() {\\n  return lineRadial(line().curve(curveRadialLinear));\\n}\\n\",\"import curveRadial, {curveRadialLinear} from \\\"./curve/radial\\\";\\nimport area from \\\"./area\\\";\\nimport {lineRadial} from \\\"./lineRadial\\\"\\n\\nexport default function() {\\n  var a = area().curve(curveRadialLinear),\\n      c = a.curve,\\n      x0 = a.lineX0,\\n      x1 = a.lineX1,\\n      y0 = a.lineY0,\\n      y1 = a.lineY1;\\n\\n  a.angle = a.x, delete a.x;\\n  a.startAngle = a.x0, delete a.x0;\\n  a.endAngle = a.x1, delete a.x1;\\n  a.radius = a.y, delete a.y;\\n  a.innerRadius = a.y0, delete a.y0;\\n  a.outerRadius = a.y1, delete a.y1;\\n  a.lineStartAngle = function() { return lineRadial(x0()); }, delete a.lineX0;\\n  a.lineEndAngle = function() { return lineRadial(x1()); }, delete a.lineX1;\\n  a.lineInnerRadius = function() { return lineRadial(y0()); }, delete a.lineY0;\\n  a.lineOuterRadius = function() { return lineRadial(y1()); }, delete a.lineY1;\\n\\n  a.curve = function(_) {\\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\\n  };\\n\\n  return a;\\n}\\n\",\"export default function(x, y) {\\n  return [(y = +y) * Math.cos(x -= Math.PI / 2), y * Math.sin(x)];\\n}\\n\",\"export var slice = Array.prototype.slice;\\n\",\"import {path} from \\\"d3-path\\\";\\nimport {slice} from \\\"../array\\\";\\nimport constant from \\\"../constant\\\";\\nimport {x as pointX, y as pointY} from \\\"../point\\\";\\nimport pointRadial from \\\"../pointRadial\\\";\\n\\nfunction linkSource(d) {\\n  return d.source;\\n}\\n\\nfunction linkTarget(d) {\\n  return d.target;\\n}\\n\\nfunction link(curve) {\\n  var source = linkSource,\\n      target = linkTarget,\\n      x = pointX,\\n      y = pointY,\\n      context = null;\\n\\n  function link() {\\n    var buffer, argv = slice.call(arguments), s = source.apply(this, argv), t = target.apply(this, argv);\\n    if (!context) context = buffer = path();\\n    curve(context, +x.apply(this, (argv[0] = s, argv)), +y.apply(this, argv), +x.apply(this, (argv[0] = t, argv)), +y.apply(this, argv));\\n    if (buffer) return context = null, buffer + \\\"\\\" || null;\\n  }\\n\\n  link.source = function(_) {\\n    return arguments.length ? (source = _, link) : source;\\n  };\\n\\n  link.target = function(_) {\\n    return arguments.length ? (target = _, link) : target;\\n  };\\n\\n  link.x = function(_) {\\n    return arguments.length ? (x = typeof _ === \\\"function\\\" ? _ : constant(+_), link) : x;\\n  };\\n\\n  link.y = function(_) {\\n    return arguments.length ? (y = typeof _ === \\\"function\\\" ? _ : constant(+_), link) : y;\\n  };\\n\\n  link.context = function(_) {\\n    return arguments.length ? ((context = _ == null ? null : _), link) : context;\\n  };\\n\\n  return link;\\n}\\n\\nfunction curveHorizontal(context, x0, y0, x1, y1) {\\n  context.moveTo(x0, y0);\\n  context.bezierCurveTo(x0 = (x0 + x1) / 2, y0, x0, y1, x1, y1);\\n}\\n\\nfunction curveVertical(context, x0, y0, x1, y1) {\\n  context.moveTo(x0, y0);\\n  context.bezierCurveTo(x0, y0 = (y0 + y1) / 2, x1, y0, x1, y1);\\n}\\n\\nfunction curveRadial(context, x0, y0, x1, y1) {\\n  var p0 = pointRadial(x0, y0),\\n      p1 = pointRadial(x0, y0 = (y0 + y1) / 2),\\n      p2 = pointRadial(x1, y0),\\n      p3 = pointRadial(x1, y1);\\n  context.moveTo(p0[0], p0[1]);\\n  context.bezierCurveTo(p1[0], p1[1], p2[0], p2[1], p3[0], p3[1]);\\n}\\n\\nexport function linkHorizontal() {\\n  return link(curveHorizontal);\\n}\\n\\nexport function linkVertical() {\\n  return link(curveVertical);\\n}\\n\\nexport function linkRadial() {\\n  var l = link(curveRadial);\\n  l.angle = l.x, delete l.x;\\n  l.radius = l.y, delete l.y;\\n  return l;\\n}\\n\",\"import {pi, tau} from \\\"../math\\\";\\n\\nexport default {\\n  draw: function(context, size) {\\n    var r = Math.sqrt(size / pi);\\n    context.moveTo(r, 0);\\n    context.arc(0, 0, r, 0, tau);\\n  }\\n};\\n\",\"export default {\\n  draw: function(context, size) {\\n    var r = Math.sqrt(size / 5) / 2;\\n    context.moveTo(-3 * r, -r);\\n    context.lineTo(-r, -r);\\n    context.lineTo(-r, -3 * r);\\n    context.lineTo(r, -3 * r);\\n    context.lineTo(r, -r);\\n    context.lineTo(3 * r, -r);\\n    context.lineTo(3 * r, r);\\n    context.lineTo(r, r);\\n    context.lineTo(r, 3 * r);\\n    context.lineTo(-r, 3 * r);\\n    context.lineTo(-r, r);\\n    context.lineTo(-3 * r, r);\\n    context.closePath();\\n  }\\n};\\n\",\"var tan30 = Math.sqrt(1 / 3),\\n    tan30_2 = tan30 * 2;\\n\\nexport default {\\n  draw: function(context, size) {\\n    var y = Math.sqrt(size / tan30_2),\\n        x = y * tan30;\\n    context.moveTo(0, -y);\\n    context.lineTo(x, 0);\\n    context.lineTo(0, y);\\n    context.lineTo(-x, 0);\\n    context.closePath();\\n  }\\n};\\n\",\"import {pi, tau} from \\\"../math\\\";\\n\\nvar ka = 0.89081309152928522810,\\n    kr = Math.sin(pi / 10) / Math.sin(7 * pi / 10),\\n    kx = Math.sin(tau / 10) * kr,\\n    ky = -Math.cos(tau / 10) * kr;\\n\\nexport default {\\n  draw: function(context, size) {\\n    var r = Math.sqrt(size * ka),\\n        x = kx * r,\\n        y = ky * r;\\n    context.moveTo(0, -r);\\n    context.lineTo(x, y);\\n    for (var i = 1; i < 5; ++i) {\\n      var a = tau * i / 5,\\n          c = Math.cos(a),\\n          s = Math.sin(a);\\n      context.lineTo(s * r, -c * r);\\n      context.lineTo(c * x - s * y, s * x + c * y);\\n    }\\n    context.closePath();\\n  }\\n};\\n\",\"export default {\\n  draw: function(context, size) {\\n    var w = Math.sqrt(size),\\n        x = -w / 2;\\n    context.rect(x, x, w, w);\\n  }\\n};\\n\",\"var sqrt3 = Math.sqrt(3);\\n\\nexport default {\\n  draw: function(context, size) {\\n    var y = -Math.sqrt(size / (sqrt3 * 3));\\n    context.moveTo(0, y * 2);\\n    context.lineTo(-sqrt3 * y, -y);\\n    context.lineTo(sqrt3 * y, -y);\\n    context.closePath();\\n  }\\n};\\n\",\"var c = -0.5,\\n    s = Math.sqrt(3) / 2,\\n    k = 1 / Math.sqrt(12),\\n    a = (k / 2 + 1) * 3;\\n\\nexport default {\\n  draw: function(context, size) {\\n    var r = Math.sqrt(size / a),\\n        x0 = r / 2,\\n        y0 = r * k,\\n        x1 = x0,\\n        y1 = r * k + r,\\n        x2 = -x1,\\n        y2 = y1;\\n    context.moveTo(x0, y0);\\n    context.lineTo(x1, y1);\\n    context.lineTo(x2, y2);\\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\\n    context.closePath();\\n  }\\n};\\n\",\"import {path} from \\\"d3-path\\\";\\nimport circle from \\\"./symbol/circle\\\";\\nimport cross from \\\"./symbol/cross\\\";\\nimport diamond from \\\"./symbol/diamond\\\";\\nimport star from \\\"./symbol/star\\\";\\nimport square from \\\"./symbol/square\\\";\\nimport triangle from \\\"./symbol/triangle\\\";\\nimport wye from \\\"./symbol/wye\\\";\\nimport constant from \\\"./constant\\\";\\n\\nexport var symbols = [\\n  circle,\\n  cross,\\n  diamond,\\n  square,\\n  star,\\n  triangle,\\n  wye\\n];\\n\\nexport default function() {\\n  var type = constant(circle),\\n      size = constant(64),\\n      context = null;\\n\\n  function symbol() {\\n    var buffer;\\n    if (!context) context = buffer = path();\\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\\n    if (buffer) return context = null, buffer + \\\"\\\" || null;\\n  }\\n\\n  symbol.type = function(_) {\\n    return arguments.length ? (type = typeof _ === \\\"function\\\" ? _ : constant(_), symbol) : type;\\n  };\\n\\n  symbol.size = function(_) {\\n    return arguments.length ? (size = typeof _ === \\\"function\\\" ? _ : constant(+_), symbol) : size;\\n  };\\n\\n  symbol.context = function(_) {\\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\\n  };\\n\\n  return symbol;\\n}\\n\",\"export default function() {}\\n\",\"export function point(that, x, y) {\\n  that._context.bezierCurveTo(\\n    (2 * that._x0 + that._x1) / 3,\\n    (2 * that._y0 + that._y1) / 3,\\n    (that._x0 + 2 * that._x1) / 3,\\n    (that._y0 + 2 * that._y1) / 3,\\n    (that._x0 + 4 * that._x1 + x) / 6,\\n    (that._y0 + 4 * that._y1 + y) / 6\\n  );\\n}\\n\\nexport function Basis(context) {\\n  this._context = context;\\n}\\n\\nBasis.prototype = {\\n  areaStart: function() {\\n    this._line = 0;\\n  },\\n  areaEnd: function() {\\n    this._line = NaN;\\n  },\\n  lineStart: function() {\\n    this._x0 = this._x1 =\\n    this._y0 = this._y1 = NaN;\\n    this._point = 0;\\n  },\\n  lineEnd: function() {\\n    switch (this._point) {\\n      case 3: point(this, this._x1, this._y1); // proceed\\n      case 2: this._context.lineTo(this._x1, this._y1); break;\\n    }\\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\\n    this._line = 1 - this._line;\\n  },\\n  point: function(x, y) {\\n    x = +x, y = +y;\\n    switch (this._point) {\\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\\n      case 1: this._point = 2; break;\\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\\n      default: point(this, x, y); break;\\n    }\\n    this._x0 = this._x1, this._x1 = x;\\n    this._y0 = this._y1, this._y1 = y;\\n  }\\n};\\n\\nexport default function(context) {\\n  return new Basis(context);\\n}\\n\",\"import noop from \\\"../noop\\\";\\nimport {point} from \\\"./basis\\\";\\n\\nfunction BasisClosed(context) {\\n  this._context = context;\\n}\\n\\nBasisClosed.prototype = {\\n  areaStart: noop,\\n  areaEnd: noop,\\n  lineStart: function() {\\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\\n    this._point = 0;\\n  },\\n  lineEnd: function() {\\n    switch (this._point) {\\n      case 1: {\\n        this._context.moveTo(this._x2, this._y2);\\n        this._context.closePath();\\n        break;\\n      }\\n      case 2: {\\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\\n        this._context.closePath();\\n        break;\\n      }\\n      case 3: {\\n        this.point(this._x2, this._y2);\\n        this.point(this._x3, this._y3);\\n        this.point(this._x4, this._y4);\\n        break;\\n      }\\n    }\\n  },\\n  point: function(x, y) {\\n    x = +x, y = +y;\\n    switch (this._point) {\\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\\n      default: point(this, x, y); break;\\n    }\\n    this._x0 = this._x1, this._x1 = x;\\n    this._y0 = this._y1, this._y1 = y;\\n  }\\n};\\n\\nexport default function(context) {\\n  return new BasisClosed(context);\\n}\\n\",\"import {point} from \\\"./basis\\\";\\n\\nfunction BasisOpen(context) {\\n  this._context = context;\\n}\\n\\nBasisOpen.prototype = {\\n  areaStart: function() {\\n    this._line = 0;\\n  },\\n  areaEnd: function() {\\n    this._line = NaN;\\n  },\\n  lineStart: function() {\\n    this._x0 = this._x1 =\\n    this._y0 = this._y1 = NaN;\\n    this._point = 0;\\n  },\\n  lineEnd: function() {\\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\\n    this._line = 1 - this._line;\\n  },\\n  point: function(x, y) {\\n    x = +x, y = +y;\\n    switch (this._point) {\\n      case 0: this._point = 1; break;\\n      case 1: this._point = 2; break;\\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\\n      case 3: this._point = 4; // proceed\\n      default: point(this, x, y); break;\\n    }\\n    this._x0 = this._x1, this._x1 = x;\\n    this._y0 = this._y1, this._y1 = y;\\n  }\\n};\\n\\nexport default function(context) {\\n  return new BasisOpen(context);\\n}\\n\",\"import {Basis} from \\\"./basis\\\";\\n\\nfunction Bundle(context, beta) {\\n  this._basis = new Basis(context);\\n  this._beta = beta;\\n}\\n\\nBundle.prototype = {\\n  lineStart: function() {\\n    this._x = [];\\n    this._y = [];\\n    this._basis.lineStart();\\n  },\\n  lineEnd: function() {\\n    var x = this._x,\\n        y = this._y,\\n        j = x.length - 1;\\n\\n    if (j > 0) {\\n      var x0 = x[0],\\n          y0 = y[0],\\n          dx = x[j] - x0,\\n          dy = y[j] - y0,\\n          i = -1,\\n          t;\\n\\n      while (++i <= j) {\\n        t = i / j;\\n        this._basis.point(\\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\\n        );\\n      }\\n    }\\n\\n    this._x = this._y = null;\\n    this._basis.lineEnd();\\n  },\\n  point: function(x, y) {\\n    this._x.push(+x);\\n    this._y.push(+y);\\n  }\\n};\\n\\nexport default (function custom(beta) {\\n\\n  function bundle(context) {\\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\\n  }\\n\\n  bundle.beta = function(beta) {\\n    return custom(+beta);\\n  };\\n\\n  return bundle;\\n})(0.85);\\n\",\"export function point(that, x, y) {\\n  that._context.bezierCurveTo(\\n    that._x1 + that._k * (that._x2 - that._x0),\\n    that._y1 + that._k * (that._y2 - that._y0),\\n    that._x2 + that._k * (that._x1 - x),\\n    that._y2 + that._k * (that._y1 - y),\\n    that._x2,\\n    that._y2\\n  );\\n}\\n\\nexport function Cardinal(context, tension) {\\n  this._context = context;\\n  this._k = (1 - tension) / 6;\\n}\\n\\nCardinal.prototype = {\\n  areaStart: function() {\\n    this._line = 0;\\n  },\\n  areaEnd: function() {\\n    this._line = NaN;\\n  },\\n  lineStart: function() {\\n    this._x0 = this._x1 = this._x2 =\\n    this._y0 = this._y1 = this._y2 = NaN;\\n    this._point = 0;\\n  },\\n  lineEnd: function() {\\n    switch (this._point) {\\n      case 2: this._context.lineTo(this._x2, this._y2); break;\\n      case 3: point(this, this._x1, this._y1); break;\\n    }\\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\\n    this._line = 1 - this._line;\\n  },\\n  point: function(x, y) {\\n    x = +x, y = +y;\\n    switch (this._point) {\\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\\n      case 2: this._point = 3; // proceed\\n      default: point(this, x, y); break;\\n    }\\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\\n  }\\n};\\n\\nexport default (function custom(tension) {\\n\\n  function cardinal(context) {\\n    return new Cardinal(context, tension);\\n  }\\n\\n  cardinal.tension = function(tension) {\\n    return custom(+tension);\\n  };\\n\\n  return cardinal;\\n})(0);\\n\",\"import noop from \\\"../noop\\\";\\nimport {point} from \\\"./cardinal\\\";\\n\\nexport function CardinalClosed(context, tension) {\\n  this._context = context;\\n  this._k = (1 - tension) / 6;\\n}\\n\\nCardinalClosed.prototype = {\\n  areaStart: noop,\\n  areaEnd: noop,\\n  lineStart: function() {\\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\\n    this._point = 0;\\n  },\\n  lineEnd: function() {\\n    switch (this._point) {\\n      case 1: {\\n        this._context.moveTo(this._x3, this._y3);\\n        this._context.closePath();\\n        break;\\n      }\\n      case 2: {\\n        this._context.lineTo(this._x3, this._y3);\\n        this._context.closePath();\\n        break;\\n      }\\n      case 3: {\\n        this.point(this._x3, this._y3);\\n        this.point(this._x4, this._y4);\\n        this.point(this._x5, this._y5);\\n        break;\\n      }\\n    }\\n  },\\n  point: function(x, y) {\\n    x = +x, y = +y;\\n    switch (this._point) {\\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\\n      default: point(this, x, y); break;\\n    }\\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\\n  }\\n};\\n\\nexport default (function custom(tension) {\\n\\n  function cardinal(context) {\\n    return new CardinalClosed(context, tension);\\n  }\\n\\n  cardinal.tension = function(tension) {\\n    return custom(+tension);\\n  };\\n\\n  return cardinal;\\n})(0);\\n\",\"import {point} from \\\"./cardinal\\\";\\n\\nexport function CardinalOpen(context, tension) {\\n  this._context = context;\\n  this._k = (1 - tension) / 6;\\n}\\n\\nCardinalOpen.prototype = {\\n  areaStart: function() {\\n    this._line = 0;\\n  },\\n  areaEnd: function() {\\n    this._line = NaN;\\n  },\\n  lineStart: function() {\\n    this._x0 = this._x1 = this._x2 =\\n    this._y0 = this._y1 = this._y2 = NaN;\\n    this._point = 0;\\n  },\\n  lineEnd: function() {\\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\\n    this._line = 1 - this._line;\\n  },\\n  point: function(x, y) {\\n    x = +x, y = +y;\\n    switch (this._point) {\\n      case 0: this._point = 1; break;\\n      case 1: this._point = 2; break;\\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\\n      case 3: this._point = 4; // proceed\\n      default: point(this, x, y); break;\\n    }\\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\\n  }\\n};\\n\\nexport default (function custom(tension) {\\n\\n  function cardinal(context) {\\n    return new CardinalOpen(context, tension);\\n  }\\n\\n  cardinal.tension = function(tension) {\\n    return custom(+tension);\\n  };\\n\\n  return cardinal;\\n})(0);\\n\",\"import {epsilon} from \\\"../math\\\";\\nimport {Cardinal} from \\\"./cardinal\\\";\\n\\nexport function point(that, x, y) {\\n  var x1 = that._x1,\\n      y1 = that._y1,\\n      x2 = that._x2,\\n      y2 = that._y2;\\n\\n  if (that._l01_a > epsilon) {\\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\\n  }\\n\\n  if (that._l23_a > epsilon) {\\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\\n  }\\n\\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\\n}\\n\\nfunction CatmullRom(context, alpha) {\\n  this._context = context;\\n  this._alpha = alpha;\\n}\\n\\nCatmullRom.prototype = {\\n  areaStart: function() {\\n    this._line = 0;\\n  },\\n  areaEnd: function() {\\n    this._line = NaN;\\n  },\\n  lineStart: function() {\\n    this._x0 = this._x1 = this._x2 =\\n    this._y0 = this._y1 = this._y2 = NaN;\\n    this._l01_a = this._l12_a = this._l23_a =\\n    this._l01_2a = this._l12_2a = this._l23_2a =\\n    this._point = 0;\\n  },\\n  lineEnd: function() {\\n    switch (this._point) {\\n      case 2: this._context.lineTo(this._x2, this._y2); break;\\n      case 3: this.point(this._x2, this._y2); break;\\n    }\\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\\n    this._line = 1 - this._line;\\n  },\\n  point: function(x, y) {\\n    x = +x, y = +y;\\n\\n    if (this._point) {\\n      var x23 = this._x2 - x,\\n          y23 = this._y2 - y;\\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\\n    }\\n\\n    switch (this._point) {\\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\\n      case 1: this._point = 2; break;\\n      case 2: this._point = 3; // proceed\\n      default: point(this, x, y); break;\\n    }\\n\\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\\n  }\\n};\\n\\nexport default (function custom(alpha) {\\n\\n  function catmullRom(context) {\\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\\n  }\\n\\n  catmullRom.alpha = function(alpha) {\\n    return custom(+alpha);\\n  };\\n\\n  return catmullRom;\\n})(0.5);\\n\",\"import {CardinalClosed} from \\\"./cardinalClosed\\\";\\nimport noop from \\\"../noop\\\";\\nimport {point} from \\\"./catmullRom\\\";\\n\\nfunction CatmullRomClosed(context, alpha) {\\n  this._context = context;\\n  this._alpha = alpha;\\n}\\n\\nCatmullRomClosed.prototype = {\\n  areaStart: noop,\\n  areaEnd: noop,\\n  lineStart: function() {\\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\\n    this._l01_a = this._l12_a = this._l23_a =\\n    this._l01_2a = this._l12_2a = this._l23_2a =\\n    this._point = 0;\\n  },\\n  lineEnd: function() {\\n    switch (this._point) {\\n      case 1: {\\n        this._context.moveTo(this._x3, this._y3);\\n        this._context.closePath();\\n        break;\\n      }\\n      case 2: {\\n        this._context.lineTo(this._x3, this._y3);\\n        this._context.closePath();\\n        break;\\n      }\\n      case 3: {\\n        this.point(this._x3, this._y3);\\n        this.point(this._x4, this._y4);\\n        this.point(this._x5, this._y5);\\n        break;\\n      }\\n    }\\n  },\\n  point: function(x, y) {\\n    x = +x, y = +y;\\n\\n    if (this._point) {\\n      var x23 = this._x2 - x,\\n          y23 = this._y2 - y;\\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\\n    }\\n\\n    switch (this._point) {\\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\\n      default: point(this, x, y); break;\\n    }\\n\\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\\n  }\\n};\\n\\nexport default (function custom(alpha) {\\n\\n  function catmullRom(context) {\\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\\n  }\\n\\n  catmullRom.alpha = function(alpha) {\\n    return custom(+alpha);\\n  };\\n\\n  return catmullRom;\\n})(0.5);\\n\",\"import {CardinalOpen} from \\\"./cardinalOpen\\\";\\nimport {point} from \\\"./catmullRom\\\";\\n\\nfunction CatmullRomOpen(context, alpha) {\\n  this._context = context;\\n  this._alpha = alpha;\\n}\\n\\nCatmullRomOpen.prototype = {\\n  areaStart: function() {\\n    this._line = 0;\\n  },\\n  areaEnd: function() {\\n    this._line = NaN;\\n  },\\n  lineStart: function() {\\n    this._x0 = this._x1 = this._x2 =\\n    this._y0 = this._y1 = this._y2 = NaN;\\n    this._l01_a = this._l12_a = this._l23_a =\\n    this._l01_2a = this._l12_2a = this._l23_2a =\\n    this._point = 0;\\n  },\\n  lineEnd: function() {\\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\\n    this._line = 1 - this._line;\\n  },\\n  point: function(x, y) {\\n    x = +x, y = +y;\\n\\n    if (this._point) {\\n      var x23 = this._x2 - x,\\n          y23 = this._y2 - y;\\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\\n    }\\n\\n    switch (this._point) {\\n      case 0: this._point = 1; break;\\n      case 1: this._point = 2; break;\\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\\n      case 3: this._point = 4; // proceed\\n      default: point(this, x, y); break;\\n    }\\n\\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\\n  }\\n};\\n\\nexport default (function custom(alpha) {\\n\\n  function catmullRom(context) {\\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\\n  }\\n\\n  catmullRom.alpha = function(alpha) {\\n    return custom(+alpha);\\n  };\\n\\n  return catmullRom;\\n})(0.5);\\n\",\"import noop from \\\"../noop\\\";\\n\\nfunction LinearClosed(context) {\\n  this._context = context;\\n}\\n\\nLinearClosed.prototype = {\\n  areaStart: noop,\\n  areaEnd: noop,\\n  lineStart: function() {\\n    this._point = 0;\\n  },\\n  lineEnd: function() {\\n    if (this._point) this._context.closePath();\\n  },\\n  point: function(x, y) {\\n    x = +x, y = +y;\\n    if (this._point) this._context.lineTo(x, y);\\n    else this._point = 1, this._context.moveTo(x, y);\\n  }\\n};\\n\\nexport default function(context) {\\n  return new LinearClosed(context);\\n}\\n\",\"function sign(x) {\\n  return x < 0 ? -1 : 1;\\n}\\n\\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\\n// NOV(II), P. 443, 1990.\\nfunction slope3(that, x2, y2) {\\n  var h0 = that._x1 - that._x0,\\n      h1 = x2 - that._x1,\\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\\n}\\n\\n// Calculate a one-sided slope.\\nfunction slope2(that, t) {\\n  var h = that._x1 - that._x0;\\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\\n}\\n\\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\\n// \\\"you can express cubic Hermite interpolation in terms of cubic Bézier curves\\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\\\".\\nfunction point(that, t0, t1) {\\n  var x0 = that._x0,\\n      y0 = that._y0,\\n      x1 = that._x1,\\n      y1 = that._y1,\\n      dx = (x1 - x0) / 3;\\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\\n}\\n\\nfunction MonotoneX(context) {\\n  this._context = context;\\n}\\n\\nMonotoneX.prototype = {\\n  areaStart: function() {\\n    this._line = 0;\\n  },\\n  areaEnd: function() {\\n    this._line = NaN;\\n  },\\n  lineStart: function() {\\n    this._x0 = this._x1 =\\n    this._y0 = this._y1 =\\n    this._t0 = NaN;\\n    this._point = 0;\\n  },\\n  lineEnd: function() {\\n    switch (this._point) {\\n      case 2: this._context.lineTo(this._x1, this._y1); break;\\n      case 3: point(this, this._t0, slope2(this, this._t0)); break;\\n    }\\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\\n    this._line = 1 - this._line;\\n  },\\n  point: function(x, y) {\\n    var t1 = NaN;\\n\\n    x = +x, y = +y;\\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\\n    switch (this._point) {\\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\\n      case 1: this._point = 2; break;\\n      case 2: this._point = 3; point(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\\n      default: point(this, this._t0, t1 = slope3(this, x, y)); break;\\n    }\\n\\n    this._x0 = this._x1, this._x1 = x;\\n    this._y0 = this._y1, this._y1 = y;\\n    this._t0 = t1;\\n  }\\n}\\n\\nfunction MonotoneY(context) {\\n  this._context = new ReflectContext(context);\\n}\\n\\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\\n  MonotoneX.prototype.point.call(this, y, x);\\n};\\n\\nfunction ReflectContext(context) {\\n  this._context = context;\\n}\\n\\nReflectContext.prototype = {\\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\\n  closePath: function() { this._context.closePath(); },\\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\\n};\\n\\nexport function monotoneX(context) {\\n  return new MonotoneX(context);\\n}\\n\\nexport function monotoneY(context) {\\n  return new MonotoneY(context);\\n}\\n\",\"function Natural(context) {\\n  this._context = context;\\n}\\n\\nNatural.prototype = {\\n  areaStart: function() {\\n    this._line = 0;\\n  },\\n  areaEnd: function() {\\n    this._line = NaN;\\n  },\\n  lineStart: function() {\\n    this._x = [];\\n    this._y = [];\\n  },\\n  lineEnd: function() {\\n    var x = this._x,\\n        y = this._y,\\n        n = x.length;\\n\\n    if (n) {\\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\\n      if (n === 2) {\\n        this._context.lineTo(x[1], y[1]);\\n      } else {\\n        var px = controlPoints(x),\\n            py = controlPoints(y);\\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\\n        }\\n      }\\n    }\\n\\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\\n    this._line = 1 - this._line;\\n    this._x = this._y = null;\\n  },\\n  point: function(x, y) {\\n    this._x.push(+x);\\n    this._y.push(+y);\\n  }\\n};\\n\\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\\nfunction controlPoints(x) {\\n  var i,\\n      n = x.length - 1,\\n      m,\\n      a = new Array(n),\\n      b = new Array(n),\\n      r = new Array(n);\\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\\n  a[n - 1] = r[n - 1] / b[n - 1];\\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\\n  return [a, b];\\n}\\n\\nexport default function(context) {\\n  return new Natural(context);\\n}\\n\",\"function Step(context, t) {\\n  this._context = context;\\n  this._t = t;\\n}\\n\\nStep.prototype = {\\n  areaStart: function() {\\n    this._line = 0;\\n  },\\n  areaEnd: function() {\\n    this._line = NaN;\\n  },\\n  lineStart: function() {\\n    this._x = this._y = NaN;\\n    this._point = 0;\\n  },\\n  lineEnd: function() {\\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\\n  },\\n  point: function(x, y) {\\n    x = +x, y = +y;\\n    switch (this._point) {\\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\\n      case 1: this._point = 2; // proceed\\n      default: {\\n        if (this._t <= 0) {\\n          this._context.lineTo(this._x, y);\\n          this._context.lineTo(x, y);\\n        } else {\\n          var x1 = this._x * (1 - this._t) + x * this._t;\\n          this._context.lineTo(x1, this._y);\\n          this._context.lineTo(x1, y);\\n        }\\n        break;\\n      }\\n    }\\n    this._x = x, this._y = y;\\n  }\\n};\\n\\nexport default function(context) {\\n  return new Step(context, 0.5);\\n}\\n\\nexport function stepBefore(context) {\\n  return new Step(context, 0);\\n}\\n\\nexport function stepAfter(context) {\\n  return new Step(context, 1);\\n}\\n\",\"export default function(series, order) {\\n  if (!((n = series.length) > 1)) return;\\n  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\\n    s0 = s1, s1 = series[order[i]];\\n    for (j = 0; j < m; ++j) {\\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\\n    }\\n  }\\n}\\n\",\"export default function(series) {\\n  var n = series.length, o = new Array(n);\\n  while (--n >= 0) o[n] = n;\\n  return o;\\n}\\n\",\"import {slice} from \\\"./array\\\";\\nimport constant from \\\"./constant\\\";\\nimport offsetNone from \\\"./offset/none\\\";\\nimport orderNone from \\\"./order/none\\\";\\n\\nfunction stackValue(d, key) {\\n  return d[key];\\n}\\n\\nexport default function() {\\n  var keys = constant([]),\\n      order = orderNone,\\n      offset = offsetNone,\\n      value = stackValue;\\n\\n  function stack(data) {\\n    var kz = keys.apply(this, arguments),\\n        i,\\n        m = data.length,\\n        n = kz.length,\\n        sz = new Array(n),\\n        oz;\\n\\n    for (i = 0; i < n; ++i) {\\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\\n        sij.data = data[j];\\n      }\\n      si.key = ki;\\n    }\\n\\n    for (i = 0, oz = order(sz); i < n; ++i) {\\n      sz[oz[i]].index = i;\\n    }\\n\\n    offset(sz, oz);\\n    return sz;\\n  }\\n\\n  stack.keys = function(_) {\\n    return arguments.length ? (keys = typeof _ === \\\"function\\\" ? _ : constant(slice.call(_)), stack) : keys;\\n  };\\n\\n  stack.value = function(_) {\\n    return arguments.length ? (value = typeof _ === \\\"function\\\" ? _ : constant(+_), stack) : value;\\n  };\\n\\n  stack.order = function(_) {\\n    return arguments.length ? (order = _ == null ? orderNone : typeof _ === \\\"function\\\" ? _ : constant(slice.call(_)), stack) : order;\\n  };\\n\\n  stack.offset = function(_) {\\n    return arguments.length ? (offset = _ == null ? offsetNone : _, stack) : offset;\\n  };\\n\\n  return stack;\\n}\\n\",\"import none from \\\"./none\\\";\\n\\nexport default function(series, order) {\\n  if (!((n = series.length) > 0)) return;\\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\\n  }\\n  none(series, order);\\n}\\n\",\"export default function(series, order) {\\n  if (!((n = series.length) > 1)) return;\\n  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {\\n    for (yp = yn = 0, i = 0; i < n; ++i) {\\n      if ((dy = (d = series[order[i]][j])[1] - d[0]) >= 0) {\\n        d[0] = yp, d[1] = yp += dy;\\n      } else if (dy < 0) {\\n        d[1] = yn, d[0] = yn += dy;\\n      } else {\\n        d[0] = yp;\\n      }\\n    }\\n  }\\n}\\n\",\"import none from \\\"./none\\\";\\n\\nexport default function(series, order) {\\n  if (!((n = series.length) > 0)) return;\\n  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\\n    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\\n    s0[j][1] += s0[j][0] = -y / 2;\\n  }\\n  none(series, order);\\n}\\n\",\"import none from \\\"./none\\\";\\n\\nexport default function(series, order) {\\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\\n      var si = series[order[i]],\\n          sij0 = si[j][1] || 0,\\n          sij1 = si[j - 1][1] || 0,\\n          s3 = (sij0 - sij1) / 2;\\n      for (var k = 0; k < i; ++k) {\\n        var sk = series[order[k]],\\n            skj0 = sk[j][1] || 0,\\n            skj1 = sk[j - 1][1] || 0;\\n        s3 += skj0 - skj1;\\n      }\\n      s1 += sij0, s2 += s3 * sij0;\\n    }\\n    s0[j - 1][1] += s0[j - 1][0] = y;\\n    if (s1) y -= s2 / s1;\\n  }\\n  s0[j - 1][1] += s0[j - 1][0] = y;\\n  none(series, order);\\n}\\n\",\"import none from \\\"./none\\\";\\n\\nexport default function(series) {\\n  var sums = series.map(sum);\\n  return none(series).sort(function(a, b) { return sums[a] - sums[b]; });\\n}\\n\\nexport function sum(series) {\\n  var s = 0, i = -1, n = series.length, v;\\n  while (++i < n) if (v = +series[i][1]) s += v;\\n  return s;\\n}\\n\",\"import ascending from \\\"./ascending\\\";\\n\\nexport default function(series) {\\n  return ascending(series).reverse();\\n}\\n\",\"import none from \\\"./none\\\";\\nimport {sum} from \\\"./ascending\\\";\\n\\nexport default function(series) {\\n  var n = series.length,\\n      i,\\n      j,\\n      sums = series.map(sum),\\n      order = none(series).sort(function(a, b) { return sums[b] - sums[a]; }),\\n      top = 0,\\n      bottom = 0,\\n      tops = [],\\n      bottoms = [];\\n\\n  for (i = 0; i < n; ++i) {\\n    j = order[i];\\n    if (top < bottom) {\\n      top += sums[j];\\n      tops.push(j);\\n    } else {\\n      bottom += sums[j];\\n      bottoms.push(j);\\n    }\\n  }\\n\\n  return bottoms.reverse().concat(tops);\\n}\\n\",\"import none from \\\"./none\\\";\\n\\nexport default function(series) {\\n  return none(series).reverse();\\n}\\n\",\"export default function(x) {\\n  return function() {\\n    return x;\\n  };\\n}\\n\",\"export function x(d) {\\n  return d[0];\\n}\\n\\nexport function y(d) {\\n  return d[1];\\n}\\n\",\"function RedBlackTree() {\\n  this._ = null; // root node\\n}\\n\\nexport function RedBlackNode(node) {\\n  node.U = // parent node\\n  node.C = // color - true for red, false for black\\n  node.L = // left node\\n  node.R = // right node\\n  node.P = // previous node\\n  node.N = null; // next node\\n}\\n\\nRedBlackTree.prototype = {\\n  constructor: RedBlackTree,\\n\\n  insert: function(after, node) {\\n    var parent, grandpa, uncle;\\n\\n    if (after) {\\n      node.P = after;\\n      node.N = after.N;\\n      if (after.N) after.N.P = node;\\n      after.N = node;\\n      if (after.R) {\\n        after = after.R;\\n        while (after.L) after = after.L;\\n        after.L = node;\\n      } else {\\n        after.R = node;\\n      }\\n      parent = after;\\n    } else if (this._) {\\n      after = RedBlackFirst(this._);\\n      node.P = null;\\n      node.N = after;\\n      after.P = after.L = node;\\n      parent = after;\\n    } else {\\n      node.P = node.N = null;\\n      this._ = node;\\n      parent = null;\\n    }\\n    node.L = node.R = null;\\n    node.U = parent;\\n    node.C = true;\\n\\n    after = node;\\n    while (parent && parent.C) {\\n      grandpa = parent.U;\\n      if (parent === grandpa.L) {\\n        uncle = grandpa.R;\\n        if (uncle && uncle.C) {\\n          parent.C = uncle.C = false;\\n          grandpa.C = true;\\n          after = grandpa;\\n        } else {\\n          if (after === parent.R) {\\n            RedBlackRotateLeft(this, parent);\\n            after = parent;\\n            parent = after.U;\\n          }\\n          parent.C = false;\\n          grandpa.C = true;\\n          RedBlackRotateRight(this, grandpa);\\n        }\\n      } else {\\n        uncle = grandpa.L;\\n        if (uncle && uncle.C) {\\n          parent.C = uncle.C = false;\\n          grandpa.C = true;\\n          after = grandpa;\\n        } else {\\n          if (after === parent.L) {\\n            RedBlackRotateRight(this, parent);\\n            after = parent;\\n            parent = after.U;\\n          }\\n          parent.C = false;\\n          grandpa.C = true;\\n          RedBlackRotateLeft(this, grandpa);\\n        }\\n      }\\n      parent = after.U;\\n    }\\n    this._.C = false;\\n  },\\n\\n  remove: function(node) {\\n    if (node.N) node.N.P = node.P;\\n    if (node.P) node.P.N = node.N;\\n    node.N = node.P = null;\\n\\n    var parent = node.U,\\n        sibling,\\n        left = node.L,\\n        right = node.R,\\n        next,\\n        red;\\n\\n    if (!left) next = right;\\n    else if (!right) next = left;\\n    else next = RedBlackFirst(right);\\n\\n    if (parent) {\\n      if (parent.L === node) parent.L = next;\\n      else parent.R = next;\\n    } else {\\n      this._ = next;\\n    }\\n\\n    if (left && right) {\\n      red = next.C;\\n      next.C = node.C;\\n      next.L = left;\\n      left.U = next;\\n      if (next !== right) {\\n        parent = next.U;\\n        next.U = node.U;\\n        node = next.R;\\n        parent.L = node;\\n        next.R = right;\\n        right.U = next;\\n      } else {\\n        next.U = parent;\\n        parent = next;\\n        node = next.R;\\n      }\\n    } else {\\n      red = node.C;\\n      node = next;\\n    }\\n\\n    if (node) node.U = parent;\\n    if (red) return;\\n    if (node && node.C) { node.C = false; return; }\\n\\n    do {\\n      if (node === this._) break;\\n      if (node === parent.L) {\\n        sibling = parent.R;\\n        if (sibling.C) {\\n          sibling.C = false;\\n          parent.C = true;\\n          RedBlackRotateLeft(this, parent);\\n          sibling = parent.R;\\n        }\\n        if ((sibling.L && sibling.L.C)\\n            || (sibling.R && sibling.R.C)) {\\n          if (!sibling.R || !sibling.R.C) {\\n            sibling.L.C = false;\\n            sibling.C = true;\\n            RedBlackRotateRight(this, sibling);\\n            sibling = parent.R;\\n          }\\n          sibling.C = parent.C;\\n          parent.C = sibling.R.C = false;\\n          RedBlackRotateLeft(this, parent);\\n          node = this._;\\n          break;\\n        }\\n      } else {\\n        sibling = parent.L;\\n        if (sibling.C) {\\n          sibling.C = false;\\n          parent.C = true;\\n          RedBlackRotateRight(this, parent);\\n          sibling = parent.L;\\n        }\\n        if ((sibling.L && sibling.L.C)\\n          || (sibling.R && sibling.R.C)) {\\n          if (!sibling.L || !sibling.L.C) {\\n            sibling.R.C = false;\\n            sibling.C = true;\\n            RedBlackRotateLeft(this, sibling);\\n            sibling = parent.L;\\n          }\\n          sibling.C = parent.C;\\n          parent.C = sibling.L.C = false;\\n          RedBlackRotateRight(this, parent);\\n          node = this._;\\n          break;\\n        }\\n      }\\n      sibling.C = true;\\n      node = parent;\\n      parent = parent.U;\\n    } while (!node.C);\\n\\n    if (node) node.C = false;\\n  }\\n};\\n\\nfunction RedBlackRotateLeft(tree, node) {\\n  var p = node,\\n      q = node.R,\\n      parent = p.U;\\n\\n  if (parent) {\\n    if (parent.L === p) parent.L = q;\\n    else parent.R = q;\\n  } else {\\n    tree._ = q;\\n  }\\n\\n  q.U = parent;\\n  p.U = q;\\n  p.R = q.L;\\n  if (p.R) p.R.U = p;\\n  q.L = p;\\n}\\n\\nfunction RedBlackRotateRight(tree, node) {\\n  var p = node,\\n      q = node.L,\\n      parent = p.U;\\n\\n  if (parent) {\\n    if (parent.L === p) parent.L = q;\\n    else parent.R = q;\\n  } else {\\n    tree._ = q;\\n  }\\n\\n  q.U = parent;\\n  p.U = q;\\n  p.L = q.R;\\n  if (p.L) p.L.U = p;\\n  q.R = p;\\n}\\n\\nfunction RedBlackFirst(node) {\\n  while (node.L) node = node.L;\\n  return node;\\n}\\n\\nexport default RedBlackTree;\\n\",\"import {cells, edges, epsilon} from \\\"./Diagram\\\";\\n\\nexport function createEdge(left, right, v0, v1) {\\n  var edge = [null, null],\\n      index = edges.push(edge) - 1;\\n  edge.left = left;\\n  edge.right = right;\\n  if (v0) setEdgeEnd(edge, left, right, v0);\\n  if (v1) setEdgeEnd(edge, right, left, v1);\\n  cells[left.index].halfedges.push(index);\\n  cells[right.index].halfedges.push(index);\\n  return edge;\\n}\\n\\nexport function createBorderEdge(left, v0, v1) {\\n  var edge = [v0, v1];\\n  edge.left = left;\\n  return edge;\\n}\\n\\nexport function setEdgeEnd(edge, left, right, vertex) {\\n  if (!edge[0] && !edge[1]) {\\n    edge[0] = vertex;\\n    edge.left = left;\\n    edge.right = right;\\n  } else if (edge.left === right) {\\n    edge[1] = vertex;\\n  } else {\\n    edge[0] = vertex;\\n  }\\n}\\n\\n// Liang–Barsky line clipping.\\nfunction clipEdge(edge, x0, y0, x1, y1) {\\n  var a = edge[0],\\n      b = edge[1],\\n      ax = a[0],\\n      ay = a[1],\\n      bx = b[0],\\n      by = b[1],\\n      t0 = 0,\\n      t1 = 1,\\n      dx = bx - ax,\\n      dy = by - ay,\\n      r;\\n\\n  r = x0 - ax;\\n  if (!dx && r > 0) return;\\n  r /= dx;\\n  if (dx < 0) {\\n    if (r < t0) return;\\n    if (r < t1) t1 = r;\\n  } else if (dx > 0) {\\n    if (r > t1) return;\\n    if (r > t0) t0 = r;\\n  }\\n\\n  r = x1 - ax;\\n  if (!dx && r < 0) return;\\n  r /= dx;\\n  if (dx < 0) {\\n    if (r > t1) return;\\n    if (r > t0) t0 = r;\\n  } else if (dx > 0) {\\n    if (r < t0) return;\\n    if (r < t1) t1 = r;\\n  }\\n\\n  r = y0 - ay;\\n  if (!dy && r > 0) return;\\n  r /= dy;\\n  if (dy < 0) {\\n    if (r < t0) return;\\n    if (r < t1) t1 = r;\\n  } else if (dy > 0) {\\n    if (r > t1) return;\\n    if (r > t0) t0 = r;\\n  }\\n\\n  r = y1 - ay;\\n  if (!dy && r < 0) return;\\n  r /= dy;\\n  if (dy < 0) {\\n    if (r > t1) return;\\n    if (r > t0) t0 = r;\\n  } else if (dy > 0) {\\n    if (r < t0) return;\\n    if (r < t1) t1 = r;\\n  }\\n\\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\\n\\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\\n  return true;\\n}\\n\\nfunction connectEdge(edge, x0, y0, x1, y1) {\\n  var v1 = edge[1];\\n  if (v1) return true;\\n\\n  var v0 = edge[0],\\n      left = edge.left,\\n      right = edge.right,\\n      lx = left[0],\\n      ly = left[1],\\n      rx = right[0],\\n      ry = right[1],\\n      fx = (lx + rx) / 2,\\n      fy = (ly + ry) / 2,\\n      fm,\\n      fb;\\n\\n  if (ry === ly) {\\n    if (fx < x0 || fx >= x1) return;\\n    if (lx > rx) {\\n      if (!v0) v0 = [fx, y0];\\n      else if (v0[1] >= y1) return;\\n      v1 = [fx, y1];\\n    } else {\\n      if (!v0) v0 = [fx, y1];\\n      else if (v0[1] < y0) return;\\n      v1 = [fx, y0];\\n    }\\n  } else {\\n    fm = (lx - rx) / (ry - ly);\\n    fb = fy - fm * fx;\\n    if (fm < -1 || fm > 1) {\\n      if (lx > rx) {\\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\\n        else if (v0[1] >= y1) return;\\n        v1 = [(y1 - fb) / fm, y1];\\n      } else {\\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\\n        else if (v0[1] < y0) return;\\n        v1 = [(y0 - fb) / fm, y0];\\n      }\\n    } else {\\n      if (ly < ry) {\\n        if (!v0) v0 = [x0, fm * x0 + fb];\\n        else if (v0[0] >= x1) return;\\n        v1 = [x1, fm * x1 + fb];\\n      } else {\\n        if (!v0) v0 = [x1, fm * x1 + fb];\\n        else if (v0[0] < x0) return;\\n        v1 = [x0, fm * x0 + fb];\\n      }\\n    }\\n  }\\n\\n  edge[0] = v0;\\n  edge[1] = v1;\\n  return true;\\n}\\n\\nexport function clipEdges(x0, y0, x1, y1) {\\n  var i = edges.length,\\n      edge;\\n\\n  while (i--) {\\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\\n        || !clipEdge(edge, x0, y0, x1, y1)\\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon\\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon)) {\\n      delete edges[i];\\n    }\\n  }\\n}\\n\",\"import {createBorderEdge} from \\\"./Edge\\\";\\nimport {cells, edges, epsilon} from \\\"./Diagram\\\";\\n\\nexport function createCell(site) {\\n  return cells[site.index] = {\\n    site: site,\\n    halfedges: []\\n  };\\n}\\n\\nfunction cellHalfedgeAngle(cell, edge) {\\n  var site = cell.site,\\n      va = edge.left,\\n      vb = edge.right;\\n  if (site === vb) vb = va, va = site;\\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\\n  if (site === va) va = edge[1], vb = edge[0];\\n  else va = edge[0], vb = edge[1];\\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\\n}\\n\\nexport function cellHalfedgeStart(cell, edge) {\\n  return edge[+(edge.left !== cell.site)];\\n}\\n\\nexport function cellHalfedgeEnd(cell, edge) {\\n  return edge[+(edge.left === cell.site)];\\n}\\n\\nexport function sortCellHalfedges() {\\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\\n      var index = new Array(m),\\n          array = new Array(m);\\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\\n      index.sort(function(i, j) { return array[j] - array[i]; });\\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\\n    }\\n  }\\n}\\n\\nexport function clipCells(x0, y0, x1, y1) {\\n  var nCells = cells.length,\\n      iCell,\\n      cell,\\n      site,\\n      iHalfedge,\\n      halfedges,\\n      nHalfedges,\\n      start,\\n      startX,\\n      startY,\\n      end,\\n      endX,\\n      endY,\\n      cover = true;\\n\\n  for (iCell = 0; iCell < nCells; ++iCell) {\\n    if (cell = cells[iCell]) {\\n      site = cell.site;\\n      halfedges = cell.halfedges;\\n      iHalfedge = halfedges.length;\\n\\n      // Remove any dangling clipped edges.\\n      while (iHalfedge--) {\\n        if (!edges[halfedges[iHalfedge]]) {\\n          halfedges.splice(iHalfedge, 1);\\n        }\\n      }\\n\\n      // Insert any border edges as necessary.\\n      iHalfedge = 0, nHalfedges = halfedges.length;\\n      while (iHalfedge < nHalfedges) {\\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\\n        if (Math.abs(endX - startX) > epsilon || Math.abs(endY - startY) > epsilon) {\\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\\n              Math.abs(endX - x0) < epsilon && y1 - endY > epsilon ? [x0, Math.abs(startX - x0) < epsilon ? startY : y1]\\n              : Math.abs(endY - y1) < epsilon && x1 - endX > epsilon ? [Math.abs(startY - y1) < epsilon ? startX : x1, y1]\\n              : Math.abs(endX - x1) < epsilon && endY - y0 > epsilon ? [x1, Math.abs(startX - x1) < epsilon ? startY : y0]\\n              : Math.abs(endY - y0) < epsilon && endX - x0 > epsilon ? [Math.abs(startY - y0) < epsilon ? startX : x0, y0]\\n              : null)) - 1);\\n          ++nHalfedges;\\n        }\\n      }\\n\\n      if (nHalfedges) cover = false;\\n    }\\n  }\\n\\n  // If there weren’t any edges, have the closest site cover the extent.\\n  // It doesn’t matter which corner of the extent we measure!\\n  if (cover) {\\n    var dx, dy, d2, dc = Infinity;\\n\\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\\n      if (cell = cells[iCell]) {\\n        site = cell.site;\\n        dx = site[0] - x0;\\n        dy = site[1] - y0;\\n        d2 = dx * dx + dy * dy;\\n        if (d2 < dc) dc = d2, cover = cell;\\n      }\\n    }\\n\\n    if (cover) {\\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\\n      cover.halfedges.push(\\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\\n        edges.push(createBorderEdge(site, v10, v00)) - 1\\n      );\\n    }\\n  }\\n\\n  // Lastly delete any cells with no edges; these were entirely clipped.\\n  for (iCell = 0; iCell < nCells; ++iCell) {\\n    if (cell = cells[iCell]) {\\n      if (!cell.halfedges.length) {\\n        delete cells[iCell];\\n      }\\n    }\\n  }\\n}\\n\",\"import {RedBlackNode} from \\\"./RedBlackTree\\\";\\nimport {circles, epsilon2} from \\\"./Diagram\\\";\\n\\nvar circlePool = [];\\n\\nexport var firstCircle;\\n\\nfunction Circle() {\\n  RedBlackNode(this);\\n  this.x =\\n  this.y =\\n  this.arc =\\n  this.site =\\n  this.cy = null;\\n}\\n\\nexport function attachCircle(arc) {\\n  var lArc = arc.P,\\n      rArc = arc.N;\\n\\n  if (!lArc || !rArc) return;\\n\\n  var lSite = lArc.site,\\n      cSite = arc.site,\\n      rSite = rArc.site;\\n\\n  if (lSite === rSite) return;\\n\\n  var bx = cSite[0],\\n      by = cSite[1],\\n      ax = lSite[0] - bx,\\n      ay = lSite[1] - by,\\n      cx = rSite[0] - bx,\\n      cy = rSite[1] - by;\\n\\n  var d = 2 * (ax * cy - ay * cx);\\n  if (d >= -epsilon2) return;\\n\\n  var ha = ax * ax + ay * ay,\\n      hc = cx * cx + cy * cy,\\n      x = (cy * ha - ay * hc) / d,\\n      y = (ax * hc - cx * ha) / d;\\n\\n  var circle = circlePool.pop() || new Circle;\\n  circle.arc = arc;\\n  circle.site = cSite;\\n  circle.x = x + bx;\\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\\n\\n  arc.circle = circle;\\n\\n  var before = null,\\n      node = circles._;\\n\\n  while (node) {\\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\\n      if (node.L) node = node.L;\\n      else { before = node.P; break; }\\n    } else {\\n      if (node.R) node = node.R;\\n      else { before = node; break; }\\n    }\\n  }\\n\\n  circles.insert(before, circle);\\n  if (!before) firstCircle = circle;\\n}\\n\\nexport function detachCircle(arc) {\\n  var circle = arc.circle;\\n  if (circle) {\\n    if (!circle.P) firstCircle = circle.N;\\n    circles.remove(circle);\\n    circlePool.push(circle);\\n    RedBlackNode(circle);\\n    arc.circle = null;\\n  }\\n}\\n\",\"import {RedBlackNode} from \\\"./RedBlackTree\\\";\\nimport {createCell} from \\\"./Cell\\\";\\nimport {attachCircle, detachCircle} from \\\"./Circle\\\";\\nimport {createEdge, setEdgeEnd} from \\\"./Edge\\\";\\nimport {beaches, epsilon} from \\\"./Diagram\\\";\\n\\nvar beachPool = [];\\n\\nfunction Beach() {\\n  RedBlackNode(this);\\n  this.edge =\\n  this.site =\\n  this.circle = null;\\n}\\n\\nfunction createBeach(site) {\\n  var beach = beachPool.pop() || new Beach;\\n  beach.site = site;\\n  return beach;\\n}\\n\\nfunction detachBeach(beach) {\\n  detachCircle(beach);\\n  beaches.remove(beach);\\n  beachPool.push(beach);\\n  RedBlackNode(beach);\\n}\\n\\nexport function removeBeach(beach) {\\n  var circle = beach.circle,\\n      x = circle.x,\\n      y = circle.cy,\\n      vertex = [x, y],\\n      previous = beach.P,\\n      next = beach.N,\\n      disappearing = [beach];\\n\\n  detachBeach(beach);\\n\\n  var lArc = previous;\\n  while (lArc.circle\\n      && Math.abs(x - lArc.circle.x) < epsilon\\n      && Math.abs(y - lArc.circle.cy) < epsilon) {\\n    previous = lArc.P;\\n    disappearing.unshift(lArc);\\n    detachBeach(lArc);\\n    lArc = previous;\\n  }\\n\\n  disappearing.unshift(lArc);\\n  detachCircle(lArc);\\n\\n  var rArc = next;\\n  while (rArc.circle\\n      && Math.abs(x - rArc.circle.x) < epsilon\\n      && Math.abs(y - rArc.circle.cy) < epsilon) {\\n    next = rArc.N;\\n    disappearing.push(rArc);\\n    detachBeach(rArc);\\n    rArc = next;\\n  }\\n\\n  disappearing.push(rArc);\\n  detachCircle(rArc);\\n\\n  var nArcs = disappearing.length,\\n      iArc;\\n  for (iArc = 1; iArc < nArcs; ++iArc) {\\n    rArc = disappearing[iArc];\\n    lArc = disappearing[iArc - 1];\\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\\n  }\\n\\n  lArc = disappearing[0];\\n  rArc = disappearing[nArcs - 1];\\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\\n\\n  attachCircle(lArc);\\n  attachCircle(rArc);\\n}\\n\\nexport function addBeach(site) {\\n  var x = site[0],\\n      directrix = site[1],\\n      lArc,\\n      rArc,\\n      dxl,\\n      dxr,\\n      node = beaches._;\\n\\n  while (node) {\\n    dxl = leftBreakPoint(node, directrix) - x;\\n    if (dxl > epsilon) node = node.L; else {\\n      dxr = x - rightBreakPoint(node, directrix);\\n      if (dxr > epsilon) {\\n        if (!node.R) {\\n          lArc = node;\\n          break;\\n        }\\n        node = node.R;\\n      } else {\\n        if (dxl > -epsilon) {\\n          lArc = node.P;\\n          rArc = node;\\n        } else if (dxr > -epsilon) {\\n          lArc = node;\\n          rArc = node.N;\\n        } else {\\n          lArc = rArc = node;\\n        }\\n        break;\\n      }\\n    }\\n  }\\n\\n  createCell(site);\\n  var newArc = createBeach(site);\\n  beaches.insert(lArc, newArc);\\n\\n  if (!lArc && !rArc) return;\\n\\n  if (lArc === rArc) {\\n    detachCircle(lArc);\\n    rArc = createBeach(lArc.site);\\n    beaches.insert(newArc, rArc);\\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\\n    attachCircle(lArc);\\n    attachCircle(rArc);\\n    return;\\n  }\\n\\n  if (!rArc) { // && lArc\\n    newArc.edge = createEdge(lArc.site, newArc.site);\\n    return;\\n  }\\n\\n  // else lArc !== rArc\\n  detachCircle(lArc);\\n  detachCircle(rArc);\\n\\n  var lSite = lArc.site,\\n      ax = lSite[0],\\n      ay = lSite[1],\\n      bx = site[0] - ax,\\n      by = site[1] - ay,\\n      rSite = rArc.site,\\n      cx = rSite[0] - ax,\\n      cy = rSite[1] - ay,\\n      d = 2 * (bx * cy - by * cx),\\n      hb = bx * bx + by * by,\\n      hc = cx * cx + cy * cy,\\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\\n\\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\\n  newArc.edge = createEdge(lSite, site, null, vertex);\\n  rArc.edge = createEdge(site, rSite, null, vertex);\\n  attachCircle(lArc);\\n  attachCircle(rArc);\\n}\\n\\nfunction leftBreakPoint(arc, directrix) {\\n  var site = arc.site,\\n      rfocx = site[0],\\n      rfocy = site[1],\\n      pby2 = rfocy - directrix;\\n\\n  if (!pby2) return rfocx;\\n\\n  var lArc = arc.P;\\n  if (!lArc) return -Infinity;\\n\\n  site = lArc.site;\\n  var lfocx = site[0],\\n      lfocy = site[1],\\n      plby2 = lfocy - directrix;\\n\\n  if (!plby2) return lfocx;\\n\\n  var hl = lfocx - rfocx,\\n      aby2 = 1 / pby2 - 1 / plby2,\\n      b = hl / plby2;\\n\\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\\n\\n  return (rfocx + lfocx) / 2;\\n}\\n\\nfunction rightBreakPoint(arc, directrix) {\\n  var rArc = arc.N;\\n  if (rArc) return leftBreakPoint(rArc, directrix);\\n  var site = arc.site;\\n  return site[1] === directrix ? site[0] : Infinity;\\n}\\n\",\"import {addBeach, removeBeach} from \\\"./Beach\\\";\\nimport {sortCellHalfedges, cellHalfedgeStart, clipCells} from \\\"./Cell\\\";\\nimport {firstCircle} from \\\"./Circle\\\";\\nimport {clipEdges} from \\\"./Edge\\\";\\nimport RedBlackTree from \\\"./RedBlackTree\\\";\\n\\nexport var epsilon = 1e-6;\\nexport var epsilon2 = 1e-12;\\nexport var beaches;\\nexport var cells;\\nexport var circles;\\nexport var edges;\\n\\nfunction triangleArea(a, b, c) {\\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\\n}\\n\\nfunction lexicographic(a, b) {\\n  return b[1] - a[1]\\n      || b[0] - a[0];\\n}\\n\\nexport default function Diagram(sites, extent) {\\n  var site = sites.sort(lexicographic).pop(),\\n      x,\\n      y,\\n      circle;\\n\\n  edges = [];\\n  cells = new Array(sites.length);\\n  beaches = new RedBlackTree;\\n  circles = new RedBlackTree;\\n\\n  while (true) {\\n    circle = firstCircle;\\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\\n      if (site[0] !== x || site[1] !== y) {\\n        addBeach(site);\\n        x = site[0], y = site[1];\\n      }\\n      site = sites.pop();\\n    } else if (circle) {\\n      removeBeach(circle.arc);\\n    } else {\\n      break;\\n    }\\n  }\\n\\n  sortCellHalfedges();\\n\\n  if (extent) {\\n    var x0 = +extent[0][0],\\n        y0 = +extent[0][1],\\n        x1 = +extent[1][0],\\n        y1 = +extent[1][1];\\n    clipEdges(x0, y0, x1, y1);\\n    clipCells(x0, y0, x1, y1);\\n  }\\n\\n  this.edges = edges;\\n  this.cells = cells;\\n\\n  beaches =\\n  circles =\\n  edges =\\n  cells = null;\\n}\\n\\nDiagram.prototype = {\\n  constructor: Diagram,\\n\\n  polygons: function() {\\n    var edges = this.edges;\\n\\n    return this.cells.map(function(cell) {\\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\\n      polygon.data = cell.site.data;\\n      return polygon;\\n    });\\n  },\\n\\n  triangles: function() {\\n    var triangles = [],\\n        edges = this.edges;\\n\\n    this.cells.forEach(function(cell, i) {\\n      if (!(m = (halfedges = cell.halfedges).length)) return;\\n      var site = cell.site,\\n          halfedges,\\n          j = -1,\\n          m,\\n          s0,\\n          e1 = edges[halfedges[m - 1]],\\n          s1 = e1.left === site ? e1.right : e1.left;\\n\\n      while (++j < m) {\\n        s0 = s1;\\n        e1 = edges[halfedges[j]];\\n        s1 = e1.left === site ? e1.right : e1.left;\\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\\n          triangles.push([site.data, s0.data, s1.data]);\\n        }\\n      }\\n    });\\n\\n    return triangles;\\n  },\\n\\n  links: function() {\\n    return this.edges.filter(function(edge) {\\n      return edge.right;\\n    }).map(function(edge) {\\n      return {\\n        source: edge.left.data,\\n        target: edge.right.data\\n      };\\n    });\\n  },\\n\\n  find: function(x, y, radius) {\\n    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\\n\\n    // Use the previously-found cell, or start with an arbitrary one.\\n    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\\n    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\\n\\n    // Traverse the half-edges to find a closer cell, if any.\\n    do {\\n      cell = that.cells[i0 = i1], i1 = null;\\n      cell.halfedges.forEach(function(e) {\\n        var edge = that.edges[e], v = edge.left;\\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\\n        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\\n        if (v2 < d2) d2 = v2, i1 = v.index;\\n      });\\n    } while (i1 !== null);\\n\\n    that._found = i0;\\n\\n    return radius == null || d2 <= radius * radius ? cell.site : null;\\n  }\\n}\\n\",\"import constant from \\\"./constant\\\";\\nimport {x as pointX, y as pointY} from \\\"./point\\\";\\nimport Diagram, {epsilon} from \\\"./Diagram\\\";\\n\\nexport default function() {\\n  var x = pointX,\\n      y = pointY,\\n      extent = null;\\n\\n  function voronoi(data) {\\n    return new Diagram(data.map(function(d, i) {\\n      var s = [Math.round(x(d, i, data) / epsilon) * epsilon, Math.round(y(d, i, data) / epsilon) * epsilon];\\n      s.index = i;\\n      s.data = d;\\n      return s;\\n    }), extent);\\n  }\\n\\n  voronoi.polygons = function(data) {\\n    return voronoi(data).polygons();\\n  };\\n\\n  voronoi.links = function(data) {\\n    return voronoi(data).links();\\n  };\\n\\n  voronoi.triangles = function(data) {\\n    return voronoi(data).triangles();\\n  };\\n\\n  voronoi.x = function(_) {\\n    return arguments.length ? (x = typeof _ === \\\"function\\\" ? _ : constant(+_), voronoi) : x;\\n  };\\n\\n  voronoi.y = function(_) {\\n    return arguments.length ? (y = typeof _ === \\\"function\\\" ? _ : constant(+_), voronoi) : y;\\n  };\\n\\n  voronoi.extent = function(_) {\\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\\n  };\\n\\n  voronoi.size = function(_) {\\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\\n  };\\n\\n  return voronoi;\\n}\\n\",\"export default function(x) {\\n  return function() {\\n    return x;\\n  };\\n}\\n\",\"export function Transform(k, x, y) {\\n  this.k = k;\\n  this.x = x;\\n  this.y = y;\\n}\\n\\nTransform.prototype = {\\n  constructor: Transform,\\n  scale: function(k) {\\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\\n  },\\n  translate: function(x, y) {\\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\\n  },\\n  apply: function(point) {\\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\\n  },\\n  applyX: function(x) {\\n    return x * this.k + this.x;\\n  },\\n  applyY: function(y) {\\n    return y * this.k + this.y;\\n  },\\n  invert: function(location) {\\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\\n  },\\n  invertX: function(x) {\\n    return (x - this.x) / this.k;\\n  },\\n  invertY: function(y) {\\n    return (y - this.y) / this.k;\\n  },\\n  rescaleX: function(x) {\\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\\n  },\\n  rescaleY: function(y) {\\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\\n  },\\n  toString: function() {\\n    return \\\"translate(\\\" + this.x + \\\",\\\" + this.y + \\\") scale(\\\" + this.k + \\\")\\\";\\n  }\\n};\\n\\nexport var identity = new Transform(1, 0, 0);\\n\\ntransform.prototype = Transform.prototype;\\n\\nexport default function transform(node) {\\n  return node.__zoom || identity;\\n}\\n\",\"import {event} from \\\"d3-selection\\\";\\n\\nexport function nopropagation() {\\n  event.stopImmediatePropagation();\\n}\\n\\nexport default function() {\\n  event.preventDefault();\\n  event.stopImmediatePropagation();\\n}\\n\",\"import {dispatch} from \\\"d3-dispatch\\\";\\nimport {dragDisable, dragEnable} from \\\"d3-drag\\\";\\nimport {interpolateZoom} from \\\"d3-interpolate\\\";\\nimport {event, customEvent, select, mouse, touch} from \\\"d3-selection\\\";\\nimport {interrupt} from \\\"d3-transition\\\";\\nimport constant from \\\"./constant\\\";\\nimport ZoomEvent from \\\"./event\\\";\\nimport {Transform, identity} from \\\"./transform\\\";\\nimport noevent, {nopropagation} from \\\"./noevent\\\";\\n\\n// Ignore right-click, since that should open the context menu.\\nfunction defaultFilter() {\\n  return !event.button;\\n}\\n\\nfunction defaultExtent() {\\n  var e = this, w, h;\\n  if (e instanceof SVGElement) {\\n    e = e.ownerSVGElement || e;\\n    w = e.width.baseVal.value;\\n    h = e.height.baseVal.value;\\n  } else {\\n    w = e.clientWidth;\\n    h = e.clientHeight;\\n  }\\n  return [[0, 0], [w, h]];\\n}\\n\\nfunction defaultTransform() {\\n  return this.__zoom || identity;\\n}\\n\\nfunction defaultWheelDelta() {\\n  return -event.deltaY * (event.deltaMode ? 120 : 1) / 500;\\n}\\n\\nfunction defaultTouchable() {\\n  return \\\"ontouchstart\\\" in this;\\n}\\n\\nfunction defaultConstrain(transform, extent, translateExtent) {\\n  var dx0 = transform.invertX(extent[0][0]) - translateExtent[0][0],\\n      dx1 = transform.invertX(extent[1][0]) - translateExtent[1][0],\\n      dy0 = transform.invertY(extent[0][1]) - translateExtent[0][1],\\n      dy1 = transform.invertY(extent[1][1]) - translateExtent[1][1];\\n  return transform.translate(\\n    dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1),\\n    dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1)\\n  );\\n}\\n\\nexport default function() {\\n  var filter = defaultFilter,\\n      extent = defaultExtent,\\n      constrain = defaultConstrain,\\n      wheelDelta = defaultWheelDelta,\\n      touchable = defaultTouchable,\\n      scaleExtent = [0, Infinity],\\n      translateExtent = [[-Infinity, -Infinity], [Infinity, Infinity]],\\n      duration = 250,\\n      interpolate = interpolateZoom,\\n      gestures = [],\\n      listeners = dispatch(\\\"start\\\", \\\"zoom\\\", \\\"end\\\"),\\n      touchstarting,\\n      touchending,\\n      touchDelay = 500,\\n      wheelDelay = 150,\\n      clickDistance2 = 0;\\n\\n  function zoom(selection) {\\n    selection\\n        .property(\\\"__zoom\\\", defaultTransform)\\n        .on(\\\"wheel.zoom\\\", wheeled)\\n        .on(\\\"mousedown.zoom\\\", mousedowned)\\n        .on(\\\"dblclick.zoom\\\", dblclicked)\\n      .filter(touchable)\\n        .on(\\\"touchstart.zoom\\\", touchstarted)\\n        .on(\\\"touchmove.zoom\\\", touchmoved)\\n        .on(\\\"touchend.zoom touchcancel.zoom\\\", touchended)\\n        .style(\\\"touch-action\\\", \\\"none\\\")\\n        .style(\\\"-webkit-tap-highlight-color\\\", \\\"rgba(0,0,0,0)\\\");\\n  }\\n\\n  zoom.transform = function(collection, transform) {\\n    var selection = collection.selection ? collection.selection() : collection;\\n    selection.property(\\\"__zoom\\\", defaultTransform);\\n    if (collection !== selection) {\\n      schedule(collection, transform);\\n    } else {\\n      selection.interrupt().each(function() {\\n        gesture(this, arguments)\\n            .start()\\n            .zoom(null, typeof transform === \\\"function\\\" ? transform.apply(this, arguments) : transform)\\n            .end();\\n      });\\n    }\\n  };\\n\\n  zoom.scaleBy = function(selection, k) {\\n    zoom.scaleTo(selection, function() {\\n      var k0 = this.__zoom.k,\\n          k1 = typeof k === \\\"function\\\" ? k.apply(this, arguments) : k;\\n      return k0 * k1;\\n    });\\n  };\\n\\n  zoom.scaleTo = function(selection, k) {\\n    zoom.transform(selection, function() {\\n      var e = extent.apply(this, arguments),\\n          t0 = this.__zoom,\\n          p0 = centroid(e),\\n          p1 = t0.invert(p0),\\n          k1 = typeof k === \\\"function\\\" ? k.apply(this, arguments) : k;\\n      return constrain(translate(scale(t0, k1), p0, p1), e, translateExtent);\\n    });\\n  };\\n\\n  zoom.translateBy = function(selection, x, y) {\\n    zoom.transform(selection, function() {\\n      return constrain(this.__zoom.translate(\\n        typeof x === \\\"function\\\" ? x.apply(this, arguments) : x,\\n        typeof y === \\\"function\\\" ? y.apply(this, arguments) : y\\n      ), extent.apply(this, arguments), translateExtent);\\n    });\\n  };\\n\\n  zoom.translateTo = function(selection, x, y) {\\n    zoom.transform(selection, function() {\\n      var e = extent.apply(this, arguments),\\n          t = this.__zoom,\\n          p = centroid(e);\\n      return constrain(identity.translate(p[0], p[1]).scale(t.k).translate(\\n        typeof x === \\\"function\\\" ? -x.apply(this, arguments) : -x,\\n        typeof y === \\\"function\\\" ? -y.apply(this, arguments) : -y\\n      ), e, translateExtent);\\n    });\\n  };\\n\\n  function scale(transform, k) {\\n    k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], k));\\n    return k === transform.k ? transform : new Transform(k, transform.x, transform.y);\\n  }\\n\\n  function translate(transform, p0, p1) {\\n    var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;\\n    return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);\\n  }\\n\\n  function centroid(extent) {\\n    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\\n  }\\n\\n  function schedule(transition, transform, center) {\\n    transition\\n        .on(\\\"start.zoom\\\", function() { gesture(this, arguments).start(); })\\n        .on(\\\"interrupt.zoom end.zoom\\\", function() { gesture(this, arguments).end(); })\\n        .tween(\\\"zoom\\\", function() {\\n          var that = this,\\n              args = arguments,\\n              g = gesture(that, args),\\n              e = extent.apply(that, args),\\n              p = center || centroid(e),\\n              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\\n              a = that.__zoom,\\n              b = typeof transform === \\\"function\\\" ? transform.apply(that, args) : transform,\\n              i = interpolate(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\\n          return function(t) {\\n            if (t === 1) t = b; // Avoid rounding error on end.\\n            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\\n            g.zoom(null, t);\\n          };\\n        });\\n  }\\n\\n  function gesture(that, args) {\\n    for (var i = 0, n = gestures.length, g; i < n; ++i) {\\n      if ((g = gestures[i]).that === that) {\\n        return g;\\n      }\\n    }\\n    return new Gesture(that, args);\\n  }\\n\\n  function Gesture(that, args) {\\n    this.that = that;\\n    this.args = args;\\n    this.index = -1;\\n    this.active = 0;\\n    this.extent = extent.apply(that, args);\\n  }\\n\\n  Gesture.prototype = {\\n    start: function() {\\n      if (++this.active === 1) {\\n        this.index = gestures.push(this) - 1;\\n        this.emit(\\\"start\\\");\\n      }\\n      return this;\\n    },\\n    zoom: function(key, transform) {\\n      if (this.mouse && key !== \\\"mouse\\\") this.mouse[1] = transform.invert(this.mouse[0]);\\n      if (this.touch0 && key !== \\\"touch\\\") this.touch0[1] = transform.invert(this.touch0[0]);\\n      if (this.touch1 && key !== \\\"touch\\\") this.touch1[1] = transform.invert(this.touch1[0]);\\n      this.that.__zoom = transform;\\n      this.emit(\\\"zoom\\\");\\n      return this;\\n    },\\n    end: function() {\\n      if (--this.active === 0) {\\n        gestures.splice(this.index, 1);\\n        this.index = -1;\\n        this.emit(\\\"end\\\");\\n      }\\n      return this;\\n    },\\n    emit: function(type) {\\n      customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\\n    }\\n  };\\n\\n  function wheeled() {\\n    if (!filter.apply(this, arguments)) return;\\n    var g = gesture(this, arguments),\\n        t = this.__zoom,\\n        k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], t.k * Math.pow(2, wheelDelta.apply(this, arguments)))),\\n        p = mouse(this);\\n\\n    // If the mouse is in the same location as before, reuse it.\\n    // If there were recent wheel events, reset the wheel idle timeout.\\n    if (g.wheel) {\\n      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\\n        g.mouse[1] = t.invert(g.mouse[0] = p);\\n      }\\n      clearTimeout(g.wheel);\\n    }\\n\\n    // If this wheel event won’t trigger a transform change, ignore it.\\n    else if (t.k === k) return;\\n\\n    // Otherwise, capture the mouse point and location at the start.\\n    else {\\n      g.mouse = [p, t.invert(p)];\\n      interrupt(this);\\n      g.start();\\n    }\\n\\n    noevent();\\n    g.wheel = setTimeout(wheelidled, wheelDelay);\\n    g.zoom(\\\"mouse\\\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent, translateExtent));\\n\\n    function wheelidled() {\\n      g.wheel = null;\\n      g.end();\\n    }\\n  }\\n\\n  function mousedowned() {\\n    if (touchending || !filter.apply(this, arguments)) return;\\n    var g = gesture(this, arguments),\\n        v = select(event.view).on(\\\"mousemove.zoom\\\", mousemoved, true).on(\\\"mouseup.zoom\\\", mouseupped, true),\\n        p = mouse(this),\\n        x0 = event.clientX,\\n        y0 = event.clientY;\\n\\n    dragDisable(event.view);\\n    nopropagation();\\n    g.mouse = [p, this.__zoom.invert(p)];\\n    interrupt(this);\\n    g.start();\\n\\n    function mousemoved() {\\n      noevent();\\n      if (!g.moved) {\\n        var dx = event.clientX - x0, dy = event.clientY - y0;\\n        g.moved = dx * dx + dy * dy > clickDistance2;\\n      }\\n      g.zoom(\\\"mouse\\\", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent, translateExtent));\\n    }\\n\\n    function mouseupped() {\\n      v.on(\\\"mousemove.zoom mouseup.zoom\\\", null);\\n      dragEnable(event.view, g.moved);\\n      noevent();\\n      g.end();\\n    }\\n  }\\n\\n  function dblclicked() {\\n    if (!filter.apply(this, arguments)) return;\\n    var t0 = this.__zoom,\\n        p0 = mouse(this),\\n        p1 = t0.invert(p0),\\n        k1 = t0.k * (event.shiftKey ? 0.5 : 2),\\n        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments), translateExtent);\\n\\n    noevent();\\n    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);\\n    else select(this).call(zoom.transform, t1);\\n  }\\n\\n  function touchstarted() {\\n    if (!filter.apply(this, arguments)) return;\\n    var g = gesture(this, arguments),\\n        touches = event.changedTouches,\\n        started,\\n        n = touches.length, i, t, p;\\n\\n    nopropagation();\\n    for (i = 0; i < n; ++i) {\\n      t = touches[i], p = touch(this, touches, t.identifier);\\n      p = [p, this.__zoom.invert(p), t.identifier];\\n      if (!g.touch0) g.touch0 = p, started = true;\\n      else if (!g.touch1) g.touch1 = p;\\n    }\\n\\n    // If this is a dbltap, reroute to the (optional) dblclick.zoom handler.\\n    if (touchstarting) {\\n      touchstarting = clearTimeout(touchstarting);\\n      if (!g.touch1) {\\n        g.end();\\n        p = select(this).on(\\\"dblclick.zoom\\\");\\n        if (p) p.apply(this, arguments);\\n        return;\\n      }\\n    }\\n\\n    if (started) {\\n      touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\\n      interrupt(this);\\n      g.start();\\n    }\\n  }\\n\\n  function touchmoved() {\\n    var g = gesture(this, arguments),\\n        touches = event.changedTouches,\\n        n = touches.length, i, t, p, l;\\n\\n    noevent();\\n    if (touchstarting) touchstarting = clearTimeout(touchstarting);\\n    for (i = 0; i < n; ++i) {\\n      t = touches[i], p = touch(this, touches, t.identifier);\\n      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\\n      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\\n    }\\n    t = g.that.__zoom;\\n    if (g.touch1) {\\n      var p0 = g.touch0[0], l0 = g.touch0[1],\\n          p1 = g.touch1[0], l1 = g.touch1[1],\\n          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\\n          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\\n      t = scale(t, Math.sqrt(dp / dl));\\n      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\\n      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\\n    }\\n    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\\n    else return;\\n    g.zoom(\\\"touch\\\", constrain(translate(t, p, l), g.extent, translateExtent));\\n  }\\n\\n  function touchended() {\\n    var g = gesture(this, arguments),\\n        touches = event.changedTouches,\\n        n = touches.length, i, t;\\n\\n    nopropagation();\\n    if (touchending) clearTimeout(touchending);\\n    touchending = setTimeout(function() { touchending = null; }, touchDelay);\\n    for (i = 0; i < n; ++i) {\\n      t = touches[i];\\n      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\\n      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\\n    }\\n    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\\n    if (g.touch0) g.touch0[1] = this.__zoom.invert(g.touch0[0]);\\n    else g.end();\\n  }\\n\\n  zoom.wheelDelta = function(_) {\\n    return arguments.length ? (wheelDelta = typeof _ === \\\"function\\\" ? _ : constant(+_), zoom) : wheelDelta;\\n  };\\n\\n  zoom.filter = function(_) {\\n    return arguments.length ? (filter = typeof _ === \\\"function\\\" ? _ : constant(!!_), zoom) : filter;\\n  };\\n\\n  zoom.touchable = function(_) {\\n    return arguments.length ? (touchable = typeof _ === \\\"function\\\" ? _ : constant(!!_), zoom) : touchable;\\n  };\\n\\n  zoom.extent = function(_) {\\n    return arguments.length ? (extent = typeof _ === \\\"function\\\" ? _ : constant([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\\n  };\\n\\n  zoom.scaleExtent = function(_) {\\n    return arguments.length ? (scaleExtent[0] = +_[0], scaleExtent[1] = +_[1], zoom) : [scaleExtent[0], scaleExtent[1]];\\n  };\\n\\n  zoom.translateExtent = function(_) {\\n    return arguments.length ? (translateExtent[0][0] = +_[0][0], translateExtent[1][0] = +_[1][0], translateExtent[0][1] = +_[0][1], translateExtent[1][1] = +_[1][1], zoom) : [[translateExtent[0][0], translateExtent[0][1]], [translateExtent[1][0], translateExtent[1][1]]];\\n  };\\n\\n  zoom.constrain = function(_) {\\n    return arguments.length ? (constrain = _, zoom) : constrain;\\n  };\\n\\n  zoom.duration = function(_) {\\n    return arguments.length ? (duration = +_, zoom) : duration;\\n  };\\n\\n  zoom.interpolate = function(_) {\\n    return arguments.length ? (interpolate = _, zoom) : interpolate;\\n  };\\n\\n  zoom.on = function() {\\n    var value = listeners.on.apply(listeners, arguments);\\n    return value === listeners ? zoom : value;\\n  };\\n\\n  zoom.clickDistance = function(_) {\\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, zoom) : Math.sqrt(clickDistance2);\\n  };\\n\\n  return zoom;\\n}\\n\",\"export default function ZoomEvent(target, type, transform) {\\n  this.target = target;\\n  this.type = type;\\n  this.transform = transform;\\n}\\n\"]}","code":"!function(t){var n={};function e(r){if(n[r])return n[r].exports;var i=n[r]={i:r,l:!1,exports:{}};return t[r].call(i.exports,i,i.exports,e),i.l=!0,i.exports}e.m=t,e.c=n,e.d=function(t,n,r){e.o(t,n)||Object.defineProperty(t,n,{configurable:!1,enumerable:!0,get:r})},e.r=function(t){Object.defineProperty(t,\"__esModule\",{value:!0})},e.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(n,\"a\",n),n},e.o=function(t,n){return Object.prototype.hasOwnProperty.call(t,n)},e.p=\"\",e(e.s=1)}([function(t,n,e){\"use strict\";e(1);var r=t.exports={},i=\"Name\",u=\"Marriage\",o=\"Baptism\",a=\"Offspring\",f=function(t,n,e,r,i,u){this.ID=\"\"+t,this.fullName=n,this.firstParent=e,this.secondParent=r,this.offSpringList=u,this.spouse=i,this.ID.includes(\"+\")?this.isActor=!1:this.isActor=!0},c=function(t,n,e,r,i){this.source=t,this.target=n,this.tieType=e,this.tieStartYear=r,this.tieEndYear=i},s=[],l=[];function h(t,n){var e=function(t){var n=d(i,t);if(!(n&&n.data&&n.data[0]&&n.data[0][0]))return console.log(n),null;var e=n.data[0][0].text;if(e)return e}(n);if(!e)return null;var r=function(t){var n=d(o,t);if(!n)return null;var e=n.data.parents.data[0][\"query-value\"],r=n.data.parents.data[0][\"query-text\"];if(e){var i=new f(e,r);return p(i),i}}(n),s=function(t){var n=d(o,t);if(!n)return null;var e=n.data.parents.data[2][\"query-value\"],r=n.data.parents.data[2][\"query-text\"];if(e){var i=new f(e,r);return p(i),i}}(n),h=function(t){var n=d(u,t);if(!n)return null;var e=n.data[0].data.spouse.data[0][\"query-value\"],r=n.data[0].data.spouse.data[0][\"query-text\"];if(e){var i=new f(e,r);return p(i),i}}(n),g=function(t){var n=d(a,t);if(!n)return null;var e=n.data.offsprings.data;if(e){for(var r=[],i=0;i<e.length;i++)if(\"actor\"===e[i][\"query-type\"]){var u=e[i][\"query-value\"],o=new f(u);if(\"year\"===e[i+2][\"query-type\"]){var c=e[i][\"query-text\"];o.fullName=c}r.push(o),p(o)}return r}}(n),y=new f(t,e,r,s,h,g);return(r||s)&&function(t){var n,e,r=v(t.firstParent),i=v(t.secondParent),u=new f(r+\"+\"+i);p(u),r.length>0&&(n=new c(r,u.ID));i.length>0&&(e=new c(i,u.ID));var o=new c(u.ID,t.ID);l.push(n,e,o)}(y),(g||h)&&function(t){var n=v(t.spouse),e=new f(t.ID+\"+\"+n);p(e);var r=new c(t.ID,e.ID);if(l.push(r),t.spouse){var i=new c(t.spouse.ID,e.ID);l.push(i)}if(t.offSpringList)for(var u=0;u<t.offSpringList.length;u++){var o=new c(e.ID,t.offSpringList[u].ID);l.push(o)}}(y),p(y),y}function d(t,n){var e=r.search(t,n);return e&&e.data?e:null}function p(t){0===s.filter(function(n){return n.ID===t.ID}).length&&s.push(t)}function v(t){return t?t.ID:\"\"}r.search=function(t,n){for(var e=0;e<n.length;e++)if(n[e].label===t)return n[e];return null},r.checkLabelExistence=d,r.getActorData=function(t){return h(t,r.getJSON(t))},r.getJSON=function(t){var n,e=new XMLHttpRequest,r=\"q=\"+t+\"&s=ALL-SOURCES&w=search-by-option\";return e.open(\"POST\",\"https://projectcornelia.be/source_browser/public/router.php\",!1),e.setRequestHeader(\"Content-type\",\"application/x-www-form-urlencoded\"),e.onreadystatechange=function(){4==e.readyState&&200==e.status&&(n=JSON.parse(e.responseText))},e.send(r),n},r.Node=f,r.nodeList=s,r.tieList=l},function(t,n,e){\"use strict\";var r,i=e(0),u=e(2),o=u.select(\"svg\"),a=+o.attr(\"width\"),f=+o.attr(\"height\");u.scaleOrdinal(u.schemeCategory20);function c(t){var n={},e={},r=i.getActorData(t);if(r.offSpringList)for(var u=0;u<r.offSpringList.length;u++){if((n=i.getActorData(r.offSpringList[u].ID)).offSpringList)for(var o=0;o<n.offSpringList.length;o++)s(e=i.getActorData(n.offSpringList[o].ID),n),n.offSpringList[o]=e;s(n,r),r.offSpringList[u]=n}console.log(r)}function s(t,n){(t.firstParent.ID=n.ID)?t.firstParent=n:(t.secondParent.ID=n.ID)&&(t.secondParent=n)}function l(t){u.event.active||r.alphaTarget(.3).restart(),t.fx=t.x,t.fy=t.y}function h(t){t.fx=u.event.x,t.fy=u.event.y}function d(t){u.event.active||r.alphaTarget(0),t.fx=null,t.fy=null}var p=c(\"490\");console.log(\"printing central actor\"),console.log(p),console.log(i.nodeList),function(t,n){var e={};e.nodes=t,e.links=n,r=u.forceSimulation().force(\"link\",u.forceLink().id(function(t){return\"\"+t.ID})).force(\"charge\",u.forceManyBody().strength(-250)).force(\"center\",u.forceCenter(a/2,f/2));var i=o.append(\"g\").attr(\"class\",\"links\").selectAll(\"line\").data(e.links).enter().append(\"line\"),c=o.append(\"g\").attr(\"class\",\"nodes\").selectAll(\"g\").data(e.nodes).enter().append(\"g\");c.append(\"rect\").attr(\"width\",function(t){return t.isActor?60:0}).attr(\"height\",6).attr(\"x\",-15).attr(\"y\",-3).attr(\"fill\",\"white\").attr(\"stroke\",\"black\").call(u.drag().on(\"start\",l).on(\"drag\",h).on(\"end\",d)),c.append(\"text\").text(function(t){if(t.isActor)return t.fullName}).attr(\"x\",-10).attr(\"y\",-10),r.nodes(e.nodes).on(\"tick\",function(){i.attr(\"x1\",function(t){return t.source.x}).attr(\"y1\",function(t){return t.source.y}).attr(\"x2\",function(t){return t.target.x}).attr(\"y2\",function(t){return t.target.y}),c.attr(\"transform\",function(t){return\"translate(\"+t.x+\",\"+t.y+\")\"})}),r.force(\"link\").links(e.links)}(i.nodeList,i.tieList),n.getCentralActor=c},function(t,n,e){\"use strict\";e.r(n);var r=function(t,n){return t<n?-1:t>n?1:t>=n?0:NaN},i=function(t){var n;return 1===t.length&&(n=t,t=function(t,e){return r(n(t),e)}),{left:function(n,e,r,i){for(null==r&&(r=0),null==i&&(i=n.length);r<i;){var u=r+i>>>1;t(n[u],e)<0?r=u+1:i=u}return r},right:function(n,e,r,i){for(null==r&&(r=0),null==i&&(i=n.length);r<i;){var u=r+i>>>1;t(n[u],e)>0?i=u:r=u+1}return r}}};var u=i(r),o=u.right,a=u.left,f=o,c=function(t,n){null==n&&(n=s);for(var e=0,r=t.length-1,i=t[0],u=new Array(r<0?0:r);e<r;)u[e]=n(i,i=t[++e]);return u};function s(t,n){return[t,n]}var l=function(t,n,e){var r,i,u,o,a=t.length,f=n.length,c=new Array(a*f);for(null==e&&(e=s),r=u=0;r<a;++r)for(o=t[r],i=0;i<f;++i,++u)c[u]=e(o,n[i]);return c},h=function(t,n){return n<t?-1:n>t?1:n>=t?0:NaN},d=function(t){return null===t?NaN:+t},p=function(t,n){var e,r,i=t.length,u=0,o=-1,a=0,f=0;if(null==n)for(;++o<i;)isNaN(e=d(t[o]))||(f+=(r=e-a)*(e-(a+=r/++u)));else for(;++o<i;)isNaN(e=d(n(t[o],o,t)))||(f+=(r=e-a)*(e-(a+=r/++u)));if(u>1)return f/(u-1)},v=function(t,n){var e=p(t,n);return e?Math.sqrt(e):e},g=function(t,n){var e,r,i,u=t.length,o=-1;if(null==n){for(;++o<u;)if(null!=(e=t[o])&&e>=e)for(r=i=e;++o<u;)null!=(e=t[o])&&(r>e&&(r=e),i<e&&(i=e))}else for(;++o<u;)if(null!=(e=n(t[o],o,t))&&e>=e)for(r=i=e;++o<u;)null!=(e=n(t[o],o,t))&&(r>e&&(r=e),i<e&&(i=e));return[r,i]},y=Array.prototype,_=y.slice,b=y.map,m=function(t){return function(){return t}},x=function(t){return t},w=function(t,n,e){t=+t,n=+n,e=(i=arguments.length)<2?(n=t,t=0,1):i<3?1:+e;for(var r=-1,i=0|Math.max(0,Math.ceil((n-t)/e)),u=new Array(i);++r<i;)u[r]=t+r*e;return u},M=Math.sqrt(50),A=Math.sqrt(10),S=Math.sqrt(2),T=function(t,n,e){var r,i,u,o,a=-1;if(e=+e,(t=+t)===(n=+n)&&e>0)return[t];if((r=n<t)&&(i=t,t=n,n=i),0===(o=N(t,n,e))||!isFinite(o))return[];if(o>0)for(t=Math.ceil(t/o),n=Math.floor(n/o),u=new Array(i=Math.ceil(n-t+1));++a<i;)u[a]=(t+a)*o;else for(t=Math.floor(t*o),n=Math.ceil(n*o),u=new Array(i=Math.ceil(t-n+1));++a<i;)u[a]=(t-a)/o;return r&&u.reverse(),u};function N(t,n,e){var r=(n-t)/Math.max(0,e),i=Math.floor(Math.log(r)/Math.LN10),u=r/Math.pow(10,i);return i>=0?(u>=M?10:u>=A?5:u>=S?2:1)*Math.pow(10,i):-Math.pow(10,-i)/(u>=M?10:u>=A?5:u>=S?2:1)}function k(t,n,e){var r=Math.abs(n-t)/Math.max(0,e),i=Math.pow(10,Math.floor(Math.log(r)/Math.LN10)),u=r/i;return u>=M?i*=10:u>=A?i*=5:u>=S&&(i*=2),n<t?-i:i}var E=function(t){return Math.ceil(Math.log(t.length)/Math.LN2)+1},C=function(){var t=x,n=g,e=E;function r(r){var i,u,o=r.length,a=new Array(o);for(i=0;i<o;++i)a[i]=t(r[i],i,r);var c=n(a),s=c[0],l=c[1],h=e(a,s,l);Array.isArray(h)||(h=k(s,l,h),h=w(Math.ceil(s/h)*h,Math.floor(l/h)*h,h));for(var d=h.length;h[0]<=s;)h.shift(),--d;for(;h[d-1]>l;)h.pop(),--d;var p,v=new Array(d+1);for(i=0;i<=d;++i)(p=v[i]=[]).x0=i>0?h[i-1]:s,p.x1=i<d?h[i]:l;for(i=0;i<o;++i)s<=(u=a[i])&&u<=l&&v[f(h,u,0,d)].push(r[i]);return v}return r.value=function(n){return arguments.length?(t=\"function\"==typeof n?n:m(n),r):t},r.domain=function(t){return arguments.length?(n=\"function\"==typeof t?t:m([t[0],t[1]]),r):n},r.thresholds=function(t){return arguments.length?(e=\"function\"==typeof t?t:Array.isArray(t)?m(_.call(t)):m(t),r):e},r},P=function(t,n,e){if(null==e&&(e=d),r=t.length){if((n=+n)<=0||r<2)return+e(t[0],0,t);if(n>=1)return+e(t[r-1],r-1,t);var r,i=(r-1)*n,u=Math.floor(i),o=+e(t[u],u,t);return o+(+e(t[u+1],u+1,t)-o)*(i-u)}},z=function(t,n,e){return t=b.call(t,d).sort(r),Math.ceil((e-n)/(2*(P(t,.75)-P(t,.25))*Math.pow(t.length,-1/3)))},R=function(t,n,e){return Math.ceil((e-n)/(3.5*v(t)*Math.pow(t.length,-1/3)))},D=function(t,n){var e,r,i=t.length,u=-1;if(null==n){for(;++u<i;)if(null!=(e=t[u])&&e>=e)for(r=e;++u<i;)null!=(e=t[u])&&e>r&&(r=e)}else for(;++u<i;)if(null!=(e=n(t[u],u,t))&&e>=e)for(r=e;++u<i;)null!=(e=n(t[u],u,t))&&e>r&&(r=e);return r},L=function(t,n){var e,r=t.length,i=r,u=-1,o=0;if(null==n)for(;++u<r;)isNaN(e=d(t[u]))?--i:o+=e;else for(;++u<r;)isNaN(e=d(n(t[u],u,t)))?--i:o+=e;if(i)return o/i},q=function(t,n){var e,i=t.length,u=-1,o=[];if(null==n)for(;++u<i;)isNaN(e=d(t[u]))||o.push(e);else for(;++u<i;)isNaN(e=d(n(t[u],u,t)))||o.push(e);return P(o.sort(r),.5)},U=function(t){for(var n,e,r,i=t.length,u=-1,o=0;++u<i;)o+=t[u].length;for(e=new Array(o);--i>=0;)for(n=(r=t[i]).length;--n>=0;)e[--o]=r[n];return e},O=function(t,n){var e,r,i=t.length,u=-1;if(null==n){for(;++u<i;)if(null!=(e=t[u])&&e>=e)for(r=e;++u<i;)null!=(e=t[u])&&r>e&&(r=e)}else for(;++u<i;)if(null!=(e=n(t[u],u,t))&&e>=e)for(r=e;++u<i;)null!=(e=n(t[u],u,t))&&r>e&&(r=e);return r},I=function(t,n){for(var e=n.length,r=new Array(e);e--;)r[e]=t[n[e]];return r},Y=function(t,n){if(e=t.length){var e,i,u=0,o=0,a=t[o];for(null==n&&(n=r);++u<e;)(n(i=t[u],a)<0||0!==n(a,a))&&(a=i,o=u);return 0===n(a,a)?o:void 0}},B=function(t,n,e){for(var r,i,u=(null==e?t.length:e)-(n=null==n?0:+n);u;)i=Math.random()*u--|0,r=t[u+n],t[u+n]=t[i+n],t[i+n]=r;return t},F=function(t,n){var e,r=t.length,i=-1,u=0;if(null==n)for(;++i<r;)(e=+t[i])&&(u+=e);else for(;++i<r;)(e=+n(t[i],i,t))&&(u+=e);return u},j=function(t){if(!(i=t.length))return[];for(var n=-1,e=O(t,H),r=new Array(e);++n<e;)for(var i,u=-1,o=r[n]=new Array(i);++u<i;)o[u]=t[u][n];return r};function H(t){return t.length}var X=function(){return j(arguments)},G=Array.prototype.slice,V=function(t){return t},$=1,W=2,Z=3,Q=4,J=1e-6;function K(t){return\"translate(\"+(t+.5)+\",0)\"}function tt(t){return\"translate(0,\"+(t+.5)+\")\"}function nt(){return!this.__axis}function et(t,n){var e=[],r=null,i=null,u=6,o=6,a=3,f=t===$||t===Q?-1:1,c=t===Q||t===W?\"x\":\"y\",s=t===$||t===Z?K:tt;function l(l){var h=null==r?n.ticks?n.ticks.apply(n,e):n.domain():r,d=null==i?n.tickFormat?n.tickFormat.apply(n,e):V:i,p=Math.max(u,0)+a,v=n.range(),g=+v[0]+.5,y=+v[v.length-1]+.5,_=(n.bandwidth?function(t){var n=Math.max(0,t.bandwidth()-1)/2;return t.round()&&(n=Math.round(n)),function(e){return+t(e)+n}}:function(t){return function(n){return+t(n)}})(n.copy()),b=l.selection?l.selection():l,m=b.selectAll(\".domain\").data([null]),x=b.selectAll(\".tick\").data(h,n).order(),w=x.exit(),M=x.enter().append(\"g\").attr(\"class\",\"tick\"),A=x.select(\"line\"),S=x.select(\"text\");m=m.merge(m.enter().insert(\"path\",\".tick\").attr(\"class\",\"domain\").attr(\"stroke\",\"#000\")),x=x.merge(M),A=A.merge(M.append(\"line\").attr(\"stroke\",\"#000\").attr(c+\"2\",f*u)),S=S.merge(M.append(\"text\").attr(\"fill\",\"#000\").attr(c,f*p).attr(\"dy\",t===$?\"0em\":t===Z?\"0.71em\":\"0.32em\")),l!==b&&(m=m.transition(l),x=x.transition(l),A=A.transition(l),S=S.transition(l),w=w.transition(l).attr(\"opacity\",J).attr(\"transform\",function(t){return isFinite(t=_(t))?s(t):this.getAttribute(\"transform\")}),M.attr(\"opacity\",J).attr(\"transform\",function(t){var n=this.parentNode.__axis;return s(n&&isFinite(n=n(t))?n:_(t))})),w.remove(),m.attr(\"d\",t===Q||t==W?\"M\"+f*o+\",\"+g+\"H0.5V\"+y+\"H\"+f*o:\"M\"+g+\",\"+f*o+\"V0.5H\"+y+\"V\"+f*o),x.attr(\"opacity\",1).attr(\"transform\",function(t){return s(_(t))}),A.attr(c+\"2\",f*u),S.attr(c,f*p).text(d),b.filter(nt).attr(\"fill\",\"none\").attr(\"font-size\",10).attr(\"font-family\",\"sans-serif\").attr(\"text-anchor\",t===W?\"start\":t===Q?\"end\":\"middle\"),b.each(function(){this.__axis=_})}return l.scale=function(t){return arguments.length?(n=t,l):n},l.ticks=function(){return e=G.call(arguments),l},l.tickArguments=function(t){return arguments.length?(e=null==t?[]:G.call(t),l):e.slice()},l.tickValues=function(t){return arguments.length?(r=null==t?null:G.call(t),l):r&&r.slice()},l.tickFormat=function(t){return arguments.length?(i=t,l):i},l.tickSize=function(t){return arguments.length?(u=o=+t,l):u},l.tickSizeInner=function(t){return arguments.length?(u=+t,l):u},l.tickSizeOuter=function(t){return arguments.length?(o=+t,l):o},l.tickPadding=function(t){return arguments.length?(a=+t,l):a},l}function rt(t){return et($,t)}function it(t){return et(W,t)}function ut(t){return et(Z,t)}function ot(t){return et(Q,t)}var at={value:function(){}};function ft(){for(var t,n=0,e=arguments.length,r={};n<e;++n){if(!(t=arguments[n]+\"\")||t in r)throw new Error(\"illegal type: \"+t);r[t]=[]}return new ct(r)}function ct(t){this._=t}function st(t,n){for(var e,r=0,i=t.length;r<i;++r)if((e=t[r]).name===n)return e.value}function lt(t,n,e){for(var r=0,i=t.length;r<i;++r)if(t[r].name===n){t[r]=at,t=t.slice(0,r).concat(t.slice(r+1));break}return null!=e&&t.push({name:n,value:e}),t}ct.prototype=ft.prototype={constructor:ct,on:function(t,n){var e,r,i=this._,u=(r=i,(t+\"\").trim().split(/^|\\s+/).map(function(t){var n=\"\",e=t.indexOf(\".\");if(e>=0&&(n=t.slice(e+1),t=t.slice(0,e)),t&&!r.hasOwnProperty(t))throw new Error(\"unknown type: \"+t);return{type:t,name:n}})),o=-1,a=u.length;if(!(arguments.length<2)){if(null!=n&&\"function\"!=typeof n)throw new Error(\"invalid callback: \"+n);for(;++o<a;)if(e=(t=u[o]).type)i[e]=lt(i[e],t.name,n);else if(null==n)for(e in i)i[e]=lt(i[e],t.name,null);return this}for(;++o<a;)if((e=(t=u[o]).type)&&(e=st(i[e],t.name)))return e},copy:function(){var t={},n=this._;for(var e in n)t[e]=n[e].slice();return new ct(t)},call:function(t,n){if((e=arguments.length-2)>0)for(var e,r,i=new Array(e),u=0;u<e;++u)i[u]=arguments[u+2];if(!this._.hasOwnProperty(t))throw new Error(\"unknown type: \"+t);for(u=0,e=(r=this._[t]).length;u<e;++u)r[u].value.apply(n,i)},apply:function(t,n,e){if(!this._.hasOwnProperty(t))throw new Error(\"unknown type: \"+t);for(var r=this._[t],i=0,u=r.length;i<u;++i)r[i].value.apply(n,e)}};var ht=ft,dt=\"http://www.w3.org/1999/xhtml\",pt={svg:\"http://www.w3.org/2000/svg\",xhtml:dt,xlink:\"http://www.w3.org/1999/xlink\",xml:\"http://www.w3.org/XML/1998/namespace\",xmlns:\"http://www.w3.org/2000/xmlns/\"},vt=function(t){var n=t+=\"\",e=n.indexOf(\":\");return e>=0&&\"xmlns\"!==(n=t.slice(0,e))&&(t=t.slice(e+1)),pt.hasOwnProperty(n)?{space:pt[n],local:t}:t};var gt=function(t){var n=vt(t);return(n.local?function(t){return function(){return this.ownerDocument.createElementNS(t.space,t.local)}}:function(t){return function(){var n=this.ownerDocument,e=this.namespaceURI;return e===dt&&n.documentElement.namespaceURI===dt?n.createElement(t):n.createElementNS(e,t)}})(n)};function yt(){}var _t=function(t){return null==t?yt:function(){return this.querySelector(t)}};function bt(){return[]}var mt=function(t){return null==t?bt:function(){return this.querySelectorAll(t)}},xt=function(t){return function(){return this.matches(t)}};if(\"undefined\"!=typeof document){var wt=document.documentElement;if(!wt.matches){var Mt=wt.webkitMatchesSelector||wt.msMatchesSelector||wt.mozMatchesSelector||wt.oMatchesSelector;xt=function(t){return function(){return Mt.call(this,t)}}}}var At=xt,St=function(t){return new Array(t.length)};function Tt(t,n){this.ownerDocument=t.ownerDocument,this.namespaceURI=t.namespaceURI,this._next=null,this._parent=t,this.__data__=n}Tt.prototype={constructor:Tt,appendChild:function(t){return this._parent.insertBefore(t,this._next)},insertBefore:function(t,n){return this._parent.insertBefore(t,n)},querySelector:function(t){return this._parent.querySelector(t)},querySelectorAll:function(t){return this._parent.querySelectorAll(t)}};var Nt=\"$\";function kt(t,n,e,r,i,u){for(var o,a=0,f=n.length,c=u.length;a<c;++a)(o=n[a])?(o.__data__=u[a],r[a]=o):e[a]=new Tt(t,u[a]);for(;a<f;++a)(o=n[a])&&(i[a]=o)}function Et(t,n,e,r,i,u,o){var a,f,c,s={},l=n.length,h=u.length,d=new Array(l);for(a=0;a<l;++a)(f=n[a])&&(d[a]=c=Nt+o.call(f,f.__data__,a,n),c in s?i[a]=f:s[c]=f);for(a=0;a<h;++a)(f=s[c=Nt+o.call(t,u[a],a,u)])?(r[a]=f,f.__data__=u[a],s[c]=null):e[a]=new Tt(t,u[a]);for(a=0;a<l;++a)(f=n[a])&&s[d[a]]===f&&(i[a]=f)}function Ct(t,n){return t<n?-1:t>n?1:t>=n?0:NaN}var Pt=function(t){return t.ownerDocument&&t.ownerDocument.defaultView||t.document&&t||t.defaultView};function zt(t,n){return t.style.getPropertyValue(n)||Pt(t).getComputedStyle(t,null).getPropertyValue(n)}function Rt(t){return t.trim().split(/^|\\s+/)}function Dt(t){return t.classList||new Lt(t)}function Lt(t){this._node=t,this._names=Rt(t.getAttribute(\"class\")||\"\")}function qt(t,n){for(var e=Dt(t),r=-1,i=n.length;++r<i;)e.add(n[r])}function Ut(t,n){for(var e=Dt(t),r=-1,i=n.length;++r<i;)e.remove(n[r])}Lt.prototype={add:function(t){this._names.indexOf(t)<0&&(this._names.push(t),this._node.setAttribute(\"class\",this._names.join(\" \")))},remove:function(t){var n=this._names.indexOf(t);n>=0&&(this._names.splice(n,1),this._node.setAttribute(\"class\",this._names.join(\" \")))},contains:function(t){return this._names.indexOf(t)>=0}};function Ot(){this.textContent=\"\"}function It(){this.innerHTML=\"\"}function Yt(){this.nextSibling&&this.parentNode.appendChild(this)}function Bt(){this.previousSibling&&this.parentNode.insertBefore(this,this.parentNode.firstChild)}function Ft(){return null}function jt(){var t=this.parentNode;t&&t.removeChild(this)}function Ht(){return this.parentNode.insertBefore(this.cloneNode(!1),this.nextSibling)}function Xt(){return this.parentNode.insertBefore(this.cloneNode(!0),this.nextSibling)}var Gt={},Vt=null;\"undefined\"!=typeof document&&(\"onmouseenter\"in document.documentElement||(Gt={mouseenter:\"mouseover\",mouseleave:\"mouseout\"}));function $t(t,n,e){return t=Wt(t,n,e),function(n){var e=n.relatedTarget;e&&(e===this||8&e.compareDocumentPosition(this))||t.call(this,n)}}function Wt(t,n,e){return function(r){var i=Vt;Vt=r;try{t.call(this,this.__data__,n,e)}finally{Vt=i}}}function Zt(t){return function(){var n=this.__on;if(n){for(var e,r=0,i=-1,u=n.length;r<u;++r)e=n[r],t.type&&e.type!==t.type||e.name!==t.name?n[++i]=e:this.removeEventListener(e.type,e.listener,e.capture);++i?n.length=i:delete this.__on}}}function Qt(t,n,e){var r=Gt.hasOwnProperty(t.type)?$t:Wt;return function(i,u,o){var a,f=this.__on,c=r(n,u,o);if(f)for(var s=0,l=f.length;s<l;++s)if((a=f[s]).type===t.type&&a.name===t.name)return this.removeEventListener(a.type,a.listener,a.capture),this.addEventListener(a.type,a.listener=c,a.capture=e),void(a.value=n);this.addEventListener(t.type,c,e),a={type:t.type,name:t.name,value:n,listener:c,capture:e},f?f.push(a):this.__on=[a]}}function Jt(t,n,e,r){var i=Vt;t.sourceEvent=Vt,Vt=t;try{return n.apply(e,r)}finally{Vt=i}}function Kt(t,n,e){var r=Pt(t),i=r.CustomEvent;\"function\"==typeof i?i=new i(n,e):(i=r.document.createEvent(\"Event\"),e?(i.initEvent(n,e.bubbles,e.cancelable),i.detail=e.detail):i.initEvent(n,!1,!1)),t.dispatchEvent(i)}var tn=[null];function nn(t,n){this._groups=t,this._parents=n}function en(){return new nn([[document.documentElement]],tn)}nn.prototype=en.prototype={constructor:nn,select:function(t){\"function\"!=typeof t&&(t=_t(t));for(var n=this._groups,e=n.length,r=new Array(e),i=0;i<e;++i)for(var u,o,a=n[i],f=a.length,c=r[i]=new Array(f),s=0;s<f;++s)(u=a[s])&&(o=t.call(u,u.__data__,s,a))&&(\"__data__\"in u&&(o.__data__=u.__data__),c[s]=o);return new nn(r,this._parents)},selectAll:function(t){\"function\"!=typeof t&&(t=mt(t));for(var n=this._groups,e=n.length,r=[],i=[],u=0;u<e;++u)for(var o,a=n[u],f=a.length,c=0;c<f;++c)(o=a[c])&&(r.push(t.call(o,o.__data__,c,a)),i.push(o));return new nn(r,i)},filter:function(t){\"function\"!=typeof t&&(t=At(t));for(var n=this._groups,e=n.length,r=new Array(e),i=0;i<e;++i)for(var u,o=n[i],a=o.length,f=r[i]=[],c=0;c<a;++c)(u=o[c])&&t.call(u,u.__data__,c,o)&&f.push(u);return new nn(r,this._parents)},data:function(t,n){if(!t)return p=new Array(this.size()),s=-1,this.each(function(t){p[++s]=t}),p;var e,r=n?Et:kt,i=this._parents,u=this._groups;\"function\"!=typeof t&&(e=t,t=function(){return e});for(var o=u.length,a=new Array(o),f=new Array(o),c=new Array(o),s=0;s<o;++s){var l=i[s],h=u[s],d=h.length,p=t.call(l,l&&l.__data__,s,i),v=p.length,g=f[s]=new Array(v),y=a[s]=new Array(v);r(l,h,g,y,c[s]=new Array(d),p,n);for(var _,b,m=0,x=0;m<v;++m)if(_=g[m]){for(m>=x&&(x=m+1);!(b=y[x])&&++x<v;);_._next=b||null}}return(a=new nn(a,i))._enter=f,a._exit=c,a},enter:function(){return new nn(this._enter||this._groups.map(St),this._parents)},exit:function(){return new nn(this._exit||this._groups.map(St),this._parents)},merge:function(t){for(var n=this._groups,e=t._groups,r=n.length,i=e.length,u=Math.min(r,i),o=new Array(r),a=0;a<u;++a)for(var f,c=n[a],s=e[a],l=c.length,h=o[a]=new Array(l),d=0;d<l;++d)(f=c[d]||s[d])&&(h[d]=f);for(;a<r;++a)o[a]=n[a];return new nn(o,this._parents)},order:function(){for(var t=this._groups,n=-1,e=t.length;++n<e;)for(var r,i=t[n],u=i.length-1,o=i[u];--u>=0;)(r=i[u])&&(o&&o!==r.nextSibling&&o.parentNode.insertBefore(r,o),o=r);return this},sort:function(t){function n(n,e){return n&&e?t(n.__data__,e.__data__):!n-!e}t||(t=Ct);for(var e=this._groups,r=e.length,i=new Array(r),u=0;u<r;++u){for(var o,a=e[u],f=a.length,c=i[u]=new Array(f),s=0;s<f;++s)(o=a[s])&&(c[s]=o);c.sort(n)}return new nn(i,this._parents).order()},call:function(){var t=arguments[0];return arguments[0]=this,t.apply(null,arguments),this},nodes:function(){var t=new Array(this.size()),n=-1;return this.each(function(){t[++n]=this}),t},node:function(){for(var t=this._groups,n=0,e=t.length;n<e;++n)for(var r=t[n],i=0,u=r.length;i<u;++i){var o=r[i];if(o)return o}return null},size:function(){var t=0;return this.each(function(){++t}),t},empty:function(){return!this.node()},each:function(t){for(var n=this._groups,e=0,r=n.length;e<r;++e)for(var i,u=n[e],o=0,a=u.length;o<a;++o)(i=u[o])&&t.call(i,i.__data__,o,u);return this},attr:function(t,n){var e=vt(t);if(arguments.length<2){var r=this.node();return e.local?r.getAttributeNS(e.space,e.local):r.getAttribute(e)}return this.each((null==n?e.local?function(t){return function(){this.removeAttributeNS(t.space,t.local)}}:function(t){return function(){this.removeAttribute(t)}}:\"function\"==typeof n?e.local?function(t,n){return function(){var e=n.apply(this,arguments);null==e?this.removeAttributeNS(t.space,t.local):this.setAttributeNS(t.space,t.local,e)}}:function(t,n){return function(){var e=n.apply(this,arguments);null==e?this.removeAttribute(t):this.setAttribute(t,e)}}:e.local?function(t,n){return function(){this.setAttributeNS(t.space,t.local,n)}}:function(t,n){return function(){this.setAttribute(t,n)}})(e,n))},style:function(t,n,e){return arguments.length>1?this.each((null==n?function(t){return function(){this.style.removeProperty(t)}}:\"function\"==typeof n?function(t,n,e){return function(){var r=n.apply(this,arguments);null==r?this.style.removeProperty(t):this.style.setProperty(t,r,e)}}:function(t,n,e){return function(){this.style.setProperty(t,n,e)}})(t,n,null==e?\"\":e)):zt(this.node(),t)},property:function(t,n){return arguments.length>1?this.each((null==n?function(t){return function(){delete this[t]}}:\"function\"==typeof n?function(t,n){return function(){var e=n.apply(this,arguments);null==e?delete this[t]:this[t]=e}}:function(t,n){return function(){this[t]=n}})(t,n)):this.node()[t]},classed:function(t,n){var e=Rt(t+\"\");if(arguments.length<2){for(var r=Dt(this.node()),i=-1,u=e.length;++i<u;)if(!r.contains(e[i]))return!1;return!0}return this.each((\"function\"==typeof n?function(t,n){return function(){(n.apply(this,arguments)?qt:Ut)(this,t)}}:n?function(t){return function(){qt(this,t)}}:function(t){return function(){Ut(this,t)}})(e,n))},text:function(t){return arguments.length?this.each(null==t?Ot:(\"function\"==typeof t?function(t){return function(){var n=t.apply(this,arguments);this.textContent=null==n?\"\":n}}:function(t){return function(){this.textContent=t}})(t)):this.node().textContent},html:function(t){return arguments.length?this.each(null==t?It:(\"function\"==typeof t?function(t){return function(){var n=t.apply(this,arguments);this.innerHTML=null==n?\"\":n}}:function(t){return function(){this.innerHTML=t}})(t)):this.node().innerHTML},raise:function(){return this.each(Yt)},lower:function(){return this.each(Bt)},append:function(t){var n=\"function\"==typeof t?t:gt(t);return this.select(function(){return this.appendChild(n.apply(this,arguments))})},insert:function(t,n){var e=\"function\"==typeof t?t:gt(t),r=null==n?Ft:\"function\"==typeof n?n:_t(n);return this.select(function(){return this.insertBefore(e.apply(this,arguments),r.apply(this,arguments)||null)})},remove:function(){return this.each(jt)},clone:function(t){return this.select(t?Xt:Ht)},datum:function(t){return arguments.length?this.property(\"__data__\",t):this.node().__data__},on:function(t,n,e){var r,i,u=function(t){return t.trim().split(/^|\\s+/).map(function(t){var n=\"\",e=t.indexOf(\".\");return e>=0&&(n=t.slice(e+1),t=t.slice(0,e)),{type:t,name:n}})}(t+\"\"),o=u.length;if(!(arguments.length<2)){for(a=n?Qt:Zt,null==e&&(e=!1),r=0;r<o;++r)this.each(a(u[r],n,e));return this}var a=this.node().__on;if(a)for(var f,c=0,s=a.length;c<s;++c)for(r=0,f=a[c];r<o;++r)if((i=u[r]).type===f.type&&i.name===f.name)return f.value},dispatch:function(t,n){return this.each((\"function\"==typeof n?function(t,n){return function(){return Kt(this,t,n.apply(this,arguments))}}:function(t,n){return function(){return Kt(this,t,n)}})(t,n))}};var rn=en,un=function(t){return\"string\"==typeof t?new nn([[document.querySelector(t)]],[document.documentElement]):new nn([[t]],tn)},on=function(t){return un(gt(t).call(document.documentElement))},an=0;function fn(){return new cn}function cn(){this._=\"@\"+(++an).toString(36)}cn.prototype=fn.prototype={constructor:cn,get:function(t){for(var n=this._;!(n in t);)if(!(t=t.parentNode))return;return t[n]},set:function(t,n){return t[this._]=n},remove:function(t){return this._ in t&&delete t[this._]},toString:function(){return this._}};var sn=function(){for(var t,n=Vt;t=n.sourceEvent;)n=t;return n},ln=function(t,n){var e=t.ownerSVGElement||t;if(e.createSVGPoint){var r=e.createSVGPoint();return r.x=n.clientX,r.y=n.clientY,[(r=r.matrixTransform(t.getScreenCTM().inverse())).x,r.y]}var i=t.getBoundingClientRect();return[n.clientX-i.left-t.clientLeft,n.clientY-i.top-t.clientTop]},hn=function(t){var n=sn();return n.changedTouches&&(n=n.changedTouches[0]),ln(t,n)},dn=function(t){return\"string\"==typeof t?new nn([document.querySelectorAll(t)],[document.documentElement]):new nn([null==t?[]:t],tn)},pn=function(t,n,e){arguments.length<3&&(e=n,n=sn().changedTouches);for(var r,i=0,u=n?n.length:0;i<u;++i)if((r=n[i]).identifier===e)return ln(t,r);return null},vn=function(t,n){null==n&&(n=sn().touches);for(var e=0,r=n?n.length:0,i=new Array(r);e<r;++e)i[e]=ln(t,n[e]);return i};function gn(){Vt.stopImmediatePropagation()}var yn=function(){Vt.preventDefault(),Vt.stopImmediatePropagation()},_n=function(t){var n=t.document.documentElement,e=un(t).on(\"dragstart.drag\",yn,!0);\"onselectstart\"in n?e.on(\"selectstart.drag\",yn,!0):(n.__noselect=n.style.MozUserSelect,n.style.MozUserSelect=\"none\")};function bn(t,n){var e=t.document.documentElement,r=un(t).on(\"dragstart.drag\",null);n&&(r.on(\"click.drag\",yn,!0),setTimeout(function(){r.on(\"click.drag\",null)},0)),\"onselectstart\"in e?r.on(\"selectstart.drag\",null):(e.style.MozUserSelect=e.__noselect,delete e.__noselect)}var mn=function(t){return function(){return t}};function xn(t,n,e,r,i,u,o,a,f,c){this.target=t,this.type=n,this.subject=e,this.identifier=r,this.active=i,this.x=u,this.y=o,this.dx=a,this.dy=f,this._=c}function wn(){return!Vt.button}function Mn(){return this.parentNode}function An(t){return null==t?{x:Vt.x,y:Vt.y}:t}function Sn(){return\"ontouchstart\"in this}xn.prototype.on=function(){var t=this._.on.apply(this._,arguments);return t===this._?this:t};var Tn=function(){var t,n,e,r,i=wn,u=Mn,o=An,a=Sn,f={},c=ht(\"start\",\"drag\",\"end\"),s=0,l=0;function h(t){t.on(\"mousedown.drag\",d).filter(a).on(\"touchstart.drag\",g).on(\"touchmove.drag\",y).on(\"touchend.drag touchcancel.drag\",_).style(\"touch-action\",\"none\").style(\"-webkit-tap-highlight-color\",\"rgba(0,0,0,0)\")}function d(){if(!r&&i.apply(this,arguments)){var o=b(\"mouse\",u.apply(this,arguments),hn,this,arguments);o&&(un(Vt.view).on(\"mousemove.drag\",p,!0).on(\"mouseup.drag\",v,!0),_n(Vt.view),gn(),e=!1,t=Vt.clientX,n=Vt.clientY,o(\"start\"))}}function p(){if(yn(),!e){var r=Vt.clientX-t,i=Vt.clientY-n;e=r*r+i*i>l}f.mouse(\"drag\")}function v(){un(Vt.view).on(\"mousemove.drag mouseup.drag\",null),bn(Vt.view,e),yn(),f.mouse(\"end\")}function g(){if(i.apply(this,arguments)){var t,n,e=Vt.changedTouches,r=u.apply(this,arguments),o=e.length;for(t=0;t<o;++t)(n=b(e[t].identifier,r,pn,this,arguments))&&(gn(),n(\"start\"))}}function y(){var t,n,e=Vt.changedTouches,r=e.length;for(t=0;t<r;++t)(n=f[e[t].identifier])&&(yn(),n(\"drag\"))}function _(){var t,n,e=Vt.changedTouches,i=e.length;for(r&&clearTimeout(r),r=setTimeout(function(){r=null},500),t=0;t<i;++t)(n=f[e[t].identifier])&&(gn(),n(\"end\"))}function b(t,n,e,r,i){var u,a,l,d=e(n,t),p=c.copy();if(Jt(new xn(h,\"beforestart\",u,t,s,d[0],d[1],0,0,p),function(){return null!=(Vt.subject=u=o.apply(r,i))&&(a=u.x-d[0]||0,l=u.y-d[1]||0,!0)}))return function o(c){var v,g=d;switch(c){case\"start\":f[t]=o,v=s++;break;case\"end\":delete f[t],--s;case\"drag\":d=e(n,t),v=s}Jt(new xn(h,c,u,t,v,d[0]+a,d[1]+l,d[0]-g[0],d[1]-g[1],p),p.apply,p,[c,r,i])}}return h.filter=function(t){return arguments.length?(i=\"function\"==typeof t?t:mn(!!t),h):i},h.container=function(t){return arguments.length?(u=\"function\"==typeof t?t:mn(t),h):u},h.subject=function(t){return arguments.length?(o=\"function\"==typeof t?t:mn(t),h):o},h.touchable=function(t){return arguments.length?(a=\"function\"==typeof t?t:mn(!!t),h):a},h.on=function(){var t=c.on.apply(c,arguments);return t===c?h:t},h.clickDistance=function(t){return arguments.length?(l=(t=+t)*t,h):Math.sqrt(l)},h},Nn=function(t,n,e){t.prototype=n.prototype=e,e.constructor=t};function kn(t,n){var e=Object.create(t.prototype);for(var r in n)e[r]=n[r];return e}function En(){}var Cn=\"\\\\s*([+-]?\\\\d+)\\\\s*\",Pn=\"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",zn=\"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",Rn=/^#([0-9a-f]{3})$/,Dn=/^#([0-9a-f]{6})$/,Ln=new RegExp(\"^rgb\\\\(\"+[Cn,Cn,Cn]+\"\\\\)$\"),qn=new RegExp(\"^rgb\\\\(\"+[zn,zn,zn]+\"\\\\)$\"),Un=new RegExp(\"^rgba\\\\(\"+[Cn,Cn,Cn,Pn]+\"\\\\)$\"),On=new RegExp(\"^rgba\\\\(\"+[zn,zn,zn,Pn]+\"\\\\)$\"),In=new RegExp(\"^hsl\\\\(\"+[Pn,zn,zn]+\"\\\\)$\"),Yn=new RegExp(\"^hsla\\\\(\"+[Pn,zn,zn,Pn]+\"\\\\)$\"),Bn={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};function Fn(t){var n;return t=(t+\"\").trim().toLowerCase(),(n=Rn.exec(t))?new Vn((n=parseInt(n[1],16))>>8&15|n>>4&240,n>>4&15|240&n,(15&n)<<4|15&n,1):(n=Dn.exec(t))?jn(parseInt(n[1],16)):(n=Ln.exec(t))?new Vn(n[1],n[2],n[3],1):(n=qn.exec(t))?new Vn(255*n[1]/100,255*n[2]/100,255*n[3]/100,1):(n=Un.exec(t))?Hn(n[1],n[2],n[3],n[4]):(n=On.exec(t))?Hn(255*n[1]/100,255*n[2]/100,255*n[3]/100,n[4]):(n=In.exec(t))?$n(n[1],n[2]/100,n[3]/100,1):(n=Yn.exec(t))?$n(n[1],n[2]/100,n[3]/100,n[4]):Bn.hasOwnProperty(t)?jn(Bn[t]):\"transparent\"===t?new Vn(NaN,NaN,NaN,0):null}function jn(t){return new Vn(t>>16&255,t>>8&255,255&t,1)}function Hn(t,n,e,r){return r<=0&&(t=n=e=NaN),new Vn(t,n,e,r)}function Xn(t){return t instanceof En||(t=Fn(t)),t?new Vn((t=t.rgb()).r,t.g,t.b,t.opacity):new Vn}function Gn(t,n,e,r){return 1===arguments.length?Xn(t):new Vn(t,n,e,null==r?1:r)}function Vn(t,n,e,r){this.r=+t,this.g=+n,this.b=+e,this.opacity=+r}function $n(t,n,e,r){return r<=0?t=n=e=NaN:e<=0||e>=1?t=n=NaN:n<=0&&(t=NaN),new Zn(t,n,e,r)}function Wn(t,n,e,r){return 1===arguments.length?function(t){if(t instanceof Zn)return new Zn(t.h,t.s,t.l,t.opacity);if(t instanceof En||(t=Fn(t)),!t)return new Zn;if(t instanceof Zn)return t;var n=(t=t.rgb()).r/255,e=t.g/255,r=t.b/255,i=Math.min(n,e,r),u=Math.max(n,e,r),o=NaN,a=u-i,f=(u+i)/2;return a?(o=n===u?(e-r)/a+6*(e<r):e===u?(r-n)/a+2:(n-e)/a+4,a/=f<.5?u+i:2-u-i,o*=60):a=f>0&&f<1?0:o,new Zn(o,a,f,t.opacity)}(t):new Zn(t,n,e,null==r?1:r)}function Zn(t,n,e,r){this.h=+t,this.s=+n,this.l=+e,this.opacity=+r}function Qn(t,n,e){return 255*(t<60?n+(e-n)*t/60:t<180?e:t<240?n+(e-n)*(240-t)/60:n)}Nn(En,Fn,{displayable:function(){return this.rgb().displayable()},toString:function(){return this.rgb()+\"\"}}),Nn(Vn,Gn,kn(En,{brighter:function(t){return t=null==t?1/.7:Math.pow(1/.7,t),new Vn(this.r*t,this.g*t,this.b*t,this.opacity)},darker:function(t){return t=null==t?.7:Math.pow(.7,t),new Vn(this.r*t,this.g*t,this.b*t,this.opacity)},rgb:function(){return this},displayable:function(){return 0<=this.r&&this.r<=255&&0<=this.g&&this.g<=255&&0<=this.b&&this.b<=255&&0<=this.opacity&&this.opacity<=1},toString:function(){var t=this.opacity;return(1===(t=isNaN(t)?1:Math.max(0,Math.min(1,t)))?\"rgb(\":\"rgba(\")+Math.max(0,Math.min(255,Math.round(this.r)||0))+\", \"+Math.max(0,Math.min(255,Math.round(this.g)||0))+\", \"+Math.max(0,Math.min(255,Math.round(this.b)||0))+(1===t?\")\":\", \"+t+\")\")}})),Nn(Zn,Wn,kn(En,{brighter:function(t){return t=null==t?1/.7:Math.pow(1/.7,t),new Zn(this.h,this.s,this.l*t,this.opacity)},darker:function(t){return t=null==t?.7:Math.pow(.7,t),new Zn(this.h,this.s,this.l*t,this.opacity)},rgb:function(){var t=this.h%360+360*(this.h<0),n=isNaN(t)||isNaN(this.s)?0:this.s,e=this.l,r=e+(e<.5?e:1-e)*n,i=2*e-r;return new Vn(Qn(t>=240?t-240:t+120,i,r),Qn(t,i,r),Qn(t<120?t+240:t-120,i,r),this.opacity)},displayable:function(){return(0<=this.s&&this.s<=1||isNaN(this.s))&&0<=this.l&&this.l<=1&&0<=this.opacity&&this.opacity<=1}}));var Jn=Math.PI/180,Kn=180/Math.PI,te=.95047,ne=1,ee=1.08883,re=4/29,ie=6/29,ue=3*ie*ie,oe=ie*ie*ie;function ae(t){if(t instanceof ce)return new ce(t.l,t.a,t.b,t.opacity);if(t instanceof ve){var n=t.h*Jn;return new ce(t.l,Math.cos(n)*t.c,Math.sin(n)*t.c,t.opacity)}t instanceof Vn||(t=Xn(t));var e=de(t.r),r=de(t.g),i=de(t.b),u=se((.4124564*e+.3575761*r+.1804375*i)/te),o=se((.2126729*e+.7151522*r+.072175*i)/ne);return new ce(116*o-16,500*(u-o),200*(o-se((.0193339*e+.119192*r+.9503041*i)/ee)),t.opacity)}function fe(t,n,e,r){return 1===arguments.length?ae(t):new ce(t,n,e,null==r?1:r)}function ce(t,n,e,r){this.l=+t,this.a=+n,this.b=+e,this.opacity=+r}function se(t){return t>oe?Math.pow(t,1/3):t/ue+re}function le(t){return t>ie?t*t*t:ue*(t-re)}function he(t){return 255*(t<=.0031308?12.92*t:1.055*Math.pow(t,1/2.4)-.055)}function de(t){return(t/=255)<=.04045?t/12.92:Math.pow((t+.055)/1.055,2.4)}function pe(t,n,e,r){return 1===arguments.length?function(t){if(t instanceof ve)return new ve(t.h,t.c,t.l,t.opacity);t instanceof ce||(t=ae(t));var n=Math.atan2(t.b,t.a)*Kn;return new ve(n<0?n+360:n,Math.sqrt(t.a*t.a+t.b*t.b),t.l,t.opacity)}(t):new ve(t,n,e,null==r?1:r)}function ve(t,n,e,r){this.h=+t,this.c=+n,this.l=+e,this.opacity=+r}Nn(ce,fe,kn(En,{brighter:function(t){return new ce(this.l+18*(null==t?1:t),this.a,this.b,this.opacity)},darker:function(t){return new ce(this.l-18*(null==t?1:t),this.a,this.b,this.opacity)},rgb:function(){var t=(this.l+16)/116,n=isNaN(this.a)?t:t+this.a/500,e=isNaN(this.b)?t:t-this.b/200;return t=ne*le(t),new Vn(he(3.2404542*(n=te*le(n))-1.5371385*t-.4985314*(e=ee*le(e))),he(-.969266*n+1.8760108*t+.041556*e),he(.0556434*n-.2040259*t+1.0572252*e),this.opacity)}})),Nn(ve,pe,kn(En,{brighter:function(t){return new ve(this.h,this.c,this.l+18*(null==t?1:t),this.opacity)},darker:function(t){return new ve(this.h,this.c,this.l-18*(null==t?1:t),this.opacity)},rgb:function(){return ae(this).rgb()}}));var ge=-.29227,ye=-.90649,_e=1.97294,be=_e*ye,me=1.78277*_e,xe=1.78277*ge- -.14861*ye;function we(t,n,e,r){return 1===arguments.length?function(t){if(t instanceof Me)return new Me(t.h,t.s,t.l,t.opacity);t instanceof Vn||(t=Xn(t));var n=t.r/255,e=t.g/255,r=t.b/255,i=(xe*r+be*n-me*e)/(xe+be-me),u=r-i,o=(_e*(e-i)-ge*u)/ye,a=Math.sqrt(o*o+u*u)/(_e*i*(1-i)),f=a?Math.atan2(o,u)*Kn-120:NaN;return new Me(f<0?f+360:f,a,i,t.opacity)}(t):new Me(t,n,e,null==r?1:r)}function Me(t,n,e,r){this.h=+t,this.s=+n,this.l=+e,this.opacity=+r}function Ae(t,n,e,r,i){var u=t*t,o=u*t;return((1-3*t+3*u-o)*n+(4-6*u+3*o)*e+(1+3*t+3*u-3*o)*r+o*i)/6}Nn(Me,we,kn(En,{brighter:function(t){return t=null==t?1/.7:Math.pow(1/.7,t),new Me(this.h,this.s,this.l*t,this.opacity)},darker:function(t){return t=null==t?.7:Math.pow(.7,t),new Me(this.h,this.s,this.l*t,this.opacity)},rgb:function(){var t=isNaN(this.h)?0:(this.h+120)*Jn,n=+this.l,e=isNaN(this.s)?0:this.s*n*(1-n),r=Math.cos(t),i=Math.sin(t);return new Vn(255*(n+e*(-.14861*r+1.78277*i)),255*(n+e*(ge*r+ye*i)),255*(n+e*(_e*r)),this.opacity)}}));var Se=function(t){var n=t.length-1;return function(e){var r=e<=0?e=0:e>=1?(e=1,n-1):Math.floor(e*n),i=t[r],u=t[r+1],o=r>0?t[r-1]:2*i-u,a=r<n-1?t[r+2]:2*u-i;return Ae((e-r/n)*n,o,i,u,a)}},Te=function(t){var n=t.length;return function(e){var r=Math.floor(((e%=1)<0?++e:e)*n),i=t[(r+n-1)%n],u=t[r%n],o=t[(r+1)%n],a=t[(r+2)%n];return Ae((e-r/n)*n,i,u,o,a)}},Ne=function(t){return function(){return t}};function ke(t,n){return function(e){return t+e*n}}function Ee(t,n){var e=n-t;return e?ke(t,e>180||e<-180?e-360*Math.round(e/360):e):Ne(isNaN(t)?n:t)}function Ce(t){return 1==(t=+t)?Pe:function(n,e){return e-n?function(t,n,e){return t=Math.pow(t,e),n=Math.pow(n,e)-t,e=1/e,function(r){return Math.pow(t+r*n,e)}}(n,e,t):Ne(isNaN(n)?e:n)}}function Pe(t,n){var e=n-t;return e?ke(t,e):Ne(isNaN(t)?n:t)}var ze=function t(n){var e=Ce(n);function r(t,n){var r=e((t=Gn(t)).r,(n=Gn(n)).r),i=e(t.g,n.g),u=e(t.b,n.b),o=Pe(t.opacity,n.opacity);return function(n){return t.r=r(n),t.g=i(n),t.b=u(n),t.opacity=o(n),t+\"\"}}return r.gamma=t,r}(1);function Re(t){return function(n){var e,r,i=n.length,u=new Array(i),o=new Array(i),a=new Array(i);for(e=0;e<i;++e)r=Gn(n[e]),u[e]=r.r||0,o[e]=r.g||0,a[e]=r.b||0;return u=t(u),o=t(o),a=t(a),r.opacity=1,function(t){return r.r=u(t),r.g=o(t),r.b=a(t),r+\"\"}}}var De=Re(Se),Le=Re(Te),qe=function(t,n){var e,r=n?n.length:0,i=t?Math.min(r,t.length):0,u=new Array(i),o=new Array(r);for(e=0;e<i;++e)u[e]=Ve(t[e],n[e]);for(;e<r;++e)o[e]=n[e];return function(t){for(e=0;e<i;++e)o[e]=u[e](t);return o}},Ue=function(t,n){var e=new Date;return n-=t=+t,function(r){return e.setTime(t+n*r),e}},Oe=function(t,n){return n-=t=+t,function(e){return t+n*e}},Ie=function(t,n){var e,r={},i={};for(e in null!==t&&\"object\"==typeof t||(t={}),null!==n&&\"object\"==typeof n||(n={}),n)e in t?r[e]=Ve(t[e],n[e]):i[e]=n[e];return function(t){for(e in r)i[e]=r[e](t);return i}},Ye=/[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,Be=new RegExp(Ye.source,\"g\");var Fe,je,He,Xe,Ge=function(t,n){var e,r,i,u=Ye.lastIndex=Be.lastIndex=0,o=-1,a=[],f=[];for(t+=\"\",n+=\"\";(e=Ye.exec(t))&&(r=Be.exec(n));)(i=r.index)>u&&(i=n.slice(u,i),a[o]?a[o]+=i:a[++o]=i),(e=e[0])===(r=r[0])?a[o]?a[o]+=r:a[++o]=r:(a[++o]=null,f.push({i:o,x:Oe(e,r)})),u=Be.lastIndex;return u<n.length&&(i=n.slice(u),a[o]?a[o]+=i:a[++o]=i),a.length<2?f[0]?function(t){return function(n){return t(n)+\"\"}}(f[0].x):function(t){return function(){return t}}(n):(n=f.length,function(t){for(var e,r=0;r<n;++r)a[(e=f[r]).i]=e.x(t);return a.join(\"\")})},Ve=function(t,n){var e,r=typeof n;return null==n||\"boolean\"===r?Ne(n):(\"number\"===r?Oe:\"string\"===r?(e=Fn(n))?(n=e,ze):Ge:n instanceof Fn?ze:n instanceof Date?Ue:Array.isArray(n)?qe:\"function\"!=typeof n.valueOf&&\"function\"!=typeof n.toString||isNaN(n)?Ie:Oe)(t,n)},$e=function(t,n){return n-=t=+t,function(e){return Math.round(t+n*e)}},We=180/Math.PI,Ze={translateX:0,translateY:0,rotate:0,skewX:0,scaleX:1,scaleY:1},Qe=function(t,n,e,r,i,u){var o,a,f;return(o=Math.sqrt(t*t+n*n))&&(t/=o,n/=o),(f=t*e+n*r)&&(e-=t*f,r-=n*f),(a=Math.sqrt(e*e+r*r))&&(e/=a,r/=a,f/=a),t*r<n*e&&(t=-t,n=-n,f=-f,o=-o),{translateX:i,translateY:u,rotate:Math.atan2(n,t)*We,skewX:Math.atan(f)*We,scaleX:o,scaleY:a}};function Je(t,n,e,r){function i(t){return t.length?t.pop()+\" \":\"\"}return function(u,o){var a=[],f=[];return u=t(u),o=t(o),function(t,r,i,u,o,a){if(t!==i||r!==u){var f=o.push(\"translate(\",null,n,null,e);a.push({i:f-4,x:Oe(t,i)},{i:f-2,x:Oe(r,u)})}else(i||u)&&o.push(\"translate(\"+i+n+u+e)}(u.translateX,u.translateY,o.translateX,o.translateY,a,f),function(t,n,e,u){t!==n?(t-n>180?n+=360:n-t>180&&(t+=360),u.push({i:e.push(i(e)+\"rotate(\",null,r)-2,x:Oe(t,n)})):n&&e.push(i(e)+\"rotate(\"+n+r)}(u.rotate,o.rotate,a,f),function(t,n,e,u){t!==n?u.push({i:e.push(i(e)+\"skewX(\",null,r)-2,x:Oe(t,n)}):n&&e.push(i(e)+\"skewX(\"+n+r)}(u.skewX,o.skewX,a,f),function(t,n,e,r,u,o){if(t!==e||n!==r){var a=u.push(i(u)+\"scale(\",null,\",\",null,\")\");o.push({i:a-4,x:Oe(t,e)},{i:a-2,x:Oe(n,r)})}else 1===e&&1===r||u.push(i(u)+\"scale(\"+e+\",\"+r+\")\")}(u.scaleX,u.scaleY,o.scaleX,o.scaleY,a,f),u=o=null,function(t){for(var n,e=-1,r=f.length;++e<r;)a[(n=f[e]).i]=n.x(t);return a.join(\"\")}}}var Ke=Je(function(t){return\"none\"===t?Ze:(Fe||(Fe=document.createElement(\"DIV\"),je=document.documentElement,He=document.defaultView),Fe.style.transform=t,t=He.getComputedStyle(je.appendChild(Fe),null).getPropertyValue(\"transform\"),je.removeChild(Fe),t=t.slice(7,-1).split(\",\"),Qe(+t[0],+t[1],+t[2],+t[3],+t[4],+t[5]))},\"px, \",\"px)\",\"deg)\"),tr=Je(function(t){return null==t?Ze:(Xe||(Xe=document.createElementNS(\"http://www.w3.org/2000/svg\",\"g\")),Xe.setAttribute(\"transform\",t),(t=Xe.transform.baseVal.consolidate())?(t=t.matrix,Qe(t.a,t.b,t.c,t.d,t.e,t.f)):Ze)},\", \",\")\",\")\"),nr=Math.SQRT2;function er(t){return((t=Math.exp(t))+1/t)/2}var rr=function(t,n){var e,r,i=t[0],u=t[1],o=t[2],a=n[0],f=n[1],c=n[2],s=a-i,l=f-u,h=s*s+l*l;if(h<1e-12)r=Math.log(c/o)/nr,e=function(t){return[i+t*s,u+t*l,o*Math.exp(nr*t*r)]};else{var d=Math.sqrt(h),p=(c*c-o*o+4*h)/(2*o*2*d),v=(c*c-o*o-4*h)/(2*c*2*d),g=Math.log(Math.sqrt(p*p+1)-p),y=Math.log(Math.sqrt(v*v+1)-v);r=(y-g)/nr,e=function(t){var n,e=t*r,a=er(g),f=o/(2*d)*(a*(n=nr*e+g,((n=Math.exp(2*n))-1)/(n+1))-function(t){return((t=Math.exp(t))-1/t)/2}(g));return[i+f*s,u+f*l,o*a/er(nr*e+g)]}}return e.duration=1e3*r,e};function ir(t){return function(n,e){var r=t((n=Wn(n)).h,(e=Wn(e)).h),i=Pe(n.s,e.s),u=Pe(n.l,e.l),o=Pe(n.opacity,e.opacity);return function(t){return n.h=r(t),n.s=i(t),n.l=u(t),n.opacity=o(t),n+\"\"}}}var ur=ir(Ee),or=ir(Pe);function ar(t,n){var e=Pe((t=fe(t)).l,(n=fe(n)).l),r=Pe(t.a,n.a),i=Pe(t.b,n.b),u=Pe(t.opacity,n.opacity);return function(n){return t.l=e(n),t.a=r(n),t.b=i(n),t.opacity=u(n),t+\"\"}}function fr(t){return function(n,e){var r=t((n=pe(n)).h,(e=pe(e)).h),i=Pe(n.c,e.c),u=Pe(n.l,e.l),o=Pe(n.opacity,e.opacity);return function(t){return n.h=r(t),n.c=i(t),n.l=u(t),n.opacity=o(t),n+\"\"}}}var cr=fr(Ee),sr=fr(Pe);function lr(t){return function n(e){function r(n,r){var i=t((n=we(n)).h,(r=we(r)).h),u=Pe(n.s,r.s),o=Pe(n.l,r.l),a=Pe(n.opacity,r.opacity);return function(t){return n.h=i(t),n.s=u(t),n.l=o(Math.pow(t,e)),n.opacity=a(t),n+\"\"}}return e=+e,r.gamma=n,r}(1)}var hr,dr,pr=lr(Ee),vr=lr(Pe),gr=function(t,n){for(var e=new Array(n),r=0;r<n;++r)e[r]=t(r/(n-1));return e},yr=0,_r=0,br=0,mr=1e3,xr=0,wr=0,Mr=0,Ar=\"object\"==typeof performance&&performance.now?performance:Date,Sr=\"object\"==typeof window&&window.requestAnimationFrame?window.requestAnimationFrame.bind(window):function(t){setTimeout(t,17)};function Tr(){return wr||(Sr(Nr),wr=Ar.now()+Mr)}function Nr(){wr=0}function kr(){this._call=this._time=this._next=null}function Er(t,n,e){var r=new kr;return r.restart(t,n,e),r}function Cr(){Tr(),++yr;for(var t,n=hr;n;)(t=wr-n._time)>=0&&n._call.call(null,t),n=n._next;--yr}function Pr(){wr=(xr=Ar.now())+Mr,yr=_r=0;try{Cr()}finally{yr=0,function(){var t,n,e=hr,r=1/0;for(;e;)e._call?(r>e._time&&(r=e._time),t=e,e=e._next):(n=e._next,e._next=null,e=t?t._next=n:hr=n);dr=t,Rr(r)}(),wr=0}}function zr(){var t=Ar.now(),n=t-xr;n>mr&&(Mr-=n,xr=t)}function Rr(t){yr||(_r&&(_r=clearTimeout(_r)),t-wr>24?(t<1/0&&(_r=setTimeout(Pr,t-Ar.now()-Mr)),br&&(br=clearInterval(br))):(br||(xr=Ar.now(),br=setInterval(zr,mr)),yr=1,Sr(Pr)))}kr.prototype=Er.prototype={constructor:kr,restart:function(t,n,e){if(\"function\"!=typeof t)throw new TypeError(\"callback is not a function\");e=(null==e?Tr():+e)+(null==n?0:+n),this._next||dr===this||(dr?dr._next=this:hr=this,dr=this),this._call=t,this._time=e,Rr()},stop:function(){this._call&&(this._call=null,this._time=1/0,Rr())}};var Dr=function(t,n,e){var r=new kr;return n=null==n?0:+n,r.restart(function(e){r.stop(),t(e+n)},n,e),r},Lr=function(t,n,e){var r=new kr,i=n;return null==n?(r.restart(t,n,e),r):(n=+n,e=null==e?Tr():+e,r.restart(function u(o){o+=i,r.restart(u,i+=n,e),t(o)},n,e),r)},qr=ht(\"start\",\"end\",\"interrupt\"),Ur=[],Or=0,Ir=1,Yr=2,Br=3,Fr=4,jr=5,Hr=6,Xr=function(t,n,e,r,i,u){var o=t.__transition;if(o){if(e in o)return}else t.__transition={};!function(t,n,e){var r,i=t.__transition;function u(f){var c,s,l,h;if(e.state!==Ir)return a();for(c in i)if((h=i[c]).name===e.name){if(h.state===Br)return Dr(u);h.state===Fr?(h.state=Hr,h.timer.stop(),h.on.call(\"interrupt\",t,t.__data__,h.index,h.group),delete i[c]):+c<n&&(h.state=Hr,h.timer.stop(),delete i[c])}if(Dr(function(){e.state===Br&&(e.state=Fr,e.timer.restart(o,e.delay,e.time),o(f))}),e.state=Yr,e.on.call(\"start\",t,t.__data__,e.index,e.group),e.state===Yr){for(e.state=Br,r=new Array(l=e.tween.length),c=0,s=-1;c<l;++c)(h=e.tween[c].value.call(t,t.__data__,e.index,e.group))&&(r[++s]=h);r.length=s+1}}function o(n){for(var i=n<e.duration?e.ease.call(null,n/e.duration):(e.timer.restart(a),e.state=jr,1),u=-1,o=r.length;++u<o;)r[u].call(null,i);e.state===jr&&(e.on.call(\"end\",t,t.__data__,e.index,e.group),a())}function a(){for(var r in e.state=Hr,e.timer.stop(),delete i[n],i)return;delete t.__transition}i[n]=e,e.timer=Er(function(t){e.state=Ir,e.timer.restart(u,e.delay,e.time),e.delay<=t&&u(t-e.delay)},0,e.time)}(t,e,{name:n,index:r,group:i,on:qr,tween:Ur,time:u.time,delay:u.delay,duration:u.duration,ease:u.ease,timer:null,state:Or})};function Gr(t,n){var e=$r(t,n);if(e.state>Or)throw new Error(\"too late; already scheduled\");return e}function Vr(t,n){var e=$r(t,n);if(e.state>Yr)throw new Error(\"too late; already started\");return e}function $r(t,n){var e=t.__transition;if(!e||!(e=e[n]))throw new Error(\"transition not found\");return e}var Wr=function(t,n){var e,r,i,u=t.__transition,o=!0;if(u){for(i in n=null==n?null:n+\"\",u)(e=u[i]).name===n?(r=e.state>Yr&&e.state<jr,e.state=Hr,e.timer.stop(),r&&e.on.call(\"interrupt\",t,t.__data__,e.index,e.group),delete u[i]):o=!1;o&&delete t.__transition}};function Zr(t,n,e){var r=t._id;return t.each(function(){var t=Vr(this,r);(t.value||(t.value={}))[n]=e.apply(this,arguments)}),function(t){return $r(t,r).value[n]}}var Qr=function(t,n){var e;return(\"number\"==typeof n?Oe:n instanceof Fn?ze:(e=Fn(n))?(n=e,ze):Ge)(t,n)};var Jr=rn.prototype.constructor;var Kr=0;function ti(t,n,e,r){this._groups=t,this._parents=n,this._name=e,this._id=r}function ni(t){return rn().transition(t)}function ei(){return++Kr}var ri=rn.prototype;function ii(t){return+t}function ui(t){return t*t}function oi(t){return t*(2-t)}function ai(t){return((t*=2)<=1?t*t:--t*(2-t)+1)/2}function fi(t){return t*t*t}function ci(t){return--t*t*t+1}function si(t){return((t*=2)<=1?t*t*t:(t-=2)*t*t+2)/2}ti.prototype=ni.prototype={constructor:ti,select:function(t){var n=this._name,e=this._id;\"function\"!=typeof t&&(t=_t(t));for(var r=this._groups,i=r.length,u=new Array(i),o=0;o<i;++o)for(var a,f,c=r[o],s=c.length,l=u[o]=new Array(s),h=0;h<s;++h)(a=c[h])&&(f=t.call(a,a.__data__,h,c))&&(\"__data__\"in a&&(f.__data__=a.__data__),l[h]=f,Xr(l[h],n,e,h,l,$r(a,e)));return new ti(u,this._parents,n,e)},selectAll:function(t){var n=this._name,e=this._id;\"function\"!=typeof t&&(t=mt(t));for(var r=this._groups,i=r.length,u=[],o=[],a=0;a<i;++a)for(var f,c=r[a],s=c.length,l=0;l<s;++l)if(f=c[l]){for(var h,d=t.call(f,f.__data__,l,c),p=$r(f,e),v=0,g=d.length;v<g;++v)(h=d[v])&&Xr(h,n,e,v,d,p);u.push(d),o.push(f)}return new ti(u,o,n,e)},filter:function(t){\"function\"!=typeof t&&(t=At(t));for(var n=this._groups,e=n.length,r=new Array(e),i=0;i<e;++i)for(var u,o=n[i],a=o.length,f=r[i]=[],c=0;c<a;++c)(u=o[c])&&t.call(u,u.__data__,c,o)&&f.push(u);return new ti(r,this._parents,this._name,this._id)},merge:function(t){if(t._id!==this._id)throw new Error;for(var n=this._groups,e=t._groups,r=n.length,i=e.length,u=Math.min(r,i),o=new Array(r),a=0;a<u;++a)for(var f,c=n[a],s=e[a],l=c.length,h=o[a]=new Array(l),d=0;d<l;++d)(f=c[d]||s[d])&&(h[d]=f);for(;a<r;++a)o[a]=n[a];return new ti(o,this._parents,this._name,this._id)},selection:function(){return new Jr(this._groups,this._parents)},transition:function(){for(var t=this._name,n=this._id,e=ei(),r=this._groups,i=r.length,u=0;u<i;++u)for(var o,a=r[u],f=a.length,c=0;c<f;++c)if(o=a[c]){var s=$r(o,n);Xr(o,t,e,c,a,{time:s.time+s.delay+s.duration,delay:0,duration:s.duration,ease:s.ease})}return new ti(r,this._parents,t,e)},call:ri.call,nodes:ri.nodes,node:ri.node,size:ri.size,empty:ri.empty,each:ri.each,on:function(t,n){var e=this._id;return arguments.length<2?$r(this.node(),e).on.on(t):this.each(function(t,n,e){var r,i,u=function(t){return(t+\"\").trim().split(/^|\\s+/).every(function(t){var n=t.indexOf(\".\");return n>=0&&(t=t.slice(0,n)),!t||\"start\"===t})}(n)?Gr:Vr;return function(){var o=u(this,t),a=o.on;a!==r&&(i=(r=a).copy()).on(n,e),o.on=i}}(e,t,n))},attr:function(t,n){var e=vt(t),r=\"transform\"===e?tr:Qr;return this.attrTween(t,\"function\"==typeof n?(e.local?function(t,n,e){var r,i,u;return function(){var o,a=e(this);if(null!=a)return(o=this.getAttributeNS(t.space,t.local))===a?null:o===r&&a===i?u:u=n(r=o,i=a);this.removeAttributeNS(t.space,t.local)}}:function(t,n,e){var r,i,u;return function(){var o,a=e(this);if(null!=a)return(o=this.getAttribute(t))===a?null:o===r&&a===i?u:u=n(r=o,i=a);this.removeAttribute(t)}})(e,r,Zr(this,\"attr.\"+t,n)):null==n?(e.local?function(t){return function(){this.removeAttributeNS(t.space,t.local)}}:function(t){return function(){this.removeAttribute(t)}})(e):(e.local?function(t,n,e){var r,i;return function(){var u=this.getAttributeNS(t.space,t.local);return u===e?null:u===r?i:i=n(r=u,e)}}:function(t,n,e){var r,i;return function(){var u=this.getAttribute(t);return u===e?null:u===r?i:i=n(r=u,e)}})(e,r,n+\"\"))},attrTween:function(t,n){var e=\"attr.\"+t;if(arguments.length<2)return(e=this.tween(e))&&e._value;if(null==n)return this.tween(e,null);if(\"function\"!=typeof n)throw new Error;var r=vt(t);return this.tween(e,(r.local?function(t,n){function e(){var e=this,r=n.apply(e,arguments);return r&&function(n){e.setAttributeNS(t.space,t.local,r(n))}}return e._value=n,e}:function(t,n){function e(){var e=this,r=n.apply(e,arguments);return r&&function(n){e.setAttribute(t,r(n))}}return e._value=n,e})(r,n))},style:function(t,n,e){var r=\"transform\"==(t+=\"\")?Ke:Qr;return null==n?this.styleTween(t,function(t,n){var e,r,i;return function(){var u=zt(this,t),o=(this.style.removeProperty(t),zt(this,t));return u===o?null:u===e&&o===r?i:i=n(e=u,r=o)}}(t,r)).on(\"end.style.\"+t,function(t){return function(){this.style.removeProperty(t)}}(t)):this.styleTween(t,\"function\"==typeof n?function(t,n,e){var r,i,u;return function(){var o=zt(this,t),a=e(this);return null==a&&(this.style.removeProperty(t),a=zt(this,t)),o===a?null:o===r&&a===i?u:u=n(r=o,i=a)}}(t,r,Zr(this,\"style.\"+t,n)):function(t,n,e){var r,i;return function(){var u=zt(this,t);return u===e?null:u===r?i:i=n(r=u,e)}}(t,r,n+\"\"),e)},styleTween:function(t,n,e){var r=\"style.\"+(t+=\"\");if(arguments.length<2)return(r=this.tween(r))&&r._value;if(null==n)return this.tween(r,null);if(\"function\"!=typeof n)throw new Error;return this.tween(r,function(t,n,e){function r(){var r=this,i=n.apply(r,arguments);return i&&function(n){r.style.setProperty(t,i(n),e)}}return r._value=n,r}(t,n,null==e?\"\":e))},text:function(t){return this.tween(\"text\",\"function\"==typeof t?function(t){return function(){var n=t(this);this.textContent=null==n?\"\":n}}(Zr(this,\"text\",t)):function(t){return function(){this.textContent=t}}(null==t?\"\":t+\"\"))},remove:function(){return this.on(\"end.remove\",(t=this._id,function(){var n=this.parentNode;for(var e in this.__transition)if(+e!==t)return;n&&n.removeChild(this)}));var t},tween:function(t,n){var e=this._id;if(t+=\"\",arguments.length<2){for(var r,i=$r(this.node(),e).tween,u=0,o=i.length;u<o;++u)if((r=i[u]).name===t)return r.value;return null}return this.each((null==n?function(t,n){var e,r;return function(){var i=Vr(this,t),u=i.tween;if(u!==e)for(var o=0,a=(r=e=u).length;o<a;++o)if(r[o].name===n){(r=r.slice()).splice(o,1);break}i.tween=r}}:function(t,n,e){var r,i;if(\"function\"!=typeof e)throw new Error;return function(){var u=Vr(this,t),o=u.tween;if(o!==r){i=(r=o).slice();for(var a={name:n,value:e},f=0,c=i.length;f<c;++f)if(i[f].name===n){i[f]=a;break}f===c&&i.push(a)}u.tween=i}})(e,t,n))},delay:function(t){var n=this._id;return arguments.length?this.each((\"function\"==typeof t?function(t,n){return function(){Gr(this,t).delay=+n.apply(this,arguments)}}:function(t,n){return n=+n,function(){Gr(this,t).delay=n}})(n,t)):$r(this.node(),n).delay},duration:function(t){var n=this._id;return arguments.length?this.each((\"function\"==typeof t?function(t,n){return function(){Vr(this,t).duration=+n.apply(this,arguments)}}:function(t,n){return n=+n,function(){Vr(this,t).duration=n}})(n,t)):$r(this.node(),n).duration},ease:function(t){var n=this._id;return arguments.length?this.each(function(t,n){if(\"function\"!=typeof n)throw new Error;return function(){Vr(this,t).ease=n}}(n,t)):$r(this.node(),n).ease}};var li=function t(n){function e(t){return Math.pow(t,n)}return n=+n,e.exponent=t,e}(3),hi=function t(n){function e(t){return 1-Math.pow(1-t,n)}return n=+n,e.exponent=t,e}(3),di=function t(n){function e(t){return((t*=2)<=1?Math.pow(t,n):2-Math.pow(2-t,n))/2}return n=+n,e.exponent=t,e}(3),pi=Math.PI,vi=pi/2;function gi(t){return 1-Math.cos(t*vi)}function yi(t){return Math.sin(t*vi)}function _i(t){return(1-Math.cos(pi*t))/2}function bi(t){return Math.pow(2,10*t-10)}function mi(t){return 1-Math.pow(2,-10*t)}function xi(t){return((t*=2)<=1?Math.pow(2,10*t-10):2-Math.pow(2,10-10*t))/2}function wi(t){return 1-Math.sqrt(1-t*t)}function Mi(t){return Math.sqrt(1- --t*t)}function Ai(t){return((t*=2)<=1?1-Math.sqrt(1-t*t):Math.sqrt(1-(t-=2)*t)+1)/2}var Si=4/11,Ti=6/11,Ni=8/11,ki=.75,Ei=9/11,Ci=10/11,Pi=.9375,zi=21/22,Ri=63/64,Di=1/Si/Si;function Li(t){return 1-qi(1-t)}function qi(t){return(t=+t)<Si?Di*t*t:t<Ni?Di*(t-=Ti)*t+ki:t<Ci?Di*(t-=Ei)*t+Pi:Di*(t-=zi)*t+Ri}function Ui(t){return((t*=2)<=1?1-qi(1-t):qi(t-1)+1)/2}var Oi=function t(n){function e(t){return t*t*((n+1)*t-n)}return n=+n,e.overshoot=t,e}(1.70158),Ii=function t(n){function e(t){return--t*t*((n+1)*t+n)+1}return n=+n,e.overshoot=t,e}(1.70158),Yi=function t(n){function e(t){return((t*=2)<1?t*t*((n+1)*t-n):(t-=2)*t*((n+1)*t+n)+2)/2}return n=+n,e.overshoot=t,e}(1.70158),Bi=2*Math.PI,Fi=function t(n,e){var r=Math.asin(1/(n=Math.max(1,n)))*(e/=Bi);function i(t){return n*Math.pow(2,10*--t)*Math.sin((r-t)/e)}return i.amplitude=function(n){return t(n,e*Bi)},i.period=function(e){return t(n,e)},i}(1,.3),ji=function t(n,e){var r=Math.asin(1/(n=Math.max(1,n)))*(e/=Bi);function i(t){return 1-n*Math.pow(2,-10*(t=+t))*Math.sin((t+r)/e)}return i.amplitude=function(n){return t(n,e*Bi)},i.period=function(e){return t(n,e)},i}(1,.3),Hi=function t(n,e){var r=Math.asin(1/(n=Math.max(1,n)))*(e/=Bi);function i(t){return((t=2*t-1)<0?n*Math.pow(2,10*t)*Math.sin((r-t)/e):2-n*Math.pow(2,-10*t)*Math.sin((r+t)/e))/2}return i.amplitude=function(n){return t(n,e*Bi)},i.period=function(e){return t(n,e)},i}(1,.3),Xi={time:null,delay:0,duration:250,ease:si};function Gi(t,n){for(var e;!(e=t.__transition)||!(e=e[n]);)if(!(t=t.parentNode))return Xi.time=Tr(),Xi;return e}rn.prototype.interrupt=function(t){return this.each(function(){Wr(this,t)})},rn.prototype.transition=function(t){var n,e;t instanceof ti?(n=t._id,t=t._name):(n=ei(),(e=Xi).time=Tr(),t=null==t?null:t+\"\");for(var r=this._groups,i=r.length,u=0;u<i;++u)for(var o,a=r[u],f=a.length,c=0;c<f;++c)(o=a[c])&&Xr(o,t,n,c,a,e||Gi(o,n));return new ti(r,this._parents,t,n)};var Vi=[null],$i=function(t,n){var e,r,i=t.__transition;if(i)for(r in n=null==n?null:n+\"\",i)if((e=i[r]).state>Ir&&e.name===n)return new ti([[t]],Vi,n,+r);return null},Wi=function(t){return function(){return t}},Zi=function(t,n,e){this.target=t,this.type=n,this.selection=e};function Qi(){Vt.stopImmediatePropagation()}var Ji=function(){Vt.preventDefault(),Vt.stopImmediatePropagation()},Ki={name:\"drag\"},tu={name:\"space\"},nu={name:\"handle\"},eu={name:\"center\"},ru={name:\"x\",handles:[\"e\",\"w\"].map(lu),input:function(t,n){return t&&[[t[0],n[0][1]],[t[1],n[1][1]]]},output:function(t){return t&&[t[0][0],t[1][0]]}},iu={name:\"y\",handles:[\"n\",\"s\"].map(lu),input:function(t,n){return t&&[[n[0][0],t[0]],[n[1][0],t[1]]]},output:function(t){return t&&[t[0][1],t[1][1]]}},uu={name:\"xy\",handles:[\"n\",\"e\",\"s\",\"w\",\"nw\",\"ne\",\"se\",\"sw\"].map(lu),input:function(t){return t},output:function(t){return t}},ou={overlay:\"crosshair\",selection:\"move\",n:\"ns-resize\",e:\"ew-resize\",s:\"ns-resize\",w:\"ew-resize\",nw:\"nwse-resize\",ne:\"nesw-resize\",se:\"nwse-resize\",sw:\"nesw-resize\"},au={e:\"w\",w:\"e\",nw:\"ne\",ne:\"nw\",se:\"sw\",sw:\"se\"},fu={n:\"s\",s:\"n\",nw:\"sw\",ne:\"se\",se:\"ne\",sw:\"nw\"},cu={overlay:1,selection:1,n:null,e:1,s:null,w:-1,nw:-1,ne:1,se:1,sw:-1},su={overlay:1,selection:1,n:-1,e:null,s:1,w:null,nw:-1,ne:-1,se:1,sw:1};function lu(t){return{type:t}}function hu(){return!Vt.button}function du(){var t=this.ownerSVGElement||this;return[[0,0],[t.width.baseVal.value,t.height.baseVal.value]]}function pu(t){for(;!t.__brush;)if(!(t=t.parentNode))return;return t.__brush}function vu(t){return t[0][0]===t[1][0]||t[0][1]===t[1][1]}function gu(t){var n=t.__brush;return n?n.dim.output(n.selection):null}function yu(){return mu(ru)}function _u(){return mu(iu)}var bu=function(){return mu(uu)};function mu(t){var n,e=du,r=hu,i=ht(o,\"start\",\"brush\",\"end\"),u=6;function o(n){var e=n.property(\"__brush\",l).selectAll(\".overlay\").data([lu(\"overlay\")]);e.enter().append(\"rect\").attr(\"class\",\"overlay\").attr(\"pointer-events\",\"all\").attr(\"cursor\",ou.overlay).merge(e).each(function(){var t=pu(this).extent;un(this).attr(\"x\",t[0][0]).attr(\"y\",t[0][1]).attr(\"width\",t[1][0]-t[0][0]).attr(\"height\",t[1][1]-t[0][1])}),n.selectAll(\".selection\").data([lu(\"selection\")]).enter().append(\"rect\").attr(\"class\",\"selection\").attr(\"cursor\",ou.selection).attr(\"fill\",\"#777\").attr(\"fill-opacity\",.3).attr(\"stroke\",\"#fff\").attr(\"shape-rendering\",\"crispEdges\");var r=n.selectAll(\".handle\").data(t.handles,function(t){return t.type});r.exit().remove(),r.enter().append(\"rect\").attr(\"class\",function(t){return\"handle handle--\"+t.type}).attr(\"cursor\",function(t){return ou[t.type]}),n.each(a).attr(\"fill\",\"none\").attr(\"pointer-events\",\"all\").style(\"-webkit-tap-highlight-color\",\"rgba(0,0,0,0)\").on(\"mousedown.brush touchstart.brush\",s)}function a(){var t=un(this),n=pu(this).selection;n?(t.selectAll(\".selection\").style(\"display\",null).attr(\"x\",n[0][0]).attr(\"y\",n[0][1]).attr(\"width\",n[1][0]-n[0][0]).attr(\"height\",n[1][1]-n[0][1]),t.selectAll(\".handle\").style(\"display\",null).attr(\"x\",function(t){return\"e\"===t.type[t.type.length-1]?n[1][0]-u/2:n[0][0]-u/2}).attr(\"y\",function(t){return\"s\"===t.type[0]?n[1][1]-u/2:n[0][1]-u/2}).attr(\"width\",function(t){return\"n\"===t.type||\"s\"===t.type?n[1][0]-n[0][0]+u:u}).attr(\"height\",function(t){return\"e\"===t.type||\"w\"===t.type?n[1][1]-n[0][1]+u:u})):t.selectAll(\".selection,.handle\").style(\"display\",\"none\").attr(\"x\",null).attr(\"y\",null).attr(\"width\",null).attr(\"height\",null)}function f(t,n){return t.__brush.emitter||new c(t,n)}function c(t,n){this.that=t,this.args=n,this.state=t.__brush,this.active=0}function s(){if(Vt.touches){if(Vt.changedTouches.length<Vt.touches.length)return Ji()}else if(n)return;if(r.apply(this,arguments)){var e,i,u,o,c,s,l,h,d,p,v,g,y,_=this,b=Vt.target.__data__.type,m=\"selection\"===(Vt.metaKey?b=\"overlay\":b)?Ki:Vt.altKey?eu:nu,x=t===iu?null:cu[b],w=t===ru?null:su[b],M=pu(_),A=M.extent,S=M.selection,T=A[0][0],N=A[0][1],k=A[1][0],E=A[1][1],C=x&&w&&Vt.shiftKey,P=hn(_),z=P,R=f(_,arguments).beforestart();\"overlay\"===b?M.selection=S=[[e=t===iu?T:P[0],u=t===ru?N:P[1]],[c=t===iu?k:e,l=t===ru?E:u]]:(e=S[0][0],u=S[0][1],c=S[1][0],l=S[1][1]),i=e,o=u,s=c,h=l;var D=un(_).attr(\"pointer-events\",\"none\"),L=D.selectAll(\".overlay\").attr(\"cursor\",ou[b]);if(Vt.touches)D.on(\"touchmove.brush\",U,!0).on(\"touchend.brush touchcancel.brush\",I,!0);else{var q=un(Vt.view).on(\"keydown.brush\",function(){switch(Vt.keyCode){case 16:C=x&&w;break;case 18:m===nu&&(x&&(c=s-d*x,e=i+d*x),w&&(l=h-p*w,u=o+p*w),m=eu,O());break;case 32:m!==nu&&m!==eu||(x<0?c=s-d:x>0&&(e=i-d),w<0?l=h-p:w>0&&(u=o-p),m=tu,L.attr(\"cursor\",ou.selection),O());break;default:return}Ji()},!0).on(\"keyup.brush\",function(){switch(Vt.keyCode){case 16:C&&(g=y=C=!1,O());break;case 18:m===eu&&(x<0?c=s:x>0&&(e=i),w<0?l=h:w>0&&(u=o),m=nu,O());break;case 32:m===tu&&(Vt.altKey?(x&&(c=s-d*x,e=i+d*x),w&&(l=h-p*w,u=o+p*w),m=eu):(x<0?c=s:x>0&&(e=i),w<0?l=h:w>0&&(u=o),m=nu),L.attr(\"cursor\",ou[b]),O());break;default:return}Ji()},!0).on(\"mousemove.brush\",U,!0).on(\"mouseup.brush\",I,!0);_n(Vt.view)}Qi(),Wr(_),a.call(_),R.start()}function U(){var t=hn(_);!C||g||y||(Math.abs(t[0]-z[0])>Math.abs(t[1]-z[1])?y=!0:g=!0),z=t,v=!0,Ji(),O()}function O(){var t;switch(d=z[0]-P[0],p=z[1]-P[1],m){case tu:case Ki:x&&(d=Math.max(T-e,Math.min(k-c,d)),i=e+d,s=c+d),w&&(p=Math.max(N-u,Math.min(E-l,p)),o=u+p,h=l+p);break;case nu:x<0?(d=Math.max(T-e,Math.min(k-e,d)),i=e+d,s=c):x>0&&(d=Math.max(T-c,Math.min(k-c,d)),i=e,s=c+d),w<0?(p=Math.max(N-u,Math.min(E-u,p)),o=u+p,h=l):w>0&&(p=Math.max(N-l,Math.min(E-l,p)),o=u,h=l+p);break;case eu:x&&(i=Math.max(T,Math.min(k,e-d*x)),s=Math.max(T,Math.min(k,c+d*x))),w&&(o=Math.max(N,Math.min(E,u-p*w)),h=Math.max(N,Math.min(E,l+p*w)))}s<i&&(x*=-1,t=e,e=c,c=t,t=i,i=s,s=t,b in au&&L.attr(\"cursor\",ou[b=au[b]])),h<o&&(w*=-1,t=u,u=l,l=t,t=o,o=h,h=t,b in fu&&L.attr(\"cursor\",ou[b=fu[b]])),M.selection&&(S=M.selection),g&&(i=S[0][0],s=S[1][0]),y&&(o=S[0][1],h=S[1][1]),S[0][0]===i&&S[0][1]===o&&S[1][0]===s&&S[1][1]===h||(M.selection=[[i,o],[s,h]],a.call(_),R.brush())}function I(){if(Qi(),Vt.touches){if(Vt.touches.length)return;n&&clearTimeout(n),n=setTimeout(function(){n=null},500),D.on(\"touchmove.brush touchend.brush touchcancel.brush\",null)}else bn(Vt.view,v),q.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\",null);D.attr(\"pointer-events\",\"all\"),L.attr(\"cursor\",ou.overlay),M.selection&&(S=M.selection),vu(S)&&(M.selection=null,a.call(_)),R.end()}}function l(){var n=this.__brush||{selection:null};return n.extent=e.apply(this,arguments),n.dim=t,n}return o.move=function(n,e){n.selection?n.on(\"start.brush\",function(){f(this,arguments).beforestart().start()}).on(\"interrupt.brush end.brush\",function(){f(this,arguments).end()}).tween(\"brush\",function(){var n=this,r=n.__brush,i=f(n,arguments),u=r.selection,o=t.input(\"function\"==typeof e?e.apply(this,arguments):e,r.extent),c=Ve(u,o);function s(t){r.selection=1===t&&vu(o)?null:c(t),a.call(n),i.brush()}return u&&o?s:s(1)}):n.each(function(){var n=arguments,r=this.__brush,i=t.input(\"function\"==typeof e?e.apply(this,n):e,r.extent),u=f(this,n).beforestart();Wr(this),r.selection=null==i||vu(i)?null:i,a.call(this),u.start().brush().end()})},c.prototype={beforestart:function(){return 1==++this.active&&(this.state.emitter=this,this.starting=!0),this},start:function(){return this.starting&&(this.starting=!1,this.emit(\"start\")),this},brush:function(){return this.emit(\"brush\"),this},end:function(){return 0==--this.active&&(delete this.state.emitter,this.emit(\"end\")),this},emit:function(n){Jt(new Zi(o,n,t.output(this.state.selection)),i.apply,i,[n,this.that,this.args])}},o.extent=function(t){return arguments.length?(e=\"function\"==typeof t?t:Wi([[+t[0][0],+t[0][1]],[+t[1][0],+t[1][1]]]),o):e},o.filter=function(t){return arguments.length?(r=\"function\"==typeof t?t:Wi(!!t),o):r},o.handleSize=function(t){return arguments.length?(u=+t,o):u},o.on=function(){var t=i.on.apply(i,arguments);return t===i?o:t},o}var xu=Math.cos,wu=Math.sin,Mu=Math.PI,Au=Mu/2,Su=2*Mu,Tu=Math.max;var Nu=function(){var t=0,n=null,e=null,r=null;function i(i){var u,o,a,f,c,s,l=i.length,h=[],d=w(l),p=[],v=[],g=v.groups=new Array(l),y=new Array(l*l);for(u=0,c=-1;++c<l;){for(o=0,s=-1;++s<l;)o+=i[c][s];h.push(o),p.push(w(l)),u+=o}for(n&&d.sort(function(t,e){return n(h[t],h[e])}),e&&p.forEach(function(t,n){t.sort(function(t,r){return e(i[n][t],i[n][r])})}),f=(u=Tu(0,Su-t*l)/u)?t:Su/l,o=0,c=-1;++c<l;){for(a=o,s=-1;++s<l;){var _=d[c],b=p[_][s],m=i[_][b],x=o,M=o+=m*u;y[b*l+_]={index:_,subindex:b,startAngle:x,endAngle:M,value:m}}g[_]={index:_,startAngle:a,endAngle:o,value:h[_]},o+=f}for(c=-1;++c<l;)for(s=c-1;++s<l;){var A=y[s*l+c],S=y[c*l+s];(A.value||S.value)&&v.push(A.value<S.value?{source:S,target:A}:{source:A,target:S})}return r?v.sort(r):v}return i.padAngle=function(n){return arguments.length?(t=Tu(0,n),i):t},i.sortGroups=function(t){return arguments.length?(n=t,i):n},i.sortSubgroups=function(t){return arguments.length?(e=t,i):e},i.sortChords=function(t){return arguments.length?(null==t?r=null:(n=t,r=function(t,e){return n(t.source.value+t.target.value,e.source.value+e.target.value)})._=t,i):r&&r._;var n},i},ku=Array.prototype.slice,Eu=function(t){return function(){return t}},Cu=Math.PI,Pu=2*Cu,zu=Pu-1e-6;function Ru(){this._x0=this._y0=this._x1=this._y1=null,this._=\"\"}function Du(){return new Ru}Ru.prototype=Du.prototype={constructor:Ru,moveTo:function(t,n){this._+=\"M\"+(this._x0=this._x1=+t)+\",\"+(this._y0=this._y1=+n)},closePath:function(){null!==this._x1&&(this._x1=this._x0,this._y1=this._y0,this._+=\"Z\")},lineTo:function(t,n){this._+=\"L\"+(this._x1=+t)+\",\"+(this._y1=+n)},quadraticCurveTo:function(t,n,e,r){this._+=\"Q\"+ +t+\",\"+ +n+\",\"+(this._x1=+e)+\",\"+(this._y1=+r)},bezierCurveTo:function(t,n,e,r,i,u){this._+=\"C\"+ +t+\",\"+ +n+\",\"+ +e+\",\"+ +r+\",\"+(this._x1=+i)+\",\"+(this._y1=+u)},arcTo:function(t,n,e,r,i){t=+t,n=+n,e=+e,r=+r,i=+i;var u=this._x1,o=this._y1,a=e-t,f=r-n,c=u-t,s=o-n,l=c*c+s*s;if(i<0)throw new Error(\"negative radius: \"+i);if(null===this._x1)this._+=\"M\"+(this._x1=t)+\",\"+(this._y1=n);else if(l>1e-6)if(Math.abs(s*a-f*c)>1e-6&&i){var h=e-u,d=r-o,p=a*a+f*f,v=h*h+d*d,g=Math.sqrt(p),y=Math.sqrt(l),_=i*Math.tan((Cu-Math.acos((p+l-v)/(2*g*y)))/2),b=_/y,m=_/g;Math.abs(b-1)>1e-6&&(this._+=\"L\"+(t+b*c)+\",\"+(n+b*s)),this._+=\"A\"+i+\",\"+i+\",0,0,\"+ +(s*h>c*d)+\",\"+(this._x1=t+m*a)+\",\"+(this._y1=n+m*f)}else this._+=\"L\"+(this._x1=t)+\",\"+(this._y1=n);else;},arc:function(t,n,e,r,i,u){t=+t,n=+n;var o=(e=+e)*Math.cos(r),a=e*Math.sin(r),f=t+o,c=n+a,s=1^u,l=u?r-i:i-r;if(e<0)throw new Error(\"negative radius: \"+e);null===this._x1?this._+=\"M\"+f+\",\"+c:(Math.abs(this._x1-f)>1e-6||Math.abs(this._y1-c)>1e-6)&&(this._+=\"L\"+f+\",\"+c),e&&(l<0&&(l=l%Pu+Pu),l>zu?this._+=\"A\"+e+\",\"+e+\",0,1,\"+s+\",\"+(t-o)+\",\"+(n-a)+\"A\"+e+\",\"+e+\",0,1,\"+s+\",\"+(this._x1=f)+\",\"+(this._y1=c):l>1e-6&&(this._+=\"A\"+e+\",\"+e+\",0,\"+ +(l>=Cu)+\",\"+s+\",\"+(this._x1=t+e*Math.cos(i))+\",\"+(this._y1=n+e*Math.sin(i))))},rect:function(t,n,e,r){this._+=\"M\"+(this._x0=this._x1=+t)+\",\"+(this._y0=this._y1=+n)+\"h\"+ +e+\"v\"+ +r+\"h\"+-e+\"Z\"},toString:function(){return this._}};var Lu=Du;function qu(t){return t.source}function Uu(t){return t.target}function Ou(t){return t.radius}function Iu(t){return t.startAngle}function Yu(t){return t.endAngle}var Bu=function(){var t=qu,n=Uu,e=Ou,r=Iu,i=Yu,u=null;function o(){var o,a=ku.call(arguments),f=t.apply(this,a),c=n.apply(this,a),s=+e.apply(this,(a[0]=f,a)),l=r.apply(this,a)-Au,h=i.apply(this,a)-Au,d=s*xu(l),p=s*wu(l),v=+e.apply(this,(a[0]=c,a)),g=r.apply(this,a)-Au,y=i.apply(this,a)-Au;if(u||(u=o=Lu()),u.moveTo(d,p),u.arc(0,0,s,l,h),l===g&&h===y||(u.quadraticCurveTo(0,0,v*xu(g),v*wu(g)),u.arc(0,0,v,g,y)),u.quadraticCurveTo(0,0,d,p),u.closePath(),o)return u=null,o+\"\"||null}return o.radius=function(t){return arguments.length?(e=\"function\"==typeof t?t:Eu(+t),o):e},o.startAngle=function(t){return arguments.length?(r=\"function\"==typeof t?t:Eu(+t),o):r},o.endAngle=function(t){return arguments.length?(i=\"function\"==typeof t?t:Eu(+t),o):i},o.source=function(n){return arguments.length?(t=n,o):t},o.target=function(t){return arguments.length?(n=t,o):n},o.context=function(t){return arguments.length?(u=null==t?null:t,o):u},o};function Fu(){}function ju(t,n){var e=new Fu;if(t instanceof Fu)t.each(function(t,n){e.set(n,t)});else if(Array.isArray(t)){var r,i=-1,u=t.length;if(null==n)for(;++i<u;)e.set(i,t[i]);else for(;++i<u;)e.set(n(r=t[i],i,t),r)}else if(t)for(var o in t)e.set(o,t[o]);return e}Fu.prototype=ju.prototype={constructor:Fu,has:function(t){return\"$\"+t in this},get:function(t){return this[\"$\"+t]},set:function(t,n){return this[\"$\"+t]=n,this},remove:function(t){var n=\"$\"+t;return n in this&&delete this[n]},clear:function(){for(var t in this)\"$\"===t[0]&&delete this[t]},keys:function(){var t=[];for(var n in this)\"$\"===n[0]&&t.push(n.slice(1));return t},values:function(){var t=[];for(var n in this)\"$\"===n[0]&&t.push(this[n]);return t},entries:function(){var t=[];for(var n in this)\"$\"===n[0]&&t.push({key:n.slice(1),value:this[n]});return t},size:function(){var t=0;for(var n in this)\"$\"===n[0]&&++t;return t},empty:function(){for(var t in this)if(\"$\"===t[0])return!1;return!0},each:function(t){for(var n in this)\"$\"===n[0]&&t(this[n],n.slice(1),this)}};var Hu=ju,Xu=function(){var t,n,e,r=[],i=[];function u(e,i,o,a){if(i>=r.length)return null!=t&&e.sort(t),null!=n?n(e):e;for(var f,c,s,l=-1,h=e.length,d=r[i++],p=Hu(),v=o();++l<h;)(s=p.get(f=d(c=e[l])+\"\"))?s.push(c):p.set(f,[c]);return p.each(function(t,n){a(v,n,u(t,i,o,a))}),v}return e={object:function(t){return u(t,0,Gu,Vu)},map:function(t){return u(t,0,$u,Wu)},entries:function(t){return function t(e,u){if(++u>r.length)return e;var o,a=i[u-1];return null!=n&&u>=r.length?o=e.entries():(o=[],e.each(function(n,e){o.push({key:e,values:t(n,u)})})),null!=a?o.sort(function(t,n){return a(t.key,n.key)}):o}(u(t,0,$u,Wu),0)},key:function(t){return r.push(t),e},sortKeys:function(t){return i[r.length-1]=t,e},sortValues:function(n){return t=n,e},rollup:function(t){return n=t,e}}};function Gu(){return{}}function Vu(t,n,e){t[n]=e}function $u(){return Hu()}function Wu(t,n,e){t.set(n,e)}function Zu(){}var Qu=Hu.prototype;function Ju(t,n){var e=new Zu;if(t instanceof Zu)t.each(function(t){e.add(t)});else if(t){var r=-1,i=t.length;if(null==n)for(;++r<i;)e.add(t[r]);else for(;++r<i;)e.add(n(t[r],r,t))}return e}Zu.prototype=Ju.prototype={constructor:Zu,has:Qu.has,add:function(t){return this[\"$\"+(t+=\"\")]=t,this},remove:Qu.remove,clear:Qu.clear,values:Qu.keys,size:Qu.size,empty:Qu.empty,each:Qu.each};var Ku=Ju,to=function(t){var n=[];for(var e in t)n.push(e);return n},no=function(t){var n=[];for(var e in t)n.push(t[e]);return n},eo=function(t){var n=[];for(var e in t)n.push({key:e,value:t[e]});return n},ro=Array.prototype.slice,io=function(t,n){return t-n},uo=function(t){for(var n=0,e=t.length,r=t[e-1][1]*t[0][0]-t[e-1][0]*t[0][1];++n<e;)r+=t[n-1][1]*t[n][0]-t[n-1][0]*t[n][1];return r},oo=function(t){return function(){return t}},ao=function(t,n){for(var e,r=-1,i=n.length;++r<i;)if(e=fo(t,n[r]))return e;return 0};function fo(t,n){for(var e=n[0],r=n[1],i=-1,u=0,o=t.length,a=o-1;u<o;a=u++){var f=t[u],c=f[0],s=f[1],l=t[a],h=l[0],d=l[1];if(co(f,l,n))return 0;s>r!=d>r&&e<(h-c)*(r-s)/(d-s)+c&&(i=-i)}return i}function co(t,n,e){var r,i,u,o;return function(t,n,e){return(n[0]-t[0])*(e[1]-t[1])==(e[0]-t[0])*(n[1]-t[1])}(t,n,e)&&(i=t[r=+(t[0]===n[0])],u=e[r],o=n[r],i<=u&&u<=o||o<=u&&u<=i)}var so=function(){},lo=[[],[[[1,1.5],[.5,1]]],[[[1.5,1],[1,1.5]]],[[[1.5,1],[.5,1]]],[[[1,.5],[1.5,1]]],[[[1,1.5],[.5,1]],[[1,.5],[1.5,1]]],[[[1,.5],[1,1.5]]],[[[1,.5],[.5,1]]],[[[.5,1],[1,.5]]],[[[1,1.5],[1,.5]]],[[[.5,1],[1,.5]],[[1.5,1],[1,1.5]]],[[[1.5,1],[1,.5]]],[[[.5,1],[1.5,1]]],[[[1,1.5],[1.5,1]]],[[[.5,1],[1,1.5]]],[]],ho=function(){var t=1,n=1,e=E,r=a;function i(t){var n=e(t);if(Array.isArray(n))n=n.slice().sort(io);else{var r=g(t),i=r[0],o=r[1];n=k(i,o,n),n=w(Math.floor(i/n)*n,Math.floor(o/n)*n,n)}return n.map(function(n){return u(t,n)})}function u(e,i){var u=[],a=[];return function(e,r,i){var u,a,f,c,s,l,h=new Array,d=new Array;u=a=-1,c=e[0]>=r,lo[c<<1].forEach(p);for(;++u<t-1;)f=c,c=e[u+1]>=r,lo[f|c<<1].forEach(p);lo[c<<0].forEach(p);for(;++a<n-1;){for(u=-1,c=e[a*t+t]>=r,s=e[a*t]>=r,lo[c<<1|s<<2].forEach(p);++u<t-1;)f=c,c=e[a*t+t+u+1]>=r,l=s,s=e[a*t+u+1]>=r,lo[f|c<<1|s<<2|l<<3].forEach(p);lo[c|s<<3].forEach(p)}u=-1,s=e[a*t]>=r,lo[s<<2].forEach(p);for(;++u<t-1;)l=s,s=e[a*t+u+1]>=r,lo[s<<2|l<<3].forEach(p);function p(t){var n,e,r=[t[0][0]+u,t[0][1]+a],f=[t[1][0]+u,t[1][1]+a],c=o(r),s=o(f);(n=d[c])?(e=h[s])?(delete d[n.end],delete h[e.start],n===e?(n.ring.push(f),i(n.ring)):h[n.start]=d[e.end]={start:n.start,end:e.end,ring:n.ring.concat(e.ring)}):(delete d[n.end],n.ring.push(f),d[n.end=s]=n):(n=h[s])?(e=d[c])?(delete h[n.start],delete d[e.end],n===e?(n.ring.push(f),i(n.ring)):h[e.start]=d[n.end]={start:e.start,end:n.end,ring:e.ring.concat(n.ring)}):(delete h[n.start],n.ring.unshift(r),h[n.start=c]=n):h[c]=d[s]={start:c,end:s,ring:[r,f]}}lo[s<<3].forEach(p)}(e,i,function(t){r(t,e,i),uo(t)>0?u.push([t]):a.push(t)}),a.forEach(function(t){for(var n,e=0,r=u.length;e<r;++e)if(-1!==ao((n=u[e])[0],t))return void n.push(t)}),{type:\"MultiPolygon\",value:i,coordinates:u}}function o(n){return 2*n[0]+n[1]*(t+1)*4}function a(e,r,i){e.forEach(function(e){var u,o=e[0],a=e[1],f=0|o,c=0|a,s=r[c*t+f];o>0&&o<t&&f===o&&(u=r[c*t+f-1],e[0]=o+(i-u)/(s-u)-.5),a>0&&a<n&&c===a&&(u=r[(c-1)*t+f],e[1]=a+(i-u)/(s-u)-.5)})}return i.contour=u,i.size=function(e){if(!arguments.length)return[t,n];var r=Math.ceil(e[0]),u=Math.ceil(e[1]);if(!(r>0&&u>0))throw new Error(\"invalid size\");return t=r,n=u,i},i.thresholds=function(t){return arguments.length?(e=\"function\"==typeof t?t:Array.isArray(t)?oo(ro.call(t)):oo(t),i):e},i.smooth=function(t){return arguments.length?(r=t?a:so,i):r===a},i};function po(t,n,e){for(var r=t.width,i=t.height,u=1+(e<<1),o=0;o<i;++o)for(var a=0,f=0;a<r+e;++a)a<r&&(f+=t.data[a+o*r]),a>=e&&(a>=u&&(f-=t.data[a-u+o*r]),n.data[a-e+o*r]=f/Math.min(a+1,r-1+u-a,u))}function vo(t,n,e){for(var r=t.width,i=t.height,u=1+(e<<1),o=0;o<r;++o)for(var a=0,f=0;a<i+e;++a)a<i&&(f+=t.data[o+a*r]),a>=e&&(a>=u&&(f-=t.data[o+(a-u)*r]),n.data[o+(a-e)*r]=f/Math.min(a+1,i-1+u-a,u))}function go(t){return t[0]}function yo(t){return t[1]}var _o=function(){var t=go,n=yo,e=960,r=500,i=20,u=2,o=3*i,a=e+2*o>>u,f=r+2*o>>u,c=oo(20);function s(e){var r=new Float32Array(a*f),s=new Float32Array(a*f);e.forEach(function(e,i,c){var s=t(e,i,c)+o>>u,l=n(e,i,c)+o>>u;s>=0&&s<a&&l>=0&&l<f&&++r[s+l*a]}),po({width:a,height:f,data:r},{width:a,height:f,data:s},i>>u),vo({width:a,height:f,data:s},{width:a,height:f,data:r},i>>u),po({width:a,height:f,data:r},{width:a,height:f,data:s},i>>u),vo({width:a,height:f,data:s},{width:a,height:f,data:r},i>>u),po({width:a,height:f,data:r},{width:a,height:f,data:s},i>>u),vo({width:a,height:f,data:s},{width:a,height:f,data:r},i>>u);var h=c(r);if(!Array.isArray(h)){var d=D(r);h=k(0,d,h),(h=w(0,Math.floor(d/h)*h,h)).shift()}return ho().thresholds(h).size([a,f])(r).map(l)}function l(t){return t.value*=Math.pow(2,-2*u),t.coordinates.forEach(h),t}function h(t){t.forEach(d)}function d(t){t.forEach(p)}function p(t){t[0]=t[0]*Math.pow(2,u)-o,t[1]=t[1]*Math.pow(2,u)-o}function v(){return a=e+2*(o=3*i)>>u,f=r+2*o>>u,s}return s.x=function(n){return arguments.length?(t=\"function\"==typeof n?n:oo(+n),s):t},s.y=function(t){return arguments.length?(n=\"function\"==typeof t?t:oo(+t),s):n},s.size=function(t){if(!arguments.length)return[e,r];var n=Math.ceil(t[0]),i=Math.ceil(t[1]);if(!(n>=0||n>=0))throw new Error(\"invalid size\");return e=n,r=i,v()},s.cellSize=function(t){if(!arguments.length)return 1<<u;if(!((t=+t)>=1))throw new Error(\"invalid cell size\");return u=Math.floor(Math.log(t)/Math.LN2),v()},s.thresholds=function(t){return arguments.length?(c=\"function\"==typeof t?t:Array.isArray(t)?oo(ro.call(t)):oo(t),s):c},s.bandwidth=function(t){if(!arguments.length)return Math.sqrt(i*(i+1));if(!((t=+t)>=0))throw new Error(\"invalid bandwidth\");return i=Math.round((Math.sqrt(4*t*t+1)-1)/2),v()},s},bo={},mo={},xo=34,wo=10,Mo=13;function Ao(t){return new Function(\"d\",\"return {\"+t.map(function(t,n){return JSON.stringify(t)+\": d[\"+n+\"]\"}).join(\",\")+\"}\")}var So=function(t){var n=new RegExp('[\"'+t+\"\\n\\r]\"),e=t.charCodeAt(0);function r(t,n){var r,i=[],u=t.length,o=0,a=0,f=u<=0,c=!1;function s(){if(f)return mo;if(c)return c=!1,bo;var n,r,i=o;if(t.charCodeAt(i)===xo){for(;o++<u&&t.charCodeAt(o)!==xo||t.charCodeAt(++o)===xo;);return(n=o)>=u?f=!0:(r=t.charCodeAt(o++))===wo?c=!0:r===Mo&&(c=!0,t.charCodeAt(o)===wo&&++o),t.slice(i+1,n-1).replace(/\"\"/g,'\"')}for(;o<u;){if((r=t.charCodeAt(n=o++))===wo)c=!0;else if(r===Mo)c=!0,t.charCodeAt(o)===wo&&++o;else if(r!==e)continue;return t.slice(i,n)}return f=!0,t.slice(i,u)}for(t.charCodeAt(u-1)===wo&&--u,t.charCodeAt(u-1)===Mo&&--u;(r=s())!==mo;){for(var l=[];r!==bo&&r!==mo;)l.push(r),r=s();n&&null==(l=n(l,a++))||i.push(l)}return i}function i(n){return n.map(u).join(t)}function u(t){return null==t?\"\":n.test(t+=\"\")?'\"'+t.replace(/\"/g,'\"\"')+'\"':t}return{parse:function(t,n){var e,i,u=r(t,function(t,r){if(e)return e(t,r-1);i=t,e=n?function(t,n){var e=Ao(t);return function(r,i){return n(e(r),i,t)}}(t,n):Ao(t)});return u.columns=i||[],u},parseRows:r,format:function(n,e){return null==e&&(e=function(t){var n=Object.create(null),e=[];return t.forEach(function(t){for(var r in t)r in n||e.push(n[r]=r)}),e}(n)),[e.map(u).join(t)].concat(n.map(function(n){return e.map(function(t){return u(n[t])}).join(t)})).join(\"\\n\")},formatRows:function(t){return t.map(i).join(\"\\n\")}}},To=So(\",\"),No=To.parse,ko=To.parseRows,Eo=To.format,Co=To.formatRows,Po=So(\"\\t\"),zo=Po.parse,Ro=Po.parseRows,Do=Po.format,Lo=Po.formatRows;function qo(t){if(!t.ok)throw new Error(t.status+\" \"+t.statusText);return t.blob()}var Uo=function(t,n){return fetch(t,n).then(qo)};function Oo(t){if(!t.ok)throw new Error(t.status+\" \"+t.statusText);return t.arrayBuffer()}var Io=function(t,n){return fetch(t,n).then(Oo)};function Yo(t){if(!t.ok)throw new Error(t.status+\" \"+t.statusText);return t.text()}var Bo=function(t,n){return fetch(t,n).then(Yo)};function Fo(t){return function(n,e,r){return 2===arguments.length&&\"function\"==typeof e&&(r=e,e=void 0),Bo(n,e).then(function(n){return t(n,r)})}}function jo(t,n,e,r){3===arguments.length&&\"function\"==typeof e&&(r=e,e=void 0);var i=So(t);return Bo(n,e).then(function(t){return i.parse(t,r)})}var Ho=Fo(No),Xo=Fo(zo),Go=function(t,n){return new Promise(function(e,r){var i=new Image;for(var u in n)i[u]=n[u];i.onerror=r,i.onload=function(){e(i)},i.src=t})};function Vo(t){if(!t.ok)throw new Error(t.status+\" \"+t.statusText);return t.json()}var $o=function(t,n){return fetch(t,n).then(Vo)};function Wo(t){return function(n,e){return Bo(n,e).then(function(n){return(new DOMParser).parseFromString(n,t)})}}var Zo=Wo(\"application/xml\"),Qo=Wo(\"text/html\"),Jo=Wo(\"image/svg+xml\"),Ko=function(t,n){var e;function r(){var r,i,u=e.length,o=0,a=0;for(r=0;r<u;++r)o+=(i=e[r]).x,a+=i.y;for(o=o/u-t,a=a/u-n,r=0;r<u;++r)(i=e[r]).x-=o,i.y-=a}return null==t&&(t=0),null==n&&(n=0),r.initialize=function(t){e=t},r.x=function(n){return arguments.length?(t=+n,r):t},r.y=function(t){return arguments.length?(n=+t,r):n},r},ta=function(t){return function(){return t}},na=function(){return 1e-6*(Math.random()-.5)};function ea(t,n,e,r){if(isNaN(n)||isNaN(e))return t;var i,u,o,a,f,c,s,l,h,d=t._root,p={data:r},v=t._x0,g=t._y0,y=t._x1,_=t._y1;if(!d)return t._root=p,t;for(;d.length;)if((c=n>=(u=(v+y)/2))?v=u:y=u,(s=e>=(o=(g+_)/2))?g=o:_=o,i=d,!(d=d[l=s<<1|c]))return i[l]=p,t;if(a=+t._x.call(null,d.data),f=+t._y.call(null,d.data),n===a&&e===f)return p.next=d,i?i[l]=p:t._root=p,t;do{i=i?i[l]=new Array(4):t._root=new Array(4),(c=n>=(u=(v+y)/2))?v=u:y=u,(s=e>=(o=(g+_)/2))?g=o:_=o}while((l=s<<1|c)==(h=(f>=o)<<1|a>=u));return i[h]=d,i[l]=p,t}var ra=function(t,n,e,r,i){this.node=t,this.x0=n,this.y0=e,this.x1=r,this.y1=i};function ia(t){return t[0]}function ua(t){return t[1]}function oa(t,n,e){var r=new aa(null==n?ia:n,null==e?ua:e,NaN,NaN,NaN,NaN);return null==t?r:r.addAll(t)}function aa(t,n,e,r,i,u){this._x=t,this._y=n,this._x0=e,this._y0=r,this._x1=i,this._y1=u,this._root=void 0}function fa(t){for(var n={data:t.data},e=n;t=t.next;)e=e.next={data:t.data};return n}var ca=oa.prototype=aa.prototype;function sa(t){return t.x+t.vx}function la(t){return t.y+t.vy}ca.copy=function(){var t,n,e=new aa(this._x,this._y,this._x0,this._y0,this._x1,this._y1),r=this._root;if(!r)return e;if(!r.length)return e._root=fa(r),e;for(t=[{source:r,target:e._root=new Array(4)}];r=t.pop();)for(var i=0;i<4;++i)(n=r.source[i])&&(n.length?t.push({source:n,target:r.target[i]=new Array(4)}):r.target[i]=fa(n));return e},ca.add=function(t){var n=+this._x.call(null,t),e=+this._y.call(null,t);return ea(this.cover(n,e),n,e,t)},ca.addAll=function(t){var n,e,r,i,u=t.length,o=new Array(u),a=new Array(u),f=1/0,c=1/0,s=-1/0,l=-1/0;for(e=0;e<u;++e)isNaN(r=+this._x.call(null,n=t[e]))||isNaN(i=+this._y.call(null,n))||(o[e]=r,a[e]=i,r<f&&(f=r),r>s&&(s=r),i<c&&(c=i),i>l&&(l=i));for(s<f&&(f=this._x0,s=this._x1),l<c&&(c=this._y0,l=this._y1),this.cover(f,c).cover(s,l),e=0;e<u;++e)ea(this,o[e],a[e],t[e]);return this},ca.cover=function(t,n){if(isNaN(t=+t)||isNaN(n=+n))return this;var e=this._x0,r=this._y0,i=this._x1,u=this._y1;if(isNaN(e))i=(e=Math.floor(t))+1,u=(r=Math.floor(n))+1;else{if(!(e>t||t>i||r>n||n>u))return this;var o,a,f=i-e,c=this._root;switch(a=(n<(r+u)/2)<<1|t<(e+i)/2){case 0:do{(o=new Array(4))[a]=c,c=o}while(u=r+(f*=2),t>(i=e+f)||n>u);break;case 1:do{(o=new Array(4))[a]=c,c=o}while(u=r+(f*=2),(e=i-f)>t||n>u);break;case 2:do{(o=new Array(4))[a]=c,c=o}while(r=u-(f*=2),t>(i=e+f)||r>n);break;case 3:do{(o=new Array(4))[a]=c,c=o}while(r=u-(f*=2),(e=i-f)>t||r>n)}this._root&&this._root.length&&(this._root=c)}return this._x0=e,this._y0=r,this._x1=i,this._y1=u,this},ca.data=function(){var t=[];return this.visit(function(n){if(!n.length)do{t.push(n.data)}while(n=n.next)}),t},ca.extent=function(t){return arguments.length?this.cover(+t[0][0],+t[0][1]).cover(+t[1][0],+t[1][1]):isNaN(this._x0)?void 0:[[this._x0,this._y0],[this._x1,this._y1]]},ca.find=function(t,n,e){var r,i,u,o,a,f,c,s=this._x0,l=this._y0,h=this._x1,d=this._y1,p=[],v=this._root;for(v&&p.push(new ra(v,s,l,h,d)),null==e?e=1/0:(s=t-e,l=n-e,h=t+e,d=n+e,e*=e);f=p.pop();)if(!(!(v=f.node)||(i=f.x0)>h||(u=f.y0)>d||(o=f.x1)<s||(a=f.y1)<l))if(v.length){var g=(i+o)/2,y=(u+a)/2;p.push(new ra(v[3],g,y,o,a),new ra(v[2],i,y,g,a),new ra(v[1],g,u,o,y),new ra(v[0],i,u,g,y)),(c=(n>=y)<<1|t>=g)&&(f=p[p.length-1],p[p.length-1]=p[p.length-1-c],p[p.length-1-c]=f)}else{var _=t-+this._x.call(null,v.data),b=n-+this._y.call(null,v.data),m=_*_+b*b;if(m<e){var x=Math.sqrt(e=m);s=t-x,l=n-x,h=t+x,d=n+x,r=v.data}}return r},ca.remove=function(t){if(isNaN(u=+this._x.call(null,t))||isNaN(o=+this._y.call(null,t)))return this;var n,e,r,i,u,o,a,f,c,s,l,h,d=this._root,p=this._x0,v=this._y0,g=this._x1,y=this._y1;if(!d)return this;if(d.length)for(;;){if((c=u>=(a=(p+g)/2))?p=a:g=a,(s=o>=(f=(v+y)/2))?v=f:y=f,n=d,!(d=d[l=s<<1|c]))return this;if(!d.length)break;(n[l+1&3]||n[l+2&3]||n[l+3&3])&&(e=n,h=l)}for(;d.data!==t;)if(r=d,!(d=d.next))return this;return(i=d.next)&&delete d.next,r?(i?r.next=i:delete r.next,this):n?(i?n[l]=i:delete n[l],(d=n[0]||n[1]||n[2]||n[3])&&d===(n[3]||n[2]||n[1]||n[0])&&!d.length&&(e?e[h]=d:this._root=d),this):(this._root=i,this)},ca.removeAll=function(t){for(var n=0,e=t.length;n<e;++n)this.remove(t[n]);return this},ca.root=function(){return this._root},ca.size=function(){var t=0;return this.visit(function(n){if(!n.length)do{++t}while(n=n.next)}),t},ca.visit=function(t){var n,e,r,i,u,o,a=[],f=this._root;for(f&&a.push(new ra(f,this._x0,this._y0,this._x1,this._y1));n=a.pop();)if(!t(f=n.node,r=n.x0,i=n.y0,u=n.x1,o=n.y1)&&f.length){var c=(r+u)/2,s=(i+o)/2;(e=f[3])&&a.push(new ra(e,c,s,u,o)),(e=f[2])&&a.push(new ra(e,r,s,c,o)),(e=f[1])&&a.push(new ra(e,c,i,u,s)),(e=f[0])&&a.push(new ra(e,r,i,c,s))}return this},ca.visitAfter=function(t){var n,e=[],r=[];for(this._root&&e.push(new ra(this._root,this._x0,this._y0,this._x1,this._y1));n=e.pop();){var i=n.node;if(i.length){var u,o=n.x0,a=n.y0,f=n.x1,c=n.y1,s=(o+f)/2,l=(a+c)/2;(u=i[0])&&e.push(new ra(u,o,a,s,l)),(u=i[1])&&e.push(new ra(u,s,a,f,l)),(u=i[2])&&e.push(new ra(u,o,l,s,c)),(u=i[3])&&e.push(new ra(u,s,l,f,c))}r.push(n)}for(;n=r.pop();)t(n.node,n.x0,n.y0,n.x1,n.y1);return this},ca.x=function(t){return arguments.length?(this._x=t,this):this._x},ca.y=function(t){return arguments.length?(this._y=t,this):this._y};var ha=function(t){var n,e,r=1,i=1;function u(){for(var t,u,a,f,c,s,l,h=n.length,d=0;d<i;++d)for(u=oa(n,sa,la).visitAfter(o),t=0;t<h;++t)a=n[t],s=e[a.index],l=s*s,f=a.x+a.vx,c=a.y+a.vy,u.visit(p);function p(t,n,e,i,u){var o=t.data,h=t.r,d=s+h;if(!o)return n>f+d||i<f-d||e>c+d||u<c-d;if(o.index>a.index){var p=f-o.x-o.vx,v=c-o.y-o.vy,g=p*p+v*v;g<d*d&&(0===p&&(g+=(p=na())*p),0===v&&(g+=(v=na())*v),g=(d-(g=Math.sqrt(g)))/g*r,a.vx+=(p*=g)*(d=(h*=h)/(l+h)),a.vy+=(v*=g)*d,o.vx-=p*(d=1-d),o.vy-=v*d)}}}function o(t){if(t.data)return t.r=e[t.data.index];for(var n=t.r=0;n<4;++n)t[n]&&t[n].r>t.r&&(t.r=t[n].r)}function a(){if(n){var r,i,u=n.length;for(e=new Array(u),r=0;r<u;++r)i=n[r],e[i.index]=+t(i,r,n)}}return\"function\"!=typeof t&&(t=ta(null==t?1:+t)),u.initialize=function(t){n=t,a()},u.iterations=function(t){return arguments.length?(i=+t,u):i},u.strength=function(t){return arguments.length?(r=+t,u):r},u.radius=function(n){return arguments.length?(t=\"function\"==typeof n?n:ta(+n),a(),u):t},u};function da(t){return t.index}function pa(t,n){var e=t.get(n);if(!e)throw new Error(\"missing: \"+n);return e}var va=function(t){var n,e,r,i,u,o=da,a=function(t){return 1/Math.min(i[t.source.index],i[t.target.index])},f=ta(30),c=1;function s(r){for(var i=0,o=t.length;i<c;++i)for(var a,f,s,l,h,d,p,v=0;v<o;++v)f=(a=t[v]).source,l=(s=a.target).x+s.vx-f.x-f.vx||na(),h=s.y+s.vy-f.y-f.vy||na(),l*=d=((d=Math.sqrt(l*l+h*h))-e[v])/d*r*n[v],h*=d,s.vx-=l*(p=u[v]),s.vy-=h*p,f.vx+=l*(p=1-p),f.vy+=h*p}function l(){if(r){var a,f,c=r.length,s=t.length,l=Hu(r,o);for(a=0,i=new Array(c);a<s;++a)(f=t[a]).index=a,\"object\"!=typeof f.source&&(f.source=pa(l,f.source)),\"object\"!=typeof f.target&&(f.target=pa(l,f.target)),i[f.source.index]=(i[f.source.index]||0)+1,i[f.target.index]=(i[f.target.index]||0)+1;for(a=0,u=new Array(s);a<s;++a)f=t[a],u[a]=i[f.source.index]/(i[f.source.index]+i[f.target.index]);n=new Array(s),h(),e=new Array(s),d()}}function h(){if(r)for(var e=0,i=t.length;e<i;++e)n[e]=+a(t[e],e,t)}function d(){if(r)for(var n=0,i=t.length;n<i;++n)e[n]=+f(t[n],n,t)}return null==t&&(t=[]),s.initialize=function(t){r=t,l()},s.links=function(n){return arguments.length?(t=n,l(),s):t},s.id=function(t){return arguments.length?(o=t,s):o},s.iterations=function(t){return arguments.length?(c=+t,s):c},s.strength=function(t){return arguments.length?(a=\"function\"==typeof t?t:ta(+t),h(),s):a},s.distance=function(t){return arguments.length?(f=\"function\"==typeof t?t:ta(+t),d(),s):f},s};function ga(t){return t.x}function ya(t){return t.y}var _a,ba=10,ma=Math.PI*(3-Math.sqrt(5)),xa=function(t){var n,e=1,r=.001,i=1-Math.pow(r,1/300),u=0,o=.6,a=Hu(),f=Er(s),c=ht(\"tick\",\"end\");function s(){l(),c.call(\"tick\",n),e<r&&(f.stop(),c.call(\"end\",n))}function l(){var n,r,f=t.length;for(e+=(u-e)*i,a.each(function(t){t(e)}),n=0;n<f;++n)null==(r=t[n]).fx?r.x+=r.vx*=o:(r.x=r.fx,r.vx=0),null==r.fy?r.y+=r.vy*=o:(r.y=r.fy,r.vy=0)}function h(){for(var n,e=0,r=t.length;e<r;++e){if((n=t[e]).index=e,isNaN(n.x)||isNaN(n.y)){var i=ba*Math.sqrt(e),u=e*ma;n.x=i*Math.cos(u),n.y=i*Math.sin(u)}(isNaN(n.vx)||isNaN(n.vy))&&(n.vx=n.vy=0)}}function d(n){return n.initialize&&n.initialize(t),n}return null==t&&(t=[]),h(),n={tick:l,restart:function(){return f.restart(s),n},stop:function(){return f.stop(),n},nodes:function(e){return arguments.length?(t=e,h(),a.each(d),n):t},alpha:function(t){return arguments.length?(e=+t,n):e},alphaMin:function(t){return arguments.length?(r=+t,n):r},alphaDecay:function(t){return arguments.length?(i=+t,n):+i},alphaTarget:function(t){return arguments.length?(u=+t,n):u},velocityDecay:function(t){return arguments.length?(o=1-t,n):1-o},force:function(t,e){return arguments.length>1?(null==e?a.remove(t):a.set(t,d(e)),n):a.get(t)},find:function(n,e,r){var i,u,o,a,f,c=0,s=t.length;for(null==r?r=1/0:r*=r,c=0;c<s;++c)(o=(i=n-(a=t[c]).x)*i+(u=e-a.y)*u)<r&&(f=a,r=o);return f},on:function(t,e){return arguments.length>1?(c.on(t,e),n):c.on(t)}}},wa=function(){var t,n,e,r,i=ta(-30),u=1,o=1/0,a=.81;function f(r){var i,u=t.length,o=oa(t,ga,ya).visitAfter(s);for(e=r,i=0;i<u;++i)n=t[i],o.visit(l)}function c(){if(t){var n,e,u=t.length;for(r=new Array(u),n=0;n<u;++n)e=t[n],r[e.index]=+i(e,n,t)}}function s(t){var n,e,i,u,o,a=0,f=0;if(t.length){for(i=u=o=0;o<4;++o)(n=t[o])&&(e=Math.abs(n.value))&&(a+=n.value,f+=e,i+=e*n.x,u+=e*n.y);t.x=i/f,t.y=u/f}else{(n=t).x=n.data.x,n.y=n.data.y;do{a+=r[n.data.index]}while(n=n.next)}t.value=a}function l(t,i,f,c){if(!t.value)return!0;var s=t.x-n.x,l=t.y-n.y,h=c-i,d=s*s+l*l;if(h*h/a<d)return d<o&&(0===s&&(d+=(s=na())*s),0===l&&(d+=(l=na())*l),d<u&&(d=Math.sqrt(u*d)),n.vx+=s*t.value*e/d,n.vy+=l*t.value*e/d),!0;if(!(t.length||d>=o)){(t.data!==n||t.next)&&(0===s&&(d+=(s=na())*s),0===l&&(d+=(l=na())*l),d<u&&(d=Math.sqrt(u*d)));do{t.data!==n&&(h=r[t.data.index]*e/d,n.vx+=s*h,n.vy+=l*h)}while(t=t.next)}}return f.initialize=function(n){t=n,c()},f.strength=function(t){return arguments.length?(i=\"function\"==typeof t?t:ta(+t),c(),f):i},f.distanceMin=function(t){return arguments.length?(u=t*t,f):Math.sqrt(u)},f.distanceMax=function(t){return arguments.length?(o=t*t,f):Math.sqrt(o)},f.theta=function(t){return arguments.length?(a=t*t,f):Math.sqrt(a)},f},Ma=function(t,n,e){var r,i,u,o=ta(.1);function a(t){for(var o=0,a=r.length;o<a;++o){var f=r[o],c=f.x-n||1e-6,s=f.y-e||1e-6,l=Math.sqrt(c*c+s*s),h=(u[o]-l)*i[o]*t/l;f.vx+=c*h,f.vy+=s*h}}function f(){if(r){var n,e=r.length;for(i=new Array(e),u=new Array(e),n=0;n<e;++n)u[n]=+t(r[n],n,r),i[n]=isNaN(u[n])?0:+o(r[n],n,r)}}return\"function\"!=typeof t&&(t=ta(+t)),null==n&&(n=0),null==e&&(e=0),a.initialize=function(t){r=t,f()},a.strength=function(t){return arguments.length?(o=\"function\"==typeof t?t:ta(+t),f(),a):o},a.radius=function(n){return arguments.length?(t=\"function\"==typeof n?n:ta(+n),f(),a):t},a.x=function(t){return arguments.length?(n=+t,a):n},a.y=function(t){return arguments.length?(e=+t,a):e},a},Aa=function(t){var n,e,r,i=ta(.1);function u(t){for(var i,u=0,o=n.length;u<o;++u)(i=n[u]).vx+=(r[u]-i.x)*e[u]*t}function o(){if(n){var u,o=n.length;for(e=new Array(o),r=new Array(o),u=0;u<o;++u)e[u]=isNaN(r[u]=+t(n[u],u,n))?0:+i(n[u],u,n)}}return\"function\"!=typeof t&&(t=ta(null==t?0:+t)),u.initialize=function(t){n=t,o()},u.strength=function(t){return arguments.length?(i=\"function\"==typeof t?t:ta(+t),o(),u):i},u.x=function(n){return arguments.length?(t=\"function\"==typeof n?n:ta(+n),o(),u):t},u},Sa=function(t){var n,e,r,i=ta(.1);function u(t){for(var i,u=0,o=n.length;u<o;++u)(i=n[u]).vy+=(r[u]-i.y)*e[u]*t}function o(){if(n){var u,o=n.length;for(e=new Array(o),r=new Array(o),u=0;u<o;++u)e[u]=isNaN(r[u]=+t(n[u],u,n))?0:+i(n[u],u,n)}}return\"function\"!=typeof t&&(t=ta(null==t?0:+t)),u.initialize=function(t){n=t,o()},u.strength=function(t){return arguments.length?(i=\"function\"==typeof t?t:ta(+t),o(),u):i},u.y=function(n){return arguments.length?(t=\"function\"==typeof n?n:ta(+n),o(),u):t},u},Ta=function(t,n){if((e=(t=n?t.toExponential(n-1):t.toExponential()).indexOf(\"e\"))<0)return null;var e,r=t.slice(0,e);return[r.length>1?r[0]+r.slice(2):r,+t.slice(e+1)]},Na=function(t){return(t=Ta(Math.abs(t)))?t[1]:NaN},ka=function(t,n){var e=Ta(t,n);if(!e)return t+\"\";var r=e[0],i=e[1];return i<0?\"0.\"+new Array(-i).join(\"0\")+r:r.length>i+1?r.slice(0,i+1)+\".\"+r.slice(i+1):r+new Array(i-r.length+2).join(\"0\")},Ea={\"\":function(t,n){t=t.toPrecision(n);t:for(var e,r=t.length,i=1,u=-1;i<r;++i)switch(t[i]){case\".\":u=e=i;break;case\"0\":0===u&&(u=i),e=i;break;case\"e\":break t;default:u>0&&(u=0)}return u>0?t.slice(0,u)+t.slice(e+1):t},\"%\":function(t,n){return(100*t).toFixed(n)},b:function(t){return Math.round(t).toString(2)},c:function(t){return t+\"\"},d:function(t){return Math.round(t).toString(10)},e:function(t,n){return t.toExponential(n)},f:function(t,n){return t.toFixed(n)},g:function(t,n){return t.toPrecision(n)},o:function(t){return Math.round(t).toString(8)},p:function(t,n){return ka(100*t,n)},r:ka,s:function(t,n){var e=Ta(t,n);if(!e)return t+\"\";var r=e[0],i=e[1],u=i-(_a=3*Math.max(-8,Math.min(8,Math.floor(i/3))))+1,o=r.length;return u===o?r:u>o?r+new Array(u-o+1).join(\"0\"):u>0?r.slice(0,u)+\".\"+r.slice(u):\"0.\"+new Array(1-u).join(\"0\")+Ta(t,Math.max(0,n+u-1))[0]},X:function(t){return Math.round(t).toString(16).toUpperCase()},x:function(t){return Math.round(t).toString(16)}},Ca=/^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;function Pa(t){return new za(t)}function za(t){if(!(n=Ca.exec(t)))throw new Error(\"invalid format: \"+t);var n,e=n[1]||\" \",r=n[2]||\">\",i=n[3]||\"-\",u=n[4]||\"\",o=!!n[5],a=n[6]&&+n[6],f=!!n[7],c=n[8]&&+n[8].slice(1),s=n[9]||\"\";\"n\"===s?(f=!0,s=\"g\"):Ea[s]||(s=\"\"),(o||\"0\"===e&&\"=\"===r)&&(o=!0,e=\"0\",r=\"=\"),this.fill=e,this.align=r,this.sign=i,this.symbol=u,this.zero=o,this.width=a,this.comma=f,this.precision=c,this.type=s}Pa.prototype=za.prototype,za.prototype.toString=function(){return this.fill+this.align+this.sign+this.symbol+(this.zero?\"0\":\"\")+(null==this.width?\"\":Math.max(1,0|this.width))+(this.comma?\",\":\"\")+(null==this.precision?\"\":\".\"+Math.max(0,0|this.precision))+this.type};var Ra,Da,La,qa=function(t){return t},Ua=[\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"],Oa=function(t){var n,e,r=t.grouping&&t.thousands?(n=t.grouping,e=t.thousands,function(t,r){for(var i=t.length,u=[],o=0,a=n[0],f=0;i>0&&a>0&&(f+a+1>r&&(a=Math.max(1,r-f)),u.push(t.substring(i-=a,i+a)),!((f+=a+1)>r));)a=n[o=(o+1)%n.length];return u.reverse().join(e)}):qa,i=t.currency,u=t.decimal,o=t.numerals?function(t){return function(n){return n.replace(/[0-9]/g,function(n){return t[+n]})}}(t.numerals):qa,a=t.percent||\"%\";function f(t){var n=(t=Pa(t)).fill,e=t.align,f=t.sign,c=t.symbol,s=t.zero,l=t.width,h=t.comma,d=t.precision,p=t.type,v=\"$\"===c?i[0]:\"#\"===c&&/[boxX]/.test(p)?\"0\"+p.toLowerCase():\"\",g=\"$\"===c?i[1]:/[%p]/.test(p)?a:\"\",y=Ea[p],_=!p||/[defgprs%]/.test(p);function b(t){var i,a,c,b=v,m=g;if(\"c\"===p)m=y(t)+m,t=\"\";else{var x=(t=+t)<0;if(t=y(Math.abs(t),d),x&&0==+t&&(x=!1),b=(x?\"(\"===f?f:\"-\":\"-\"===f||\"(\"===f?\"\":f)+b,m=(\"s\"===p?Ua[8+_a/3]:\"\")+m+(x&&\"(\"===f?\")\":\"\"),_)for(i=-1,a=t.length;++i<a;)if(48>(c=t.charCodeAt(i))||c>57){m=(46===c?u+t.slice(i+1):t.slice(i))+m,t=t.slice(0,i);break}}h&&!s&&(t=r(t,1/0));var w=b.length+t.length+m.length,M=w<l?new Array(l-w+1).join(n):\"\";switch(h&&s&&(t=r(M+t,M.length?l-m.length:1/0),M=\"\"),e){case\"<\":t=b+t+m+M;break;case\"=\":t=b+M+t+m;break;case\"^\":t=M.slice(0,w=M.length>>1)+b+t+m+M.slice(w);break;default:t=M+b+t+m}return o(t)}return d=null==d?p?6:12:/[gprs]/.test(p)?Math.max(1,Math.min(21,d)):Math.max(0,Math.min(20,d)),b.toString=function(){return t+\"\"},b}return{format:f,formatPrefix:function(t,n){var e=f(((t=Pa(t)).type=\"f\",t)),r=3*Math.max(-8,Math.min(8,Math.floor(Na(n)/3))),i=Math.pow(10,-r),u=Ua[8+r/3];return function(t){return e(i*t)+u}}}};function Ia(t){return Ra=Oa(t),Da=Ra.format,La=Ra.formatPrefix,Ra}Ia({decimal:\".\",thousands:\",\",grouping:[3],currency:[\"$\",\"\"]});var Ya=function(t){return Math.max(0,-Na(Math.abs(t)))},Ba=function(t,n){return Math.max(0,3*Math.max(-8,Math.min(8,Math.floor(Na(n)/3)))-Na(Math.abs(t)))},Fa=function(t,n){return t=Math.abs(t),n=Math.abs(n)-t,Math.max(0,Na(n)-Na(t))+1},ja=function(){return new Ha};function Ha(){this.reset()}Ha.prototype={constructor:Ha,reset:function(){this.s=this.t=0},add:function(t){Ga(Xa,t,this.t),Ga(this,Xa.s,this.s),this.s?this.t+=Xa.t:this.s=Xa.t},valueOf:function(){return this.s}};var Xa=new Ha;function Ga(t,n,e){var r=t.s=n+e,i=r-n,u=r-i;t.t=n-u+(e-i)}var Va=1e-6,$a=Math.PI,Wa=$a/2,Za=$a/4,Qa=2*$a,Ja=180/$a,Ka=$a/180,tf=Math.abs,nf=Math.atan,ef=Math.atan2,rf=Math.cos,uf=Math.ceil,of=Math.exp,af=(Math.floor,Math.log),ff=Math.pow,cf=Math.sin,sf=Math.sign||function(t){return t>0?1:t<0?-1:0},lf=Math.sqrt,hf=Math.tan;function df(t){return t>1?0:t<-1?$a:Math.acos(t)}function pf(t){return t>1?Wa:t<-1?-Wa:Math.asin(t)}function vf(t){return(t=cf(t/2))*t}function gf(){}function yf(t,n){t&&bf.hasOwnProperty(t.type)&&bf[t.type](t,n)}var _f={Feature:function(t,n){yf(t.geometry,n)},FeatureCollection:function(t,n){for(var e=t.features,r=-1,i=e.length;++r<i;)yf(e[r].geometry,n)}},bf={Sphere:function(t,n){n.sphere()},Point:function(t,n){t=t.coordinates,n.point(t[0],t[1],t[2])},MultiPoint:function(t,n){for(var e=t.coordinates,r=-1,i=e.length;++r<i;)t=e[r],n.point(t[0],t[1],t[2])},LineString:function(t,n){mf(t.coordinates,n,0)},MultiLineString:function(t,n){for(var e=t.coordinates,r=-1,i=e.length;++r<i;)mf(e[r],n,0)},Polygon:function(t,n){xf(t.coordinates,n)},MultiPolygon:function(t,n){for(var e=t.coordinates,r=-1,i=e.length;++r<i;)xf(e[r],n)},GeometryCollection:function(t,n){for(var e=t.geometries,r=-1,i=e.length;++r<i;)yf(e[r],n)}};function mf(t,n,e){var r,i=-1,u=t.length-e;for(n.lineStart();++i<u;)r=t[i],n.point(r[0],r[1],r[2]);n.lineEnd()}function xf(t,n){var e=-1,r=t.length;for(n.polygonStart();++e<r;)mf(t[e],n,1);n.polygonEnd()}var wf,Mf,Af,Sf,Tf,Nf=function(t,n){t&&_f.hasOwnProperty(t.type)?_f[t.type](t,n):yf(t,n)},kf=ja(),Ef=ja(),Cf={point:gf,lineStart:gf,lineEnd:gf,polygonStart:function(){kf.reset(),Cf.lineStart=Pf,Cf.lineEnd=zf},polygonEnd:function(){var t=+kf;Ef.add(t<0?Qa+t:t),this.lineStart=this.lineEnd=this.point=gf},sphere:function(){Ef.add(Qa)}};function Pf(){Cf.point=Rf}function zf(){Df(wf,Mf)}function Rf(t,n){Cf.point=Df,wf=t,Mf=n,Af=t*=Ka,Sf=rf(n=(n*=Ka)/2+Za),Tf=cf(n)}function Df(t,n){n=(n*=Ka)/2+Za;var e=(t*=Ka)-Af,r=e>=0?1:-1,i=r*e,u=rf(n),o=cf(n),a=Tf*o,f=Sf*u+a*rf(i),c=a*r*cf(i);kf.add(ef(c,f)),Af=t,Sf=u,Tf=o}var Lf=function(t){return Ef.reset(),Nf(t,Cf),2*Ef};function qf(t){return[ef(t[1],t[0]),pf(t[2])]}function Uf(t){var n=t[0],e=t[1],r=rf(e);return[r*rf(n),r*cf(n),cf(e)]}function Of(t,n){return t[0]*n[0]+t[1]*n[1]+t[2]*n[2]}function If(t,n){return[t[1]*n[2]-t[2]*n[1],t[2]*n[0]-t[0]*n[2],t[0]*n[1]-t[1]*n[0]]}function Yf(t,n){t[0]+=n[0],t[1]+=n[1],t[2]+=n[2]}function Bf(t,n){return[t[0]*n,t[1]*n,t[2]*n]}function Ff(t){var n=lf(t[0]*t[0]+t[1]*t[1]+t[2]*t[2]);t[0]/=n,t[1]/=n,t[2]/=n}var jf,Hf,Xf,Gf,Vf,$f,Wf,Zf,Qf,Jf,Kf=ja(),tc={point:nc,lineStart:rc,lineEnd:ic,polygonStart:function(){tc.point=uc,tc.lineStart=oc,tc.lineEnd=ac,Kf.reset(),Cf.polygonStart()},polygonEnd:function(){Cf.polygonEnd(),tc.point=nc,tc.lineStart=rc,tc.lineEnd=ic,kf<0?(jf=-(Xf=180),Hf=-(Gf=90)):Kf>Va?Gf=90:Kf<-Va&&(Hf=-90),Jf[0]=jf,Jf[1]=Xf}};function nc(t,n){Qf.push(Jf=[jf=t,Xf=t]),n<Hf&&(Hf=n),n>Gf&&(Gf=n)}function ec(t,n){var e=Uf([t*Ka,n*Ka]);if(Zf){var r=If(Zf,e),i=If([r[1],-r[0],0],r);Ff(i),i=qf(i);var u,o=t-Vf,a=o>0?1:-1,f=i[0]*Ja*a,c=tf(o)>180;c^(a*Vf<f&&f<a*t)?(u=i[1]*Ja)>Gf&&(Gf=u):c^(a*Vf<(f=(f+360)%360-180)&&f<a*t)?(u=-i[1]*Ja)<Hf&&(Hf=u):(n<Hf&&(Hf=n),n>Gf&&(Gf=n)),c?t<Vf?fc(jf,t)>fc(jf,Xf)&&(Xf=t):fc(t,Xf)>fc(jf,Xf)&&(jf=t):Xf>=jf?(t<jf&&(jf=t),t>Xf&&(Xf=t)):t>Vf?fc(jf,t)>fc(jf,Xf)&&(Xf=t):fc(t,Xf)>fc(jf,Xf)&&(jf=t)}else Qf.push(Jf=[jf=t,Xf=t]);n<Hf&&(Hf=n),n>Gf&&(Gf=n),Zf=e,Vf=t}function rc(){tc.point=ec}function ic(){Jf[0]=jf,Jf[1]=Xf,tc.point=nc,Zf=null}function uc(t,n){if(Zf){var e=t-Vf;Kf.add(tf(e)>180?e+(e>0?360:-360):e)}else $f=t,Wf=n;Cf.point(t,n),ec(t,n)}function oc(){Cf.lineStart()}function ac(){uc($f,Wf),Cf.lineEnd(),tf(Kf)>Va&&(jf=-(Xf=180)),Jf[0]=jf,Jf[1]=Xf,Zf=null}function fc(t,n){return(n-=t)<0?n+360:n}function cc(t,n){return t[0]-n[0]}function sc(t,n){return t[0]<=t[1]?t[0]<=n&&n<=t[1]:n<t[0]||t[1]<n}var lc,hc,dc,pc,vc,gc,yc,_c,bc,mc,xc,wc,Mc,Ac,Sc,Tc,Nc=function(t){var n,e,r,i,u,o,a;if(Gf=Xf=-(jf=Hf=1/0),Qf=[],Nf(t,tc),e=Qf.length){for(Qf.sort(cc),n=1,u=[r=Qf[0]];n<e;++n)sc(r,(i=Qf[n])[0])||sc(r,i[1])?(fc(r[0],i[1])>fc(r[0],r[1])&&(r[1]=i[1]),fc(i[0],r[1])>fc(r[0],r[1])&&(r[0]=i[0])):u.push(r=i);for(o=-1/0,n=0,r=u[e=u.length-1];n<=e;r=i,++n)i=u[n],(a=fc(r[1],i[0]))>o&&(o=a,jf=i[0],Xf=r[1])}return Qf=Jf=null,jf===1/0||Hf===1/0?[[NaN,NaN],[NaN,NaN]]:[[jf,Hf],[Xf,Gf]]},kc={sphere:gf,point:Ec,lineStart:Pc,lineEnd:Dc,polygonStart:function(){kc.lineStart=Lc,kc.lineEnd=qc},polygonEnd:function(){kc.lineStart=Pc,kc.lineEnd=Dc}};function Ec(t,n){t*=Ka;var e=rf(n*=Ka);Cc(e*rf(t),e*cf(t),cf(n))}function Cc(t,n,e){dc+=(t-dc)/++lc,pc+=(n-pc)/lc,vc+=(e-vc)/lc}function Pc(){kc.point=zc}function zc(t,n){t*=Ka;var e=rf(n*=Ka);Ac=e*rf(t),Sc=e*cf(t),Tc=cf(n),kc.point=Rc,Cc(Ac,Sc,Tc)}function Rc(t,n){t*=Ka;var e=rf(n*=Ka),r=e*rf(t),i=e*cf(t),u=cf(n),o=ef(lf((o=Sc*u-Tc*i)*o+(o=Tc*r-Ac*u)*o+(o=Ac*i-Sc*r)*o),Ac*r+Sc*i+Tc*u);hc+=o,gc+=o*(Ac+(Ac=r)),yc+=o*(Sc+(Sc=i)),_c+=o*(Tc+(Tc=u)),Cc(Ac,Sc,Tc)}function Dc(){kc.point=Ec}function Lc(){kc.point=Uc}function qc(){Oc(wc,Mc),kc.point=Ec}function Uc(t,n){wc=t,Mc=n,t*=Ka,n*=Ka,kc.point=Oc;var e=rf(n);Ac=e*rf(t),Sc=e*cf(t),Tc=cf(n),Cc(Ac,Sc,Tc)}function Oc(t,n){t*=Ka;var e=rf(n*=Ka),r=e*rf(t),i=e*cf(t),u=cf(n),o=Sc*u-Tc*i,a=Tc*r-Ac*u,f=Ac*i-Sc*r,c=lf(o*o+a*a+f*f),s=pf(c),l=c&&-s/c;bc+=l*o,mc+=l*a,xc+=l*f,hc+=s,gc+=s*(Ac+(Ac=r)),yc+=s*(Sc+(Sc=i)),_c+=s*(Tc+(Tc=u)),Cc(Ac,Sc,Tc)}var Ic=function(t){lc=hc=dc=pc=vc=gc=yc=_c=bc=mc=xc=0,Nf(t,kc);var n=bc,e=mc,r=xc,i=n*n+e*e+r*r;return i<1e-12&&(n=gc,e=yc,r=_c,hc<Va&&(n=dc,e=pc,r=vc),(i=n*n+e*e+r*r)<1e-12)?[NaN,NaN]:[ef(e,n)*Ja,pf(r/lf(i))*Ja]},Yc=function(t){return function(){return t}},Bc=function(t,n){function e(e,r){return e=t(e,r),n(e[0],e[1])}return t.invert&&n.invert&&(e.invert=function(e,r){return(e=n.invert(e,r))&&t.invert(e[0],e[1])}),e};function Fc(t,n){return[t>$a?t-Qa:t<-$a?t+Qa:t,n]}function jc(t,n,e){return(t%=Qa)?n||e?Bc(Xc(t),Gc(n,e)):Xc(t):n||e?Gc(n,e):Fc}function Hc(t){return function(n,e){return[(n+=t)>$a?n-Qa:n<-$a?n+Qa:n,e]}}function Xc(t){var n=Hc(t);return n.invert=Hc(-t),n}function Gc(t,n){var e=rf(t),r=cf(t),i=rf(n),u=cf(n);function o(t,n){var o=rf(n),a=rf(t)*o,f=cf(t)*o,c=cf(n),s=c*e+a*r;return[ef(f*i-s*u,a*e-c*r),pf(s*i+f*u)]}return o.invert=function(t,n){var o=rf(n),a=rf(t)*o,f=cf(t)*o,c=cf(n),s=c*i-f*u;return[ef(f*i+c*u,a*e+s*r),pf(s*e-a*r)]},o}Fc.invert=Fc;var Vc=function(t){function n(n){return(n=t(n[0]*Ka,n[1]*Ka))[0]*=Ja,n[1]*=Ja,n}return t=jc(t[0]*Ka,t[1]*Ka,t.length>2?t[2]*Ka:0),n.invert=function(n){return(n=t.invert(n[0]*Ka,n[1]*Ka))[0]*=Ja,n[1]*=Ja,n},n};function $c(t,n,e,r,i,u){if(e){var o=rf(n),a=cf(n),f=r*e;null==i?(i=n+r*Qa,u=n-f/2):(i=Wc(o,i),u=Wc(o,u),(r>0?i<u:i>u)&&(i+=r*Qa));for(var c,s=i;r>0?s>u:s<u;s-=f)c=qf([o,-a*rf(s),-a*cf(s)]),t.point(c[0],c[1])}}function Wc(t,n){(n=Uf(n))[0]-=t,Ff(n);var e=df(-n[1]);return((-n[2]<0?-e:e)+Qa-Va)%Qa}var Zc=function(){var t,n,e=Yc([0,0]),r=Yc(90),i=Yc(6),u={point:function(e,r){t.push(e=n(e,r)),e[0]*=Ja,e[1]*=Ja}};function o(){var o=e.apply(this,arguments),a=r.apply(this,arguments)*Ka,f=i.apply(this,arguments)*Ka;return t=[],n=jc(-o[0]*Ka,-o[1]*Ka,0).invert,$c(u,a,f,1),o={type:\"Polygon\",coordinates:[t]},t=n=null,o}return o.center=function(t){return arguments.length?(e=\"function\"==typeof t?t:Yc([+t[0],+t[1]]),o):e},o.radius=function(t){return arguments.length?(r=\"function\"==typeof t?t:Yc(+t),o):r},o.precision=function(t){return arguments.length?(i=\"function\"==typeof t?t:Yc(+t),o):i},o},Qc=function(){var t,n=[];return{point:function(n,e){t.push([n,e])},lineStart:function(){n.push(t=[])},lineEnd:gf,rejoin:function(){n.length>1&&n.push(n.pop().concat(n.shift()))},result:function(){var e=n;return n=[],t=null,e}}},Jc=function(t,n){return tf(t[0]-n[0])<Va&&tf(t[1]-n[1])<Va};function Kc(t,n,e,r){this.x=t,this.z=n,this.o=e,this.e=r,this.v=!1,this.n=this.p=null}var ts=function(t,n,e,r,i){var u,o,a=[],f=[];if(t.forEach(function(t){if(!((n=t.length-1)<=0)){var n,e,r=t[0],o=t[n];if(Jc(r,o)){for(i.lineStart(),u=0;u<n;++u)i.point((r=t[u])[0],r[1]);i.lineEnd()}else a.push(e=new Kc(r,t,null,!0)),f.push(e.o=new Kc(r,null,e,!1)),a.push(e=new Kc(o,t,null,!1)),f.push(e.o=new Kc(o,null,e,!0))}}),a.length){for(f.sort(n),ns(a),ns(f),u=0,o=f.length;u<o;++u)f[u].e=e=!e;for(var c,s,l=a[0];;){for(var h=l,d=!0;h.v;)if((h=h.n)===l)return;c=h.z,i.lineStart();do{if(h.v=h.o.v=!0,h.e){if(d)for(u=0,o=c.length;u<o;++u)i.point((s=c[u])[0],s[1]);else r(h.x,h.n.x,1,i);h=h.n}else{if(d)for(c=h.p.z,u=c.length-1;u>=0;--u)i.point((s=c[u])[0],s[1]);else r(h.x,h.p.x,-1,i);h=h.p}c=(h=h.o).z,d=!d}while(!h.v);i.lineEnd()}}};function ns(t){if(n=t.length){for(var n,e,r=0,i=t[0];++r<n;)i.n=e=t[r],e.p=i,i=e;i.n=e=t[0],e.p=i}}var es=ja(),rs=function(t,n){var e=n[0],r=n[1],i=cf(r),u=[cf(e),-rf(e),0],o=0,a=0;es.reset(),1===i?r=Wa+Va:-1===i&&(r=-Wa-Va);for(var f=0,c=t.length;f<c;++f)if(l=(s=t[f]).length)for(var s,l,h=s[l-1],d=h[0],p=h[1]/2+Za,v=cf(p),g=rf(p),y=0;y<l;++y,d=b,v=x,g=w,h=_){var _=s[y],b=_[0],m=_[1]/2+Za,x=cf(m),w=rf(m),M=b-d,A=M>=0?1:-1,S=A*M,T=S>$a,N=v*x;if(es.add(ef(N*A*cf(S),g*w+N*rf(S))),o+=T?M+A*Qa:M,T^d>=e^b>=e){var k=If(Uf(h),Uf(_));Ff(k);var E=If(u,k);Ff(E);var C=(T^M>=0?-1:1)*pf(E[2]);(r>C||r===C&&(k[0]||k[1]))&&(a+=T^M>=0?1:-1)}}return(o<-Va||o<Va&&es<-Va)^1&a},is=function(t,n,e,r){return function(i){var u,o,a,f=n(i),c=Qc(),s=n(c),l=!1,h={point:d,lineStart:v,lineEnd:g,polygonStart:function(){h.point=y,h.lineStart=_,h.lineEnd=b,o=[],u=[]},polygonEnd:function(){h.point=d,h.lineStart=v,h.lineEnd=g,o=U(o);var t=rs(u,r);o.length?(l||(i.polygonStart(),l=!0),ts(o,os,t,e,i)):t&&(l||(i.polygonStart(),l=!0),i.lineStart(),e(null,null,1,i),i.lineEnd()),l&&(i.polygonEnd(),l=!1),o=u=null},sphere:function(){i.polygonStart(),i.lineStart(),e(null,null,1,i),i.lineEnd(),i.polygonEnd()}};function d(n,e){t(n,e)&&i.point(n,e)}function p(t,n){f.point(t,n)}function v(){h.point=p,f.lineStart()}function g(){h.point=d,f.lineEnd()}function y(t,n){a.push([t,n]),s.point(t,n)}function _(){s.lineStart(),a=[]}function b(){y(a[0][0],a[0][1]),s.lineEnd();var t,n,e,r,f=s.clean(),h=c.result(),d=h.length;if(a.pop(),u.push(a),a=null,d)if(1&f){if((n=(e=h[0]).length-1)>0){for(l||(i.polygonStart(),l=!0),i.lineStart(),t=0;t<n;++t)i.point((r=e[t])[0],r[1]);i.lineEnd()}}else d>1&&2&f&&h.push(h.pop().concat(h.shift())),o.push(h.filter(us))}return h}};function us(t){return t.length>1}function os(t,n){return((t=t.x)[0]<0?t[1]-Wa-Va:Wa-t[1])-((n=n.x)[0]<0?n[1]-Wa-Va:Wa-n[1])}var as=is(function(){return!0},function(t){var n,e=NaN,r=NaN,i=NaN;return{lineStart:function(){t.lineStart(),n=1},point:function(u,o){var a=u>0?$a:-$a,f=tf(u-e);tf(f-$a)<Va?(t.point(e,r=(r+o)/2>0?Wa:-Wa),t.point(i,r),t.lineEnd(),t.lineStart(),t.point(a,r),t.point(u,r),n=0):i!==a&&f>=$a&&(tf(e-i)<Va&&(e-=i*Va),tf(u-a)<Va&&(u-=a*Va),r=function(t,n,e,r){var i,u,o=cf(t-e);return tf(o)>Va?nf((cf(n)*(u=rf(r))*cf(e)-cf(r)*(i=rf(n))*cf(t))/(i*u*o)):(n+r)/2}(e,r,u,o),t.point(i,r),t.lineEnd(),t.lineStart(),t.point(a,r),n=0),t.point(e=u,r=o),i=a},lineEnd:function(){t.lineEnd(),e=r=NaN},clean:function(){return 2-n}}},function(t,n,e,r){var i;if(null==t)i=e*Wa,r.point(-$a,i),r.point(0,i),r.point($a,i),r.point($a,0),r.point($a,-i),r.point(0,-i),r.point(-$a,-i),r.point(-$a,0),r.point(-$a,i);else if(tf(t[0]-n[0])>Va){var u=t[0]<n[0]?$a:-$a;i=e*u/2,r.point(-u,i),r.point(0,i),r.point(u,i)}else r.point(n[0],n[1])},[-$a,-Wa]);var fs=function(t){var n=rf(t),e=6*Ka,r=n>0,i=tf(n)>Va;function u(t,e){return rf(t)*rf(e)>n}function o(t,e,r){var i=[1,0,0],u=If(Uf(t),Uf(e)),o=Of(u,u),a=u[0],f=o-a*a;if(!f)return!r&&t;var c=n*o/f,s=-n*a/f,l=If(i,u),h=Bf(i,c);Yf(h,Bf(u,s));var d=l,p=Of(h,d),v=Of(d,d),g=p*p-v*(Of(h,h)-1);if(!(g<0)){var y=lf(g),_=Bf(d,(-p-y)/v);if(Yf(_,h),_=qf(_),!r)return _;var b,m=t[0],x=e[0],w=t[1],M=e[1];x<m&&(b=m,m=x,x=b);var A=x-m,S=tf(A-$a)<Va;if(!S&&M<w&&(b=w,w=M,M=b),S||A<Va?S?w+M>0^_[1]<(tf(_[0]-m)<Va?w:M):w<=_[1]&&_[1]<=M:A>$a^(m<=_[0]&&_[0]<=x)){var T=Bf(d,(-p+y)/v);return Yf(T,h),[_,qf(T)]}}}function a(n,e){var i=r?t:$a-t,u=0;return n<-i?u|=1:n>i&&(u|=2),e<-i?u|=4:e>i&&(u|=8),u}return is(u,function(t){var n,e,f,c,s;return{lineStart:function(){c=f=!1,s=1},point:function(l,h){var d,p=[l,h],v=u(l,h),g=r?v?0:a(l,h):v?a(l+(l<0?$a:-$a),h):0;if(!n&&(c=f=v)&&t.lineStart(),v!==f&&(!(d=o(n,p))||Jc(n,d)||Jc(p,d))&&(p[0]+=Va,p[1]+=Va,v=u(p[0],p[1])),v!==f)s=0,v?(t.lineStart(),d=o(p,n),t.point(d[0],d[1])):(d=o(n,p),t.point(d[0],d[1]),t.lineEnd()),n=d;else if(i&&n&&r^v){var y;g&e||!(y=o(p,n,!0))||(s=0,r?(t.lineStart(),t.point(y[0][0],y[0][1]),t.point(y[1][0],y[1][1]),t.lineEnd()):(t.point(y[1][0],y[1][1]),t.lineEnd(),t.lineStart(),t.point(y[0][0],y[0][1])))}!v||n&&Jc(n,p)||t.point(p[0],p[1]),n=p,f=v,e=g},lineEnd:function(){f&&t.lineEnd(),n=null},clean:function(){return s|(c&&f)<<1}}},function(n,r,i,u){$c(u,t,e,i,n,r)},r?[0,-t]:[-$a,t-$a])},cs=function(t,n,e,r,i,u){var o,a=t[0],f=t[1],c=0,s=1,l=n[0]-a,h=n[1]-f;if(o=e-a,l||!(o>0)){if(o/=l,l<0){if(o<c)return;o<s&&(s=o)}else if(l>0){if(o>s)return;o>c&&(c=o)}if(o=i-a,l||!(o<0)){if(o/=l,l<0){if(o>s)return;o>c&&(c=o)}else if(l>0){if(o<c)return;o<s&&(s=o)}if(o=r-f,h||!(o>0)){if(o/=h,h<0){if(o<c)return;o<s&&(s=o)}else if(h>0){if(o>s)return;o>c&&(c=o)}if(o=u-f,h||!(o<0)){if(o/=h,h<0){if(o>s)return;o>c&&(c=o)}else if(h>0){if(o<c)return;o<s&&(s=o)}return c>0&&(t[0]=a+c*l,t[1]=f+c*h),s<1&&(n[0]=a+s*l,n[1]=f+s*h),!0}}}}},ss=1e9,ls=-ss;function hs(t,n,e,r){function i(i,u){return t<=i&&i<=e&&n<=u&&u<=r}function u(i,u,a,c){var s=0,l=0;if(null==i||(s=o(i,a))!==(l=o(u,a))||f(i,u)<0^a>0)do{c.point(0===s||3===s?t:e,s>1?r:n)}while((s=(s+a+4)%4)!==l);else c.point(u[0],u[1])}function o(r,i){return tf(r[0]-t)<Va?i>0?0:3:tf(r[0]-e)<Va?i>0?2:1:tf(r[1]-n)<Va?i>0?1:0:i>0?3:2}function a(t,n){return f(t.x,n.x)}function f(t,n){var e=o(t,1),r=o(n,1);return e!==r?e-r:0===e?n[1]-t[1]:1===e?t[0]-n[0]:2===e?t[1]-n[1]:n[0]-t[0]}return function(o){var f,c,s,l,h,d,p,v,g,y,_,b=o,m=Qc(),x={point:w,lineStart:function(){x.point=M,c&&c.push(s=[]);y=!0,g=!1,p=v=NaN},lineEnd:function(){f&&(M(l,h),d&&g&&m.rejoin(),f.push(m.result()));x.point=w,g&&b.lineEnd()},polygonStart:function(){b=m,f=[],c=[],_=!0},polygonEnd:function(){var n=function(){for(var n=0,e=0,i=c.length;e<i;++e)for(var u,o,a=c[e],f=1,s=a.length,l=a[0],h=l[0],d=l[1];f<s;++f)u=h,o=d,l=a[f],h=l[0],d=l[1],o<=r?d>r&&(h-u)*(r-o)>(d-o)*(t-u)&&++n:d<=r&&(h-u)*(r-o)<(d-o)*(t-u)&&--n;return n}(),e=_&&n,i=(f=U(f)).length;(e||i)&&(o.polygonStart(),e&&(o.lineStart(),u(null,null,1,o),o.lineEnd()),i&&ts(f,a,n,u,o),o.polygonEnd());b=o,f=c=s=null}};function w(t,n){i(t,n)&&b.point(t,n)}function M(u,o){var a=i(u,o);if(c&&s.push([u,o]),y)l=u,h=o,d=a,y=!1,a&&(b.lineStart(),b.point(u,o));else if(a&&g)b.point(u,o);else{var f=[p=Math.max(ls,Math.min(ss,p)),v=Math.max(ls,Math.min(ss,v))],m=[u=Math.max(ls,Math.min(ss,u)),o=Math.max(ls,Math.min(ss,o))];cs(f,m,t,n,e,r)?(g||(b.lineStart(),b.point(f[0],f[1])),b.point(m[0],m[1]),a||b.lineEnd(),_=!1):a&&(b.lineStart(),b.point(u,o),_=!1)}p=u,v=o,g=a}return x}}var ds,ps,vs,gs=function(){var t,n,e,r=0,i=0,u=960,o=500;return e={stream:function(e){return t&&n===e?t:t=hs(r,i,u,o)(n=e)},extent:function(a){return arguments.length?(r=+a[0][0],i=+a[0][1],u=+a[1][0],o=+a[1][1],t=n=null,e):[[r,i],[u,o]]}}},ys=ja(),_s={sphere:gf,point:gf,lineStart:function(){_s.point=ms,_s.lineEnd=bs},lineEnd:gf,polygonStart:gf,polygonEnd:gf};function bs(){_s.point=_s.lineEnd=gf}function ms(t,n){ds=t*=Ka,ps=cf(n*=Ka),vs=rf(n),_s.point=xs}function xs(t,n){t*=Ka;var e=cf(n*=Ka),r=rf(n),i=tf(t-ds),u=rf(i),o=r*cf(i),a=vs*e-ps*r*u,f=ps*e+vs*r*u;ys.add(ef(lf(o*o+a*a),f)),ds=t,ps=e,vs=r}var ws=function(t){return ys.reset(),Nf(t,_s),+ys},Ms=[null,null],As={type:\"LineString\",coordinates:Ms},Ss=function(t,n){return Ms[0]=t,Ms[1]=n,ws(As)},Ts={Feature:function(t,n){return ks(t.geometry,n)},FeatureCollection:function(t,n){for(var e=t.features,r=-1,i=e.length;++r<i;)if(ks(e[r].geometry,n))return!0;return!1}},Ns={Sphere:function(){return!0},Point:function(t,n){return Es(t.coordinates,n)},MultiPoint:function(t,n){for(var e=t.coordinates,r=-1,i=e.length;++r<i;)if(Es(e[r],n))return!0;return!1},LineString:function(t,n){return Cs(t.coordinates,n)},MultiLineString:function(t,n){for(var e=t.coordinates,r=-1,i=e.length;++r<i;)if(Cs(e[r],n))return!0;return!1},Polygon:function(t,n){return Ps(t.coordinates,n)},MultiPolygon:function(t,n){for(var e=t.coordinates,r=-1,i=e.length;++r<i;)if(Ps(e[r],n))return!0;return!1},GeometryCollection:function(t,n){for(var e=t.geometries,r=-1,i=e.length;++r<i;)if(ks(e[r],n))return!0;return!1}};function ks(t,n){return!(!t||!Ns.hasOwnProperty(t.type))&&Ns[t.type](t,n)}function Es(t,n){return 0===Ss(t,n)}function Cs(t,n){var e=Ss(t[0],t[1]);return Ss(t[0],n)+Ss(n,t[1])<=e+Va}function Ps(t,n){return!!rs(t.map(zs),Rs(n))}function zs(t){return(t=t.map(Rs)).pop(),t}function Rs(t){return[t[0]*Ka,t[1]*Ka]}var Ds=function(t,n){return(t&&Ts.hasOwnProperty(t.type)?Ts[t.type]:ks)(t,n)};function Ls(t,n,e){var r=w(t,n-Va,e).concat(n);return function(t){return r.map(function(n){return[t,n]})}}function qs(t,n,e){var r=w(t,n-Va,e).concat(n);return function(t){return r.map(function(n){return[n,t]})}}function Us(){var t,n,e,r,i,u,o,a,f,c,s,l,h=10,d=h,p=90,v=360,g=2.5;function y(){return{type:\"MultiLineString\",coordinates:_()}}function _(){return w(uf(r/p)*p,e,p).map(s).concat(w(uf(a/v)*v,o,v).map(l)).concat(w(uf(n/h)*h,t,h).filter(function(t){return tf(t%p)>Va}).map(f)).concat(w(uf(u/d)*d,i,d).filter(function(t){return tf(t%v)>Va}).map(c))}return y.lines=function(){return _().map(function(t){return{type:\"LineString\",coordinates:t}})},y.outline=function(){return{type:\"Polygon\",coordinates:[s(r).concat(l(o).slice(1),s(e).reverse().slice(1),l(a).reverse().slice(1))]}},y.extent=function(t){return arguments.length?y.extentMajor(t).extentMinor(t):y.extentMinor()},y.extentMajor=function(t){return arguments.length?(r=+t[0][0],e=+t[1][0],a=+t[0][1],o=+t[1][1],r>e&&(t=r,r=e,e=t),a>o&&(t=a,a=o,o=t),y.precision(g)):[[r,a],[e,o]]},y.extentMinor=function(e){return arguments.length?(n=+e[0][0],t=+e[1][0],u=+e[0][1],i=+e[1][1],n>t&&(e=n,n=t,t=e),u>i&&(e=u,u=i,i=e),y.precision(g)):[[n,u],[t,i]]},y.step=function(t){return arguments.length?y.stepMajor(t).stepMinor(t):y.stepMinor()},y.stepMajor=function(t){return arguments.length?(p=+t[0],v=+t[1],y):[p,v]},y.stepMinor=function(t){return arguments.length?(h=+t[0],d=+t[1],y):[h,d]},y.precision=function(h){return arguments.length?(g=+h,f=Ls(u,i,90),c=qs(n,t,g),s=Ls(a,o,90),l=qs(r,e,g),y):g},y.extentMajor([[-180,-90+Va],[180,90-Va]]).extentMinor([[-180,-80-Va],[180,80+Va]])}function Os(){return Us()()}var Is,Ys,Bs,Fs,js=function(t,n){var e=t[0]*Ka,r=t[1]*Ka,i=n[0]*Ka,u=n[1]*Ka,o=rf(r),a=cf(r),f=rf(u),c=cf(u),s=o*rf(e),l=o*cf(e),h=f*rf(i),d=f*cf(i),p=2*pf(lf(vf(u-r)+o*f*vf(i-e))),v=cf(p),g=p?function(t){var n=cf(t*=p)/v,e=cf(p-t)/v,r=e*s+n*h,i=e*l+n*d,u=e*a+n*c;return[ef(i,r)*Ja,ef(u,lf(r*r+i*i))*Ja]}:function(){return[e*Ja,r*Ja]};return g.distance=p,g},Hs=function(t){return t},Xs=ja(),Gs=ja(),Vs={point:gf,lineStart:gf,lineEnd:gf,polygonStart:function(){Vs.lineStart=$s,Vs.lineEnd=Qs},polygonEnd:function(){Vs.lineStart=Vs.lineEnd=Vs.point=gf,Xs.add(tf(Gs)),Gs.reset()},result:function(){var t=Xs/2;return Xs.reset(),t}};function $s(){Vs.point=Ws}function Ws(t,n){Vs.point=Zs,Is=Bs=t,Ys=Fs=n}function Zs(t,n){Gs.add(Fs*t-Bs*n),Bs=t,Fs=n}function Qs(){Zs(Is,Ys)}var Js=Vs,Ks=1/0,tl=Ks,nl=-Ks,el=nl;var rl,il,ul,ol,al={point:function(t,n){t<Ks&&(Ks=t);t>nl&&(nl=t);n<tl&&(tl=n);n>el&&(el=n)},lineStart:gf,lineEnd:gf,polygonStart:gf,polygonEnd:gf,result:function(){var t=[[Ks,tl],[nl,el]];return nl=el=-(tl=Ks=1/0),t}},fl=0,cl=0,sl=0,ll=0,hl=0,dl=0,pl=0,vl=0,gl=0,yl={point:_l,lineStart:bl,lineEnd:wl,polygonStart:function(){yl.lineStart=Ml,yl.lineEnd=Al},polygonEnd:function(){yl.point=_l,yl.lineStart=bl,yl.lineEnd=wl},result:function(){var t=gl?[pl/gl,vl/gl]:dl?[ll/dl,hl/dl]:sl?[fl/sl,cl/sl]:[NaN,NaN];return fl=cl=sl=ll=hl=dl=pl=vl=gl=0,t}};function _l(t,n){fl+=t,cl+=n,++sl}function bl(){yl.point=ml}function ml(t,n){yl.point=xl,_l(ul=t,ol=n)}function xl(t,n){var e=t-ul,r=n-ol,i=lf(e*e+r*r);ll+=i*(ul+t)/2,hl+=i*(ol+n)/2,dl+=i,_l(ul=t,ol=n)}function wl(){yl.point=_l}function Ml(){yl.point=Sl}function Al(){Tl(rl,il)}function Sl(t,n){yl.point=Tl,_l(rl=ul=t,il=ol=n)}function Tl(t,n){var e=t-ul,r=n-ol,i=lf(e*e+r*r);ll+=i*(ul+t)/2,hl+=i*(ol+n)/2,dl+=i,pl+=(i=ol*t-ul*n)*(ul+t),vl+=i*(ol+n),gl+=3*i,_l(ul=t,ol=n)}var Nl=yl;function kl(t){this._context=t}kl.prototype={_radius:4.5,pointRadius:function(t){return this._radius=t,this},polygonStart:function(){this._line=0},polygonEnd:function(){this._line=NaN},lineStart:function(){this._point=0},lineEnd:function(){0===this._line&&this._context.closePath(),this._point=NaN},point:function(t,n){switch(this._point){case 0:this._context.moveTo(t,n),this._point=1;break;case 1:this._context.lineTo(t,n);break;default:this._context.moveTo(t+this._radius,n),this._context.arc(t,n,this._radius,0,Qa)}},result:gf};var El,Cl,Pl,zl,Rl,Dl=ja(),Ll={point:gf,lineStart:function(){Ll.point=ql},lineEnd:function(){El&&Ul(Cl,Pl),Ll.point=gf},polygonStart:function(){El=!0},polygonEnd:function(){El=null},result:function(){var t=+Dl;return Dl.reset(),t}};function ql(t,n){Ll.point=Ul,Cl=zl=t,Pl=Rl=n}function Ul(t,n){zl-=t,Rl-=n,Dl.add(lf(zl*zl+Rl*Rl)),zl=t,Rl=n}var Ol=Ll;function Il(){this._string=[]}function Yl(t){return\"m0,\"+t+\"a\"+t+\",\"+t+\" 0 1,1 0,\"+-2*t+\"a\"+t+\",\"+t+\" 0 1,1 0,\"+2*t+\"z\"}Il.prototype={_radius:4.5,_circle:Yl(4.5),pointRadius:function(t){return(t=+t)!==this._radius&&(this._radius=t,this._circle=null),this},polygonStart:function(){this._line=0},polygonEnd:function(){this._line=NaN},lineStart:function(){this._point=0},lineEnd:function(){0===this._line&&this._string.push(\"Z\"),this._point=NaN},point:function(t,n){switch(this._point){case 0:this._string.push(\"M\",t,\",\",n),this._point=1;break;case 1:this._string.push(\"L\",t,\",\",n);break;default:null==this._circle&&(this._circle=Yl(this._radius)),this._string.push(\"M\",t,\",\",n,this._circle)}},result:function(){if(this._string.length){var t=this._string.join(\"\");return this._string=[],t}return null}};var Bl=function(t,n){var e,r,i=4.5;function u(t){return t&&(\"function\"==typeof i&&r.pointRadius(+i.apply(this,arguments)),Nf(t,e(r))),r.result()}return u.area=function(t){return Nf(t,e(Js)),Js.result()},u.measure=function(t){return Nf(t,e(Ol)),Ol.result()},u.bounds=function(t){return Nf(t,e(al)),al.result()},u.centroid=function(t){return Nf(t,e(Nl)),Nl.result()},u.projection=function(n){return arguments.length?(e=null==n?(t=null,Hs):(t=n).stream,u):t},u.context=function(t){return arguments.length?(r=null==t?(n=null,new Il):new kl(n=t),\"function\"!=typeof i&&r.pointRadius(i),u):n},u.pointRadius=function(t){return arguments.length?(i=\"function\"==typeof t?t:(r.pointRadius(+t),+t),u):i},u.projection(t).context(n)},Fl=function(t){return{stream:jl(t)}};function jl(t){return function(n){var e=new Hl;for(var r in t)e[r]=t[r];return e.stream=n,e}}function Hl(){}function Xl(t,n,e){var r=t.clipExtent&&t.clipExtent();return t.scale(150).translate([0,0]),null!=r&&t.clipExtent(null),Nf(e,t.stream(al)),n(al.result()),null!=r&&t.clipExtent(r),t}function Gl(t,n,e){return Xl(t,function(e){var r=n[1][0]-n[0][0],i=n[1][1]-n[0][1],u=Math.min(r/(e[1][0]-e[0][0]),i/(e[1][1]-e[0][1])),o=+n[0][0]+(r-u*(e[1][0]+e[0][0]))/2,a=+n[0][1]+(i-u*(e[1][1]+e[0][1]))/2;t.scale(150*u).translate([o,a])},e)}function Vl(t,n,e){return Gl(t,[[0,0],n],e)}function $l(t,n,e){return Xl(t,function(e){var r=+n,i=r/(e[1][0]-e[0][0]),u=(r-i*(e[1][0]+e[0][0]))/2,o=-i*e[0][1];t.scale(150*i).translate([u,o])},e)}function Wl(t,n,e){return Xl(t,function(e){var r=+n,i=r/(e[1][1]-e[0][1]),u=-i*e[0][0],o=(r-i*(e[1][1]+e[0][1]))/2;t.scale(150*i).translate([u,o])},e)}Hl.prototype={constructor:Hl,point:function(t,n){this.stream.point(t,n)},sphere:function(){this.stream.sphere()},lineStart:function(){this.stream.lineStart()},lineEnd:function(){this.stream.lineEnd()},polygonStart:function(){this.stream.polygonStart()},polygonEnd:function(){this.stream.polygonEnd()}};var Zl=16,Ql=rf(30*Ka),Jl=function(t,n){return+n?function(t,n){function e(r,i,u,o,a,f,c,s,l,h,d,p,v,g){var y=c-r,_=s-i,b=y*y+_*_;if(b>4*n&&v--){var m=o+h,x=a+d,w=f+p,M=lf(m*m+x*x+w*w),A=pf(w/=M),S=tf(tf(w)-1)<Va||tf(u-l)<Va?(u+l)/2:ef(x,m),T=t(S,A),N=T[0],k=T[1],E=N-r,C=k-i,P=_*E-y*C;(P*P/b>n||tf((y*E+_*C)/b-.5)>.3||o*h+a*d+f*p<Ql)&&(e(r,i,u,o,a,f,N,k,S,m/=M,x/=M,w,v,g),g.point(N,k),e(N,k,S,m,x,w,c,s,l,h,d,p,v,g))}}return function(n){var r,i,u,o,a,f,c,s,l,h,d,p,v={point:g,lineStart:y,lineEnd:b,polygonStart:function(){n.polygonStart(),v.lineStart=m},polygonEnd:function(){n.polygonEnd(),v.lineStart=y}};function g(e,r){e=t(e,r),n.point(e[0],e[1])}function y(){s=NaN,v.point=_,n.lineStart()}function _(r,i){var u=Uf([r,i]),o=t(r,i);e(s,l,c,h,d,p,s=o[0],l=o[1],c=r,h=u[0],d=u[1],p=u[2],Zl,n),n.point(s,l)}function b(){v.point=g,n.lineEnd()}function m(){y(),v.point=x,v.lineEnd=w}function x(t,n){_(r=t,n),i=s,u=l,o=h,a=d,f=p,v.point=_}function w(){e(s,l,c,h,d,p,i,u,r,o,a,f,Zl,n),v.lineEnd=b,b()}return v}}(t,n):function(t){return jl({point:function(n,e){n=t(n,e),this.stream.point(n[0],n[1])}})}(t)};var Kl=jl({point:function(t,n){this.stream.point(t*Ka,n*Ka)}});function th(t,n,e,r){var i=rf(r),u=cf(r),o=i*t,a=u*t,f=i/t,c=u/t,s=(u*e-i*n)/t,l=(u*n+i*e)/t;function h(t,r){return[o*t-a*r+n,e-a*t-o*r]}return h.invert=function(t,n){return[f*t-c*n+s,l-c*t-f*n]},h}function nh(t){return eh(function(){return t})()}function eh(t){var n,e,r,i,u,o,a,f,c,s,l=150,h=480,d=250,p=0,v=0,g=0,y=0,_=0,b=0,m=null,x=as,w=null,M=Hs,A=.5;function S(t){return f(t[0]*Ka,t[1]*Ka)}function T(t){return(t=f.invert(t[0],t[1]))&&[t[0]*Ja,t[1]*Ja]}function N(){var t=th(l,0,0,b).apply(null,n(p,v)),r=(b?th:function(t,n,e){function r(r,i){return[n+t*r,e-t*i]}return r.invert=function(r,i){return[(r-n)/t,(e-i)/t]},r})(l,h-t[0],d-t[1],b);return e=jc(g,y,_),a=Bc(n,r),f=Bc(e,a),o=Jl(a,A),k()}function k(){return c=s=null,S}return S.stream=function(t){return c&&s===t?c:c=Kl(function(t){return jl({point:function(n,e){var r=t(n,e);return this.stream.point(r[0],r[1])}})}(e)(x(o(M(s=t)))))},S.preclip=function(t){return arguments.length?(x=t,m=void 0,k()):x},S.postclip=function(t){return arguments.length?(M=t,w=r=i=u=null,k()):M},S.clipAngle=function(t){return arguments.length?(x=+t?fs(m=t*Ka):(m=null,as),k()):m*Ja},S.clipExtent=function(t){return arguments.length?(M=null==t?(w=r=i=u=null,Hs):hs(w=+t[0][0],r=+t[0][1],i=+t[1][0],u=+t[1][1]),k()):null==w?null:[[w,r],[i,u]]},S.scale=function(t){return arguments.length?(l=+t,N()):l},S.translate=function(t){return arguments.length?(h=+t[0],d=+t[1],N()):[h,d]},S.center=function(t){return arguments.length?(p=t[0]%360*Ka,v=t[1]%360*Ka,N()):[p*Ja,v*Ja]},S.rotate=function(t){return arguments.length?(g=t[0]%360*Ka,y=t[1]%360*Ka,_=t.length>2?t[2]%360*Ka:0,N()):[g*Ja,y*Ja,_*Ja]},S.angle=function(t){return arguments.length?(b=t%360*Ka,N()):b*Ja},S.precision=function(t){return arguments.length?(o=Jl(a,A=t*t),k()):lf(A)},S.fitExtent=function(t,n){return Gl(S,t,n)},S.fitSize=function(t,n){return Vl(S,t,n)},S.fitWidth=function(t,n){return $l(S,t,n)},S.fitHeight=function(t,n){return Wl(S,t,n)},function(){return n=t.apply(this,arguments),S.invert=n.invert&&T,N()}}function rh(t){var n=0,e=$a/3,r=eh(t),i=r(n,e);return i.parallels=function(t){return arguments.length?r(n=t[0]*Ka,e=t[1]*Ka):[n*Ja,e*Ja]},i}function ih(t,n){var e=cf(t),r=(e+cf(n))/2;if(tf(r)<Va)return function(t){var n=rf(t);function e(t,e){return[t*n,cf(e)/n]}return e.invert=function(t,e){return[t/n,pf(e*n)]},e}(t);var i=1+e*(2*r-e),u=lf(i)/r;function o(t,n){var e=lf(i-2*r*cf(n))/r;return[e*cf(t*=r),u-e*rf(t)]}return o.invert=function(t,n){var e=u-n;return[ef(t,tf(e))/r*sf(e),pf((i-(t*t+e*e)*r*r)/(2*r))]},o}var uh=function(){return rh(ih).scale(155.424).center([0,33.6442])},oh=function(){return uh().parallels([29.5,45.5]).scale(1070).translate([480,250]).rotate([96,0]).center([-.6,38.7])};var ah=function(){var t,n,e,r,i,u,o=oh(),a=uh().rotate([154,0]).center([-2,58.5]).parallels([55,65]),f=uh().rotate([157,0]).center([-3,19.9]).parallels([8,18]),c={point:function(t,n){u=[t,n]}};function s(t){var n=t[0],o=t[1];return u=null,e.point(n,o),u||(r.point(n,o),u)||(i.point(n,o),u)}function l(){return t=n=null,s}return s.invert=function(t){var n=o.scale(),e=o.translate(),r=(t[0]-e[0])/n,i=(t[1]-e[1])/n;return(i>=.12&&i<.234&&r>=-.425&&r<-.214?a:i>=.166&&i<.234&&r>=-.214&&r<-.115?f:o).invert(t)},s.stream=function(e){return t&&n===e?t:(r=[o.stream(n=e),a.stream(e),f.stream(e)],i=r.length,t={point:function(t,n){for(var e=-1;++e<i;)r[e].point(t,n)},sphere:function(){for(var t=-1;++t<i;)r[t].sphere()},lineStart:function(){for(var t=-1;++t<i;)r[t].lineStart()},lineEnd:function(){for(var t=-1;++t<i;)r[t].lineEnd()},polygonStart:function(){for(var t=-1;++t<i;)r[t].polygonStart()},polygonEnd:function(){for(var t=-1;++t<i;)r[t].polygonEnd()}});var r,i},s.precision=function(t){return arguments.length?(o.precision(t),a.precision(t),f.precision(t),l()):o.precision()},s.scale=function(t){return arguments.length?(o.scale(t),a.scale(.35*t),f.scale(t),s.translate(o.translate())):o.scale()},s.translate=function(t){if(!arguments.length)return o.translate();var n=o.scale(),u=+t[0],s=+t[1];return e=o.translate(t).clipExtent([[u-.455*n,s-.238*n],[u+.455*n,s+.238*n]]).stream(c),r=a.translate([u-.307*n,s+.201*n]).clipExtent([[u-.425*n+Va,s+.12*n+Va],[u-.214*n-Va,s+.234*n-Va]]).stream(c),i=f.translate([u-.205*n,s+.212*n]).clipExtent([[u-.214*n+Va,s+.166*n+Va],[u-.115*n-Va,s+.234*n-Va]]).stream(c),l()},s.fitExtent=function(t,n){return Gl(s,t,n)},s.fitSize=function(t,n){return Vl(s,t,n)},s.fitWidth=function(t,n){return $l(s,t,n)},s.fitHeight=function(t,n){return Wl(s,t,n)},s.scale(1070)};function fh(t){return function(n,e){var r=rf(n),i=rf(e),u=t(r*i);return[u*i*cf(n),u*cf(e)]}}function ch(t){return function(n,e){var r=lf(n*n+e*e),i=t(r),u=cf(i),o=rf(i);return[ef(n*u,r*o),pf(r&&e*u/r)]}}var sh=fh(function(t){return lf(2/(1+t))});sh.invert=ch(function(t){return 2*pf(t/2)});var lh=function(){return nh(sh).scale(124.75).clipAngle(179.999)},hh=fh(function(t){return(t=df(t))&&t/cf(t)});hh.invert=ch(function(t){return t});var dh=function(){return nh(hh).scale(79.4188).clipAngle(179.999)};function ph(t,n){return[t,af(hf((Wa+n)/2))]}ph.invert=function(t,n){return[t,2*nf(of(n))-Wa]};var vh=function(){return gh(ph).scale(961/Qa)};function gh(t){var n,e,r,i=nh(t),u=i.center,o=i.scale,a=i.translate,f=i.clipExtent,c=null;function s(){var u=$a*o(),a=i(Vc(i.rotate()).invert([0,0]));return f(null==c?[[a[0]-u,a[1]-u],[a[0]+u,a[1]+u]]:t===ph?[[Math.max(a[0]-u,c),n],[Math.min(a[0]+u,e),r]]:[[c,Math.max(a[1]-u,n)],[e,Math.min(a[1]+u,r)]])}return i.scale=function(t){return arguments.length?(o(t),s()):o()},i.translate=function(t){return arguments.length?(a(t),s()):a()},i.center=function(t){return arguments.length?(u(t),s()):u()},i.clipExtent=function(t){return arguments.length?(null==t?c=n=e=r=null:(c=+t[0][0],n=+t[0][1],e=+t[1][0],r=+t[1][1]),s()):null==c?null:[[c,n],[e,r]]},s()}function yh(t){return hf((Wa+t)/2)}function _h(t,n){var e=rf(t),r=t===n?cf(t):af(e/rf(n))/af(yh(n)/yh(t)),i=e*ff(yh(t),r)/r;if(!r)return ph;function u(t,n){i>0?n<-Wa+Va&&(n=-Wa+Va):n>Wa-Va&&(n=Wa-Va);var e=i/ff(yh(n),r);return[e*cf(r*t),i-e*rf(r*t)]}return u.invert=function(t,n){var e=i-n,u=sf(r)*lf(t*t+e*e);return[ef(t,tf(e))/r*sf(e),2*nf(ff(i/u,1/r))-Wa]},u}var bh=function(){return rh(_h).scale(109.5).parallels([30,30])};function mh(t,n){return[t,n]}mh.invert=mh;var xh=function(){return nh(mh).scale(152.63)};function wh(t,n){var e=rf(t),r=t===n?cf(t):(e-rf(n))/(n-t),i=e/r+t;if(tf(r)<Va)return mh;function u(t,n){var e=i-n,u=r*t;return[e*cf(u),i-e*rf(u)]}return u.invert=function(t,n){var e=i-n;return[ef(t,tf(e))/r*sf(e),i-sf(r)*lf(t*t+e*e)]},u}var Mh=function(){return rh(wh).scale(131.154).center([0,13.9389])};function Ah(t,n){var e=rf(n),r=rf(t)*e;return[e*cf(t)/r,cf(n)/r]}Ah.invert=ch(nf);var Sh=function(){return nh(Ah).scale(144.049).clipAngle(60)};function Th(t,n,e,r){return 1===t&&1===n&&0===e&&0===r?Hs:jl({point:function(i,u){this.stream.point(i*t+e,u*n+r)}})}var Nh=function(){var t,n,e,r,i,u,o=1,a=0,f=0,c=1,s=1,l=Hs,h=null,d=Hs;function p(){return r=i=null,u}return u={stream:function(t){return r&&i===t?r:r=l(d(i=t))},postclip:function(r){return arguments.length?(d=r,h=t=n=e=null,p()):d},clipExtent:function(r){return arguments.length?(d=null==r?(h=t=n=e=null,Hs):hs(h=+r[0][0],t=+r[0][1],n=+r[1][0],e=+r[1][1]),p()):null==h?null:[[h,t],[n,e]]},scale:function(t){return arguments.length?(l=Th((o=+t)*c,o*s,a,f),p()):o},translate:function(t){return arguments.length?(l=Th(o*c,o*s,a=+t[0],f=+t[1]),p()):[a,f]},reflectX:function(t){return arguments.length?(l=Th(o*(c=t?-1:1),o*s,a,f),p()):c<0},reflectY:function(t){return arguments.length?(l=Th(o*c,o*(s=t?-1:1),a,f),p()):s<0},fitExtent:function(t,n){return Gl(u,t,n)},fitSize:function(t,n){return Vl(u,t,n)},fitWidth:function(t,n){return $l(u,t,n)},fitHeight:function(t,n){return Wl(u,t,n)}}};function kh(t,n){var e=n*n,r=e*e;return[t*(.8707-.131979*e+r*(r*(.003971*e-.001529*r)-.013791)),n*(1.007226+e*(.015085+r*(.028874*e-.044475-.005916*r)))]}kh.invert=function(t,n){var e,r=n,i=25;do{var u=r*r,o=u*u;r-=e=(r*(1.007226+u*(.015085+o*(.028874*u-.044475-.005916*o)))-n)/(1.007226+u*(.045255+o*(.259866*u-.311325-.005916*11*o)))}while(tf(e)>Va&&--i>0);return[t/(.8707+(u=r*r)*(u*(u*u*u*(.003971-.001529*u)-.013791)-.131979)),r]};var Eh=function(){return nh(kh).scale(175.295)};function Ch(t,n){return[rf(n)*cf(t),cf(n)]}Ch.invert=ch(pf);var Ph=function(){return nh(Ch).scale(249.5).clipAngle(90+Va)};function zh(t,n){var e=rf(n),r=1+rf(t)*e;return[e*cf(t)/r,cf(n)/r]}zh.invert=ch(function(t){return 2*nf(t)});var Rh=function(){return nh(zh).scale(250).clipAngle(142)};function Dh(t,n){return[af(hf((Wa+n)/2)),-t]}Dh.invert=function(t,n){return[-n,2*nf(of(t))-Wa]};var Lh=function(){var t=gh(Dh),n=t.center,e=t.rotate;return t.center=function(t){return arguments.length?n([-t[1],t[0]]):[(t=n())[1],-t[0]]},t.rotate=function(t){return arguments.length?e([t[0],t[1],t.length>2?t[2]+90:90]):[(t=e())[0],t[1],t[2]-90]},e([0,0,90]).scale(159.155)};function qh(t,n){return t.parent===n.parent?1:2}function Uh(t,n){return t+n.x}function Oh(t,n){return Math.max(t,n.y)}var Ih=function(){var t=qh,n=1,e=1,r=!1;function i(i){var u,o=0;i.eachAfter(function(n){var e=n.children;e?(n.x=function(t){return t.reduce(Uh,0)/t.length}(e),n.y=function(t){return 1+t.reduce(Oh,0)}(e)):(n.x=u?o+=t(n,u):0,n.y=0,u=n)});var a=function(t){for(var n;n=t.children;)t=n[0];return t}(i),f=function(t){for(var n;n=t.children;)t=n[n.length-1];return t}(i),c=a.x-t(a,f)/2,s=f.x+t(f,a)/2;return i.eachAfter(r?function(t){t.x=(t.x-i.x)*n,t.y=(i.y-t.y)*e}:function(t){t.x=(t.x-c)/(s-c)*n,t.y=(1-(i.y?t.y/i.y:1))*e})}return i.separation=function(n){return arguments.length?(t=n,i):t},i.size=function(t){return arguments.length?(r=!1,n=+t[0],e=+t[1],i):r?null:[n,e]},i.nodeSize=function(t){return arguments.length?(r=!0,n=+t[0],e=+t[1],i):r?[n,e]:null},i};function Yh(t){var n=0,e=t.children,r=e&&e.length;if(r)for(;--r>=0;)n+=e[r].value;else n=1;t.value=n}function Bh(t,n){var e,r,i,u,o,a=new Xh(t),f=+t.value&&(a.value=t.value),c=[a];for(null==n&&(n=Fh);e=c.pop();)if(f&&(e.value=+e.data.value),(i=n(e.data))&&(o=i.length))for(e.children=new Array(o),u=o-1;u>=0;--u)c.push(r=e.children[u]=new Xh(i[u])),r.parent=e,r.depth=e.depth+1;return a.eachBefore(Hh)}function Fh(t){return t.children}function jh(t){t.data=t.data.data}function Hh(t){var n=0;do{t.height=n}while((t=t.parent)&&t.height<++n)}function Xh(t){this.data=t,this.depth=this.height=0,this.parent=null}Xh.prototype=Bh.prototype={constructor:Xh,count:function(){return this.eachAfter(Yh)},each:function(t){var n,e,r,i,u=this,o=[u];do{for(n=o.reverse(),o=[];u=n.pop();)if(t(u),e=u.children)for(r=0,i=e.length;r<i;++r)o.push(e[r])}while(o.length);return this},eachAfter:function(t){for(var n,e,r,i=this,u=[i],o=[];i=u.pop();)if(o.push(i),n=i.children)for(e=0,r=n.length;e<r;++e)u.push(n[e]);for(;i=o.pop();)t(i);return this},eachBefore:function(t){for(var n,e,r=this,i=[r];r=i.pop();)if(t(r),n=r.children)for(e=n.length-1;e>=0;--e)i.push(n[e]);return this},sum:function(t){return this.eachAfter(function(n){for(var e=+t(n.data)||0,r=n.children,i=r&&r.length;--i>=0;)e+=r[i].value;n.value=e})},sort:function(t){return this.eachBefore(function(n){n.children&&n.children.sort(t)})},path:function(t){for(var n=this,e=function(t,n){if(t===n)return t;var e=t.ancestors(),r=n.ancestors(),i=null;for(t=e.pop(),n=r.pop();t===n;)i=t,t=e.pop(),n=r.pop();return i}(n,t),r=[n];n!==e;)n=n.parent,r.push(n);for(var i=r.length;t!==e;)r.splice(i,0,t),t=t.parent;return r},ancestors:function(){for(var t=this,n=[t];t=t.parent;)n.push(t);return n},descendants:function(){var t=[];return this.each(function(n){t.push(n)}),t},leaves:function(){var t=[];return this.eachBefore(function(n){n.children||t.push(n)}),t},links:function(){var t=this,n=[];return t.each(function(e){e!==t&&n.push({source:e.parent,target:e})}),n},copy:function(){return Bh(this).eachBefore(jh)}};var Gh=Array.prototype.slice;var Vh=function(t){for(var n,e,r=0,i=(t=function(t){for(var n,e,r=t.length;r;)e=Math.random()*r--|0,n=t[r],t[r]=t[e],t[e]=n;return t}(Gh.call(t))).length,u=[];r<i;)n=t[r],e&&Zh(e,n)?++r:(e=Jh(u=$h(u,n)),r=0);return e};function $h(t,n){var e,r;if(Qh(n,t))return[n];for(e=0;e<t.length;++e)if(Wh(n,t[e])&&Qh(Kh(t[e],n),t))return[t[e],n];for(e=0;e<t.length-1;++e)for(r=e+1;r<t.length;++r)if(Wh(Kh(t[e],t[r]),n)&&Wh(Kh(t[e],n),t[r])&&Wh(Kh(t[r],n),t[e])&&Qh(td(t[e],t[r],n),t))return[t[e],t[r],n];throw new Error}function Wh(t,n){var e=t.r-n.r,r=n.x-t.x,i=n.y-t.y;return e<0||e*e<r*r+i*i}function Zh(t,n){var e=t.r-n.r+1e-6,r=n.x-t.x,i=n.y-t.y;return e>0&&e*e>r*r+i*i}function Qh(t,n){for(var e=0;e<n.length;++e)if(!Zh(t,n[e]))return!1;return!0}function Jh(t){switch(t.length){case 1:return{x:(n=t[0]).x,y:n.y,r:n.r};case 2:return Kh(t[0],t[1]);case 3:return td(t[0],t[1],t[2])}var n}function Kh(t,n){var e=t.x,r=t.y,i=t.r,u=n.x,o=n.y,a=n.r,f=u-e,c=o-r,s=a-i,l=Math.sqrt(f*f+c*c);return{x:(e+u+f/l*s)/2,y:(r+o+c/l*s)/2,r:(l+i+a)/2}}function td(t,n,e){var r=t.x,i=t.y,u=t.r,o=n.x,a=n.y,f=n.r,c=e.x,s=e.y,l=e.r,h=r-o,d=r-c,p=i-a,v=i-s,g=f-u,y=l-u,_=r*r+i*i-u*u,b=_-o*o-a*a+f*f,m=_-c*c-s*s+l*l,x=d*p-h*v,w=(p*m-v*b)/(2*x)-r,M=(v*g-p*y)/x,A=(d*b-h*m)/(2*x)-i,S=(h*y-d*g)/x,T=M*M+S*S-1,N=2*(u+w*M+A*S),k=w*w+A*A-u*u,E=-(T?(N+Math.sqrt(N*N-4*T*k))/(2*T):k/N);return{x:r+w+M*E,y:i+A+S*E,r:E}}function nd(t,n,e){var r=t.x,i=t.y,u=n.r+e.r,o=t.r+e.r,a=n.x-r,f=n.y-i,c=a*a+f*f;if(c){var s=.5+((o*=o)-(u*=u))/(2*c),l=Math.sqrt(Math.max(0,2*u*(o+c)-(o-=c)*o-u*u))/(2*c);e.x=r+s*a+l*f,e.y=i+s*f-l*a}else e.x=r+o,e.y=i}function ed(t,n){var e=n.x-t.x,r=n.y-t.y,i=t.r+n.r;return i*i-1e-6>e*e+r*r}function rd(t){var n=t._,e=t.next._,r=n.r+e.r,i=(n.x*e.r+e.x*n.r)/r,u=(n.y*e.r+e.y*n.r)/r;return i*i+u*u}function id(t){this._=t,this.next=null,this.previous=null}function ud(t){if(!(i=t.length))return 0;var n,e,r,i,u,o,a,f,c,s,l;if((n=t[0]).x=0,n.y=0,!(i>1))return n.r;if(e=t[1],n.x=-e.r,e.x=n.r,e.y=0,!(i>2))return n.r+e.r;nd(e,n,r=t[2]),n=new id(n),e=new id(e),r=new id(r),n.next=r.previous=e,e.next=n.previous=r,r.next=e.previous=n;t:for(a=3;a<i;++a){nd(n._,e._,r=t[a]),r=new id(r),f=e.next,c=n.previous,s=e._.r,l=n._.r;do{if(s<=l){if(ed(f._,r._)){e=f,n.next=e,e.previous=n,--a;continue t}s+=f._.r,f=f.next}else{if(ed(c._,r._)){(n=c).next=e,e.previous=n,--a;continue t}l+=c._.r,c=c.previous}}while(f!==c.next);for(r.previous=n,r.next=e,n.next=e.previous=e=r,u=rd(n);(r=r.next)!==e;)(o=rd(r))<u&&(n=r,u=o);e=n.next}for(n=[e._],r=e;(r=r.next)!==e;)n.push(r._);for(r=Vh(n),a=0;a<i;++a)(n=t[a]).x-=r.x,n.y-=r.y;return r.r}var od=function(t){return ud(t),t};function ad(t){if(\"function\"!=typeof t)throw new Error;return t}function fd(){return 0}var cd=function(t){return function(){return t}};function sd(t){return Math.sqrt(t.value)}var ld=function(){var t=null,n=1,e=1,r=fd;function i(i){return i.x=n/2,i.y=e/2,t?i.eachBefore(hd(t)).eachAfter(dd(r,.5)).eachBefore(pd(1)):i.eachBefore(hd(sd)).eachAfter(dd(fd,1)).eachAfter(dd(r,i.r/Math.min(n,e))).eachBefore(pd(Math.min(n,e)/(2*i.r))),i}return i.radius=function(n){return arguments.length?(t=null==(e=n)?null:ad(e),i):t;var e},i.size=function(t){return arguments.length?(n=+t[0],e=+t[1],i):[n,e]},i.padding=function(t){return arguments.length?(r=\"function\"==typeof t?t:cd(+t),i):r},i};function hd(t){return function(n){n.children||(n.r=Math.max(0,+t(n)||0))}}function dd(t,n){return function(e){if(r=e.children){var r,i,u,o=r.length,a=t(e)*n||0;if(a)for(i=0;i<o;++i)r[i].r+=a;if(u=ud(r),a)for(i=0;i<o;++i)r[i].r-=a;e.r=u+a}}}function pd(t){return function(n){var e=n.parent;n.r*=t,e&&(n.x=e.x+t*n.x,n.y=e.y+t*n.y)}}var vd=function(t){t.x0=Math.round(t.x0),t.y0=Math.round(t.y0),t.x1=Math.round(t.x1),t.y1=Math.round(t.y1)},gd=function(t,n,e,r,i){for(var u,o=t.children,a=-1,f=o.length,c=t.value&&(r-n)/t.value;++a<f;)(u=o[a]).y0=e,u.y1=i,u.x0=n,u.x1=n+=u.value*c},yd=function(){var t=1,n=1,e=0,r=!1;function i(i){var u=i.height+1;return i.x0=i.y0=e,i.x1=t,i.y1=n/u,i.eachBefore(function(t,n){return function(r){r.children&&gd(r,r.x0,t*(r.depth+1)/n,r.x1,t*(r.depth+2)/n);var i=r.x0,u=r.y0,o=r.x1-e,a=r.y1-e;o<i&&(i=o=(i+o)/2),a<u&&(u=a=(u+a)/2),r.x0=i,r.y0=u,r.x1=o,r.y1=a}}(n,u)),r&&i.eachBefore(vd),i}return i.round=function(t){return arguments.length?(r=!!t,i):r},i.size=function(e){return arguments.length?(t=+e[0],n=+e[1],i):[t,n]},i.padding=function(t){return arguments.length?(e=+t,i):e},i},_d=\"$\",bd={depth:-1},md={};function xd(t){return t.id}function wd(t){return t.parentId}var Md=function(){var t=xd,n=wd;function e(e){var r,i,u,o,a,f,c,s=e.length,l=new Array(s),h={};for(i=0;i<s;++i)r=e[i],a=l[i]=new Xh(r),null!=(f=t(r,i,e))&&(f+=\"\")&&(h[c=_d+(a.id=f)]=c in h?md:a);for(i=0;i<s;++i)if(a=l[i],null!=(f=n(e[i],i,e))&&(f+=\"\")){if(!(o=h[_d+f]))throw new Error(\"missing: \"+f);if(o===md)throw new Error(\"ambiguous: \"+f);o.children?o.children.push(a):o.children=[a],a.parent=o}else{if(u)throw new Error(\"multiple roots\");u=a}if(!u)throw new Error(\"no root\");if(u.parent=bd,u.eachBefore(function(t){t.depth=t.parent.depth+1,--s}).eachBefore(Hh),u.parent=null,s>0)throw new Error(\"cycle\");return u}return e.id=function(n){return arguments.length?(t=ad(n),e):t},e.parentId=function(t){return arguments.length?(n=ad(t),e):n},e};function Ad(t,n){return t.parent===n.parent?1:2}function Sd(t){var n=t.children;return n?n[0]:t.t}function Td(t){var n=t.children;return n?n[n.length-1]:t.t}function Nd(t,n,e){var r=e/(n.i-t.i);n.c-=r,n.s+=e,t.c+=r,n.z+=e,n.m+=e}function kd(t,n,e){return t.a.parent===n.parent?t.a:e}function Ed(t,n){this._=t,this.parent=null,this.children=null,this.A=null,this.a=this,this.z=0,this.m=0,this.c=0,this.s=0,this.t=null,this.i=n}Ed.prototype=Object.create(Xh.prototype);var Cd=function(){var t=Ad,n=1,e=1,r=null;function i(i){var f=function(t){for(var n,e,r,i,u,o=new Ed(t,0),a=[o];n=a.pop();)if(r=n._.children)for(n.children=new Array(u=r.length),i=u-1;i>=0;--i)a.push(e=n.children[i]=new Ed(r[i],i)),e.parent=n;return(o.parent=new Ed(null,0)).children=[o],o}(i);if(f.eachAfter(u),f.parent.m=-f.z,f.eachBefore(o),r)i.eachBefore(a);else{var c=i,s=i,l=i;i.eachBefore(function(t){t.x<c.x&&(c=t),t.x>s.x&&(s=t),t.depth>l.depth&&(l=t)});var h=c===s?1:t(c,s)/2,d=h-c.x,p=n/(s.x+h+d),v=e/(l.depth||1);i.eachBefore(function(t){t.x=(t.x+d)*p,t.y=t.depth*v})}return i}function u(n){var e=n.children,r=n.parent.children,i=n.i?r[n.i-1]:null;if(e){!function(t){for(var n,e=0,r=0,i=t.children,u=i.length;--u>=0;)(n=i[u]).z+=e,n.m+=e,e+=n.s+(r+=n.c)}(n);var u=(e[0].z+e[e.length-1].z)/2;i?(n.z=i.z+t(n._,i._),n.m=n.z-u):n.z=u}else i&&(n.z=i.z+t(n._,i._));n.parent.A=function(n,e,r){if(e){for(var i,u=n,o=n,a=e,f=u.parent.children[0],c=u.m,s=o.m,l=a.m,h=f.m;a=Td(a),u=Sd(u),a&&u;)f=Sd(f),(o=Td(o)).a=n,(i=a.z+l-u.z-c+t(a._,u._))>0&&(Nd(kd(a,n,r),n,i),c+=i,s+=i),l+=a.m,c+=u.m,h+=f.m,s+=o.m;a&&!Td(o)&&(o.t=a,o.m+=l-s),u&&!Sd(f)&&(f.t=u,f.m+=c-h,r=n)}return r}(n,i,n.parent.A||r[0])}function o(t){t._.x=t.z+t.parent.m,t.m+=t.parent.m}function a(t){t.x*=n,t.y=t.depth*e}return i.separation=function(n){return arguments.length?(t=n,i):t},i.size=function(t){return arguments.length?(r=!1,n=+t[0],e=+t[1],i):r?null:[n,e]},i.nodeSize=function(t){return arguments.length?(r=!0,n=+t[0],e=+t[1],i):r?[n,e]:null},i},Pd=function(t,n,e,r,i){for(var u,o=t.children,a=-1,f=o.length,c=t.value&&(i-e)/t.value;++a<f;)(u=o[a]).x0=n,u.x1=r,u.y0=e,u.y1=e+=u.value*c},zd=(1+Math.sqrt(5))/2;function Rd(t,n,e,r,i,u){for(var o,a,f,c,s,l,h,d,p,v,g,y=[],_=n.children,b=0,m=0,x=_.length,w=n.value;b<x;){f=i-e,c=u-r;do{s=_[m++].value}while(!s&&m<x);for(l=h=s,g=s*s*(v=Math.max(c/f,f/c)/(w*t)),p=Math.max(h/g,g/l);m<x;++m){if(s+=a=_[m].value,a<l&&(l=a),a>h&&(h=a),g=s*s*v,(d=Math.max(h/g,g/l))>p){s-=a;break}p=d}y.push(o={value:s,dice:f<c,children:_.slice(b,m)}),o.dice?gd(o,e,r,i,w?r+=c*s/w:u):Pd(o,e,r,w?e+=f*s/w:i,u),w-=s,b=m}return y}var Dd=function t(n){function e(t,e,r,i,u){Rd(n,t,e,r,i,u)}return e.ratio=function(n){return t((n=+n)>1?n:1)},e}(zd),Ld=function(){var t=Dd,n=!1,e=1,r=1,i=[0],u=fd,o=fd,a=fd,f=fd,c=fd;function s(t){return t.x0=t.y0=0,t.x1=e,t.y1=r,t.eachBefore(l),i=[0],n&&t.eachBefore(vd),t}function l(n){var e=i[n.depth],r=n.x0+e,s=n.y0+e,l=n.x1-e,h=n.y1-e;l<r&&(r=l=(r+l)/2),h<s&&(s=h=(s+h)/2),n.x0=r,n.y0=s,n.x1=l,n.y1=h,n.children&&(e=i[n.depth+1]=u(n)/2,r+=c(n)-e,s+=o(n)-e,l-=a(n)-e,h-=f(n)-e,l<r&&(r=l=(r+l)/2),h<s&&(s=h=(s+h)/2),t(n,r,s,l,h))}return s.round=function(t){return arguments.length?(n=!!t,s):n},s.size=function(t){return arguments.length?(e=+t[0],r=+t[1],s):[e,r]},s.tile=function(n){return arguments.length?(t=ad(n),s):t},s.padding=function(t){return arguments.length?s.paddingInner(t).paddingOuter(t):s.paddingInner()},s.paddingInner=function(t){return arguments.length?(u=\"function\"==typeof t?t:cd(+t),s):u},s.paddingOuter=function(t){return arguments.length?s.paddingTop(t).paddingRight(t).paddingBottom(t).paddingLeft(t):s.paddingTop()},s.paddingTop=function(t){return arguments.length?(o=\"function\"==typeof t?t:cd(+t),s):o},s.paddingRight=function(t){return arguments.length?(a=\"function\"==typeof t?t:cd(+t),s):a},s.paddingBottom=function(t){return arguments.length?(f=\"function\"==typeof t?t:cd(+t),s):f},s.paddingLeft=function(t){return arguments.length?(c=\"function\"==typeof t?t:cd(+t),s):c},s},qd=function(t,n,e,r,i){var u,o,a=t.children,f=a.length,c=new Array(f+1);for(c[0]=o=u=0;u<f;++u)c[u+1]=o+=a[u].value;!function t(n,e,r,i,u,o,f){if(n>=e-1){var s=a[n];return s.x0=i,s.y0=u,s.x1=o,void(s.y1=f)}var l=c[n],h=r/2+l,d=n+1,p=e-1;for(;d<p;){var v=d+p>>>1;c[v]<h?d=v+1:p=v}h-c[d-1]<c[d]-h&&n+1<d&&--d;var g=c[d]-l,y=r-g;if(o-i>f-u){var _=(i*y+o*g)/r;t(n,d,g,i,u,_,f),t(d,e,y,_,u,o,f)}else{var b=(u*y+f*g)/r;t(n,d,g,i,u,o,b),t(d,e,y,i,b,o,f)}}(0,f,t.value,n,e,r,i)},Ud=function(t,n,e,r,i){(1&t.depth?Pd:gd)(t,n,e,r,i)},Od=function t(n){function e(t,e,r,i,u){if((o=t._squarify)&&o.ratio===n)for(var o,a,f,c,s,l=-1,h=o.length,d=t.value;++l<h;){for(f=(a=o[l]).children,c=a.value=0,s=f.length;c<s;++c)a.value+=f[c].value;a.dice?gd(a,e,r,i,r+=(u-r)*a.value/d):Pd(a,e,r,e+=(i-e)*a.value/d,u),d-=a.value}else t._squarify=o=Rd(n,t,e,r,i,u),o.ratio=n}return e.ratio=function(n){return t((n=+n)>1?n:1)},e}(zd),Id=function(t){for(var n,e=-1,r=t.length,i=t[r-1],u=0;++e<r;)n=i,i=t[e],u+=n[1]*i[0]-n[0]*i[1];return u/2},Yd=function(t){for(var n,e,r=-1,i=t.length,u=0,o=0,a=t[i-1],f=0;++r<i;)n=a,a=t[r],f+=e=n[0]*a[1]-a[0]*n[1],u+=(n[0]+a[0])*e,o+=(n[1]+a[1])*e;return[u/(f*=3),o/f]},Bd=function(t,n,e){return(n[0]-t[0])*(e[1]-t[1])-(n[1]-t[1])*(e[0]-t[0])};function Fd(t,n){return t[0]-n[0]||t[1]-n[1]}function jd(t){for(var n=t.length,e=[0,1],r=2,i=2;i<n;++i){for(;r>1&&Bd(t[e[r-2]],t[e[r-1]],t[i])<=0;)--r;e[r++]=i}return e.slice(0,r)}var Hd=function(t){if((e=t.length)<3)return null;var n,e,r=new Array(e),i=new Array(e);for(n=0;n<e;++n)r[n]=[+t[n][0],+t[n][1],n];for(r.sort(Fd),n=0;n<e;++n)i[n]=[r[n][0],-r[n][1]];var u=jd(r),o=jd(i),a=o[0]===u[0],f=o[o.length-1]===u[u.length-1],c=[];for(n=u.length-1;n>=0;--n)c.push(t[r[u[n]][2]]);for(n=+a;n<o.length-f;++n)c.push(t[r[o[n]][2]]);return c},Xd=function(t,n){for(var e,r,i=t.length,u=t[i-1],o=n[0],a=n[1],f=u[0],c=u[1],s=!1,l=0;l<i;++l)e=(u=t[l])[0],(r=u[1])>a!=c>a&&o<(f-e)*(a-r)/(c-r)+e&&(s=!s),f=e,c=r;return s},Gd=function(t){for(var n,e,r=-1,i=t.length,u=t[i-1],o=u[0],a=u[1],f=0;++r<i;)n=o,e=a,n-=o=(u=t[r])[0],e-=a=u[1],f+=Math.sqrt(n*n+e*e);return f},Vd=function(){return Math.random()},$d=function t(n){function e(t,e){return t=null==t?0:+t,e=null==e?1:+e,1===arguments.length?(e=t,t=0):e-=t,function(){return n()*e+t}}return e.source=t,e}(Vd),Wd=function t(n){function e(t,e){var r,i;return t=null==t?0:+t,e=null==e?1:+e,function(){var u;if(null!=r)u=r,r=null;else do{r=2*n()-1,u=2*n()-1,i=r*r+u*u}while(!i||i>1);return t+e*u*Math.sqrt(-2*Math.log(i)/i)}}return e.source=t,e}(Vd),Zd=function t(n){function e(){var t=Wd.source(n).apply(this,arguments);return function(){return Math.exp(t())}}return e.source=t,e}(Vd),Qd=function t(n){function e(t){return function(){for(var e=0,r=0;r<t;++r)e+=n();return e}}return e.source=t,e}(Vd),Jd=function t(n){function e(t){var e=Qd.source(n)(t);return function(){return e()/t}}return e.source=t,e}(Vd),Kd=function t(n){function e(t){return function(){return-Math.log(1-n())/t}}return e.source=t,e}(Vd),tp=Array.prototype,np=tp.map,ep=tp.slice,rp={name:\"implicit\"};function ip(t){var n=Hu(),e=[],r=rp;function i(i){var u=i+\"\",o=n.get(u);if(!o){if(r!==rp)return r;n.set(u,o=e.push(i))}return t[(o-1)%t.length]}return t=null==t?[]:ep.call(t),i.domain=function(t){if(!arguments.length)return e.slice();e=[],n=Hu();for(var r,u,o=-1,a=t.length;++o<a;)n.has(u=(r=t[o])+\"\")||n.set(u,e.push(r));return i},i.range=function(n){return arguments.length?(t=ep.call(n),i):t.slice()},i.unknown=function(t){return arguments.length?(r=t,i):r},i.copy=function(){return ip().domain(e).range(t).unknown(r)},i}function up(){var t,n,e=ip().unknown(void 0),r=e.domain,i=e.range,u=[0,1],o=!1,a=0,f=0,c=.5;function s(){var e=r().length,s=u[1]<u[0],l=u[s-0],h=u[1-s];t=(h-l)/Math.max(1,e-a+2*f),o&&(t=Math.floor(t)),l+=(h-l-t*(e-a))*c,n=t*(1-a),o&&(l=Math.round(l),n=Math.round(n));var d=w(e).map(function(n){return l+t*n});return i(s?d.reverse():d)}return delete e.unknown,e.domain=function(t){return arguments.length?(r(t),s()):r()},e.range=function(t){return arguments.length?(u=[+t[0],+t[1]],s()):u.slice()},e.rangeRound=function(t){return u=[+t[0],+t[1]],o=!0,s()},e.bandwidth=function(){return n},e.step=function(){return t},e.round=function(t){return arguments.length?(o=!!t,s()):o},e.padding=function(t){return arguments.length?(a=f=Math.max(0,Math.min(1,t)),s()):a},e.paddingInner=function(t){return arguments.length?(a=Math.max(0,Math.min(1,t)),s()):a},e.paddingOuter=function(t){return arguments.length?(f=Math.max(0,Math.min(1,t)),s()):f},e.align=function(t){return arguments.length?(c=Math.max(0,Math.min(1,t)),s()):c},e.copy=function(){return up().domain(r()).range(u).round(o).paddingInner(a).paddingOuter(f).align(c)},s()}function op(){return function t(n){var e=n.copy;return n.padding=n.paddingOuter,delete n.paddingInner,delete n.paddingOuter,n.copy=function(){return t(e())},n}(up().paddingInner(1))}var ap=function(t){return function(){return t}},fp=function(t){return+t},cp=[0,1];function sp(t,n){return(n-=t=+t)?function(e){return(e-t)/n}:ap(n)}function lp(t,n,e,r){var i=t[0],u=t[1],o=n[0],a=n[1];return u<i?(i=e(u,i),o=r(a,o)):(i=e(i,u),o=r(o,a)),function(t){return o(i(t))}}function hp(t,n,e,r){var i=Math.min(t.length,n.length)-1,u=new Array(i),o=new Array(i),a=-1;for(t[i]<t[0]&&(t=t.slice().reverse(),n=n.slice().reverse());++a<i;)u[a]=e(t[a],t[a+1]),o[a]=r(n[a],n[a+1]);return function(n){var e=f(t,n,1,i)-1;return o[e](u[e](n))}}function dp(t,n){return n.domain(t.domain()).range(t.range()).interpolate(t.interpolate()).clamp(t.clamp())}function pp(t,n){var e,r,i,u=cp,o=cp,a=Ve,f=!1;function c(){return e=Math.min(u.length,o.length)>2?hp:lp,r=i=null,s}function s(n){return(r||(r=e(u,o,f?function(t){return function(n,e){var r=t(n=+n,e=+e);return function(t){return t<=n?0:t>=e?1:r(t)}}}(t):t,a)))(+n)}return s.invert=function(t){return(i||(i=e(o,u,sp,f?function(t){return function(n,e){var r=t(n=+n,e=+e);return function(t){return t<=0?n:t>=1?e:r(t)}}}(n):n)))(+t)},s.domain=function(t){return arguments.length?(u=np.call(t,fp),c()):u.slice()},s.range=function(t){return arguments.length?(o=ep.call(t),c()):o.slice()},s.rangeRound=function(t){return o=ep.call(t),a=$e,c()},s.clamp=function(t){return arguments.length?(f=!!t,c()):f},s.interpolate=function(t){return arguments.length?(a=t,c()):a},c()}var vp=function(t,n,e){var r,i=t[0],u=t[t.length-1],o=k(i,u,null==n?10:n);switch((e=Pa(null==e?\",f\":e)).type){case\"s\":var a=Math.max(Math.abs(i),Math.abs(u));return null!=e.precision||isNaN(r=Ba(o,a))||(e.precision=r),La(e,a);case\"\":case\"e\":case\"g\":case\"p\":case\"r\":null!=e.precision||isNaN(r=Fa(o,Math.max(Math.abs(i),Math.abs(u))))||(e.precision=r-(\"e\"===e.type));break;case\"f\":case\"%\":null!=e.precision||isNaN(r=Ya(o))||(e.precision=r-2*(\"%\"===e.type))}return Da(e)};function gp(t){var n=t.domain;return t.ticks=function(t){var e=n();return T(e[0],e[e.length-1],null==t?10:t)},t.tickFormat=function(t,e){return vp(n(),t,e)},t.nice=function(e){null==e&&(e=10);var r,i=n(),u=0,o=i.length-1,a=i[u],f=i[o];return f<a&&(r=a,a=f,f=r,r=u,u=o,o=r),(r=N(a,f,e))>0?r=N(a=Math.floor(a/r)*r,f=Math.ceil(f/r)*r,e):r<0&&(r=N(a=Math.ceil(a*r)/r,f=Math.floor(f*r)/r,e)),r>0?(i[u]=Math.floor(a/r)*r,i[o]=Math.ceil(f/r)*r,n(i)):r<0&&(i[u]=Math.ceil(a*r)/r,i[o]=Math.floor(f*r)/r,n(i)),t},t}function yp(){var t=pp(sp,Oe);return t.copy=function(){return dp(t,yp())},gp(t)}function _p(){var t=[0,1];function n(t){return+t}return n.invert=n,n.domain=n.range=function(e){return arguments.length?(t=np.call(e,fp),n):t.slice()},n.copy=function(){return _p().domain(t)},gp(n)}var bp=function(t,n){var e,r=0,i=(t=t.slice()).length-1,u=t[r],o=t[i];return o<u&&(e=r,r=i,i=e,e=u,u=o,o=e),t[r]=n.floor(u),t[i]=n.ceil(o),t};function mp(t,n){return(n=Math.log(n/t))?function(e){return Math.log(e/t)/n}:ap(n)}function xp(t,n){return t<0?function(e){return-Math.pow(-n,e)*Math.pow(-t,1-e)}:function(e){return Math.pow(n,e)*Math.pow(t,1-e)}}function wp(t){return isFinite(t)?+(\"1e\"+t):t<0?0:t}function Mp(t){return 10===t?wp:t===Math.E?Math.exp:function(n){return Math.pow(t,n)}}function Ap(t){return t===Math.E?Math.log:10===t&&Math.log10||2===t&&Math.log2||(t=Math.log(t),function(n){return Math.log(n)/t})}function Sp(t){return function(n){return-t(-n)}}function Tp(){var t=pp(mp,xp).domain([1,10]),n=t.domain,e=10,r=Ap(10),i=Mp(10);function u(){return r=Ap(e),i=Mp(e),n()[0]<0&&(r=Sp(r),i=Sp(i)),t}return t.base=function(t){return arguments.length?(e=+t,u()):e},t.domain=function(t){return arguments.length?(n(t),u()):n()},t.ticks=function(t){var u,o=n(),a=o[0],f=o[o.length-1];(u=f<a)&&(h=a,a=f,f=h);var c,s,l,h=r(a),d=r(f),p=null==t?10:+t,v=[];if(!(e%1)&&d-h<p){if(h=Math.round(h)-1,d=Math.round(d)+1,a>0){for(;h<d;++h)for(s=1,c=i(h);s<e;++s)if(!((l=c*s)<a)){if(l>f)break;v.push(l)}}else for(;h<d;++h)for(s=e-1,c=i(h);s>=1;--s)if(!((l=c*s)<a)){if(l>f)break;v.push(l)}}else v=T(h,d,Math.min(d-h,p)).map(i);return u?v.reverse():v},t.tickFormat=function(n,u){if(null==u&&(u=10===e?\".0e\":\",\"),\"function\"!=typeof u&&(u=Da(u)),n===1/0)return u;null==n&&(n=10);var o=Math.max(1,e*n/t.ticks().length);return function(t){var n=t/i(Math.round(r(t)));return n*e<e-.5&&(n*=e),n<=o?u(t):\"\"}},t.nice=function(){return n(bp(n(),{floor:function(t){return i(Math.floor(r(t)))},ceil:function(t){return i(Math.ceil(r(t)))}}))},t.copy=function(){return dp(t,Tp().base(e))},t}function Np(t,n){return t<0?-Math.pow(-t,n):Math.pow(t,n)}function kp(){var t=1,n=pp(function(n,e){return(e=Np(e,t)-(n=Np(n,t)))?function(r){return(Np(r,t)-n)/e}:ap(e)},function(n,e){return e=Np(e,t)-(n=Np(n,t)),function(r){return Np(n+e*r,1/t)}}),e=n.domain;return n.exponent=function(n){return arguments.length?(t=+n,e(e())):t},n.copy=function(){return dp(n,kp().exponent(t))},gp(n)}function Ep(){return kp().exponent(.5)}function Cp(){var t=[],n=[],e=[];function i(){var r=0,i=Math.max(1,n.length);for(e=new Array(i-1);++r<i;)e[r-1]=P(t,r/i);return u}function u(t){if(!isNaN(t=+t))return n[f(e,t)]}return u.invertExtent=function(r){var i=n.indexOf(r);return i<0?[NaN,NaN]:[i>0?e[i-1]:t[0],i<e.length?e[i]:t[t.length-1]]},u.domain=function(n){if(!arguments.length)return t.slice();t=[];for(var e,u=0,o=n.length;u<o;++u)null==(e=n[u])||isNaN(e=+e)||t.push(e);return t.sort(r),i()},u.range=function(t){return arguments.length?(n=ep.call(t),i()):n.slice()},u.quantiles=function(){return e.slice()},u.copy=function(){return Cp().domain(t).range(n)},u}function Pp(){var t=0,n=1,e=1,r=[.5],i=[0,1];function u(t){if(t<=t)return i[f(r,t,0,e)]}function o(){var i=-1;for(r=new Array(e);++i<e;)r[i]=((i+1)*n-(i-e)*t)/(e+1);return u}return u.domain=function(e){return arguments.length?(t=+e[0],n=+e[1],o()):[t,n]},u.range=function(t){return arguments.length?(e=(i=ep.call(t)).length-1,o()):i.slice()},u.invertExtent=function(u){var o=i.indexOf(u);return o<0?[NaN,NaN]:o<1?[t,r[0]]:o>=e?[r[e-1],n]:[r[o-1],r[o]]},u.copy=function(){return Pp().domain([t,n]).range(i)},gp(u)}function zp(){var t=[.5],n=[0,1],e=1;function r(r){if(r<=r)return n[f(t,r,0,e)]}return r.domain=function(i){return arguments.length?(t=ep.call(i),e=Math.min(t.length,n.length-1),r):t.slice()},r.range=function(i){return arguments.length?(n=ep.call(i),e=Math.min(t.length,n.length-1),r):n.slice()},r.invertExtent=function(e){var r=n.indexOf(e);return[t[r-1],t[r]]},r.copy=function(){return zp().domain(t).range(n)},r}var Rp=new Date,Dp=new Date;function Lp(t,n,e,r){function i(n){return t(n=new Date(+n)),n}return i.floor=i,i.ceil=function(e){return t(e=new Date(e-1)),n(e,1),t(e),e},i.round=function(t){var n=i(t),e=i.ceil(t);return t-n<e-t?n:e},i.offset=function(t,e){return n(t=new Date(+t),null==e?1:Math.floor(e)),t},i.range=function(e,r,u){var o,a=[];if(e=i.ceil(e),u=null==u?1:Math.floor(u),!(e<r&&u>0))return a;do{a.push(o=new Date(+e)),n(e,u),t(e)}while(o<e&&e<r);return a},i.filter=function(e){return Lp(function(n){if(n>=n)for(;t(n),!e(n);)n.setTime(n-1)},function(t,r){if(t>=t)if(r<0)for(;++r<=0;)for(;n(t,-1),!e(t););else for(;--r>=0;)for(;n(t,1),!e(t););})},e&&(i.count=function(n,r){return Rp.setTime(+n),Dp.setTime(+r),t(Rp),t(Dp),Math.floor(e(Rp,Dp))},i.every=function(t){return t=Math.floor(t),isFinite(t)&&t>0?t>1?i.filter(r?function(n){return r(n)%t==0}:function(n){return i.count(0,n)%t==0}):i:null}),i}var qp=Lp(function(){},function(t,n){t.setTime(+t+n)},function(t,n){return n-t});qp.every=function(t){return t=Math.floor(t),isFinite(t)&&t>0?t>1?Lp(function(n){n.setTime(Math.floor(n/t)*t)},function(n,e){n.setTime(+n+e*t)},function(n,e){return(e-n)/t}):qp:null};var Up=qp,Op=qp.range,Ip=6e4,Yp=6048e5,Bp=Lp(function(t){t.setTime(1e3*Math.floor(t/1e3))},function(t,n){t.setTime(+t+1e3*n)},function(t,n){return(n-t)/1e3},function(t){return t.getUTCSeconds()}),Fp=Bp,jp=Bp.range,Hp=Lp(function(t){t.setTime(Math.floor(t/Ip)*Ip)},function(t,n){t.setTime(+t+n*Ip)},function(t,n){return(n-t)/Ip},function(t){return t.getMinutes()}),Xp=Hp,Gp=Hp.range,Vp=Lp(function(t){var n=t.getTimezoneOffset()*Ip%36e5;n<0&&(n+=36e5),t.setTime(36e5*Math.floor((+t-n)/36e5)+n)},function(t,n){t.setTime(+t+36e5*n)},function(t,n){return(n-t)/36e5},function(t){return t.getHours()}),$p=Vp,Wp=Vp.range,Zp=Lp(function(t){t.setHours(0,0,0,0)},function(t,n){t.setDate(t.getDate()+n)},function(t,n){return(n-t-(n.getTimezoneOffset()-t.getTimezoneOffset())*Ip)/864e5},function(t){return t.getDate()-1}),Qp=Zp,Jp=Zp.range;function Kp(t){return Lp(function(n){n.setDate(n.getDate()-(n.getDay()+7-t)%7),n.setHours(0,0,0,0)},function(t,n){t.setDate(t.getDate()+7*n)},function(t,n){return(n-t-(n.getTimezoneOffset()-t.getTimezoneOffset())*Ip)/Yp})}var tv=Kp(0),nv=Kp(1),ev=Kp(2),rv=Kp(3),iv=Kp(4),uv=Kp(5),ov=Kp(6),av=tv.range,fv=nv.range,cv=ev.range,sv=rv.range,lv=iv.range,hv=uv.range,dv=ov.range,pv=Lp(function(t){t.setDate(1),t.setHours(0,0,0,0)},function(t,n){t.setMonth(t.getMonth()+n)},function(t,n){return n.getMonth()-t.getMonth()+12*(n.getFullYear()-t.getFullYear())},function(t){return t.getMonth()}),vv=pv,gv=pv.range,yv=Lp(function(t){t.setMonth(0,1),t.setHours(0,0,0,0)},function(t,n){t.setFullYear(t.getFullYear()+n)},function(t,n){return n.getFullYear()-t.getFullYear()},function(t){return t.getFullYear()});yv.every=function(t){return isFinite(t=Math.floor(t))&&t>0?Lp(function(n){n.setFullYear(Math.floor(n.getFullYear()/t)*t),n.setMonth(0,1),n.setHours(0,0,0,0)},function(n,e){n.setFullYear(n.getFullYear()+e*t)}):null};var _v=yv,bv=yv.range,mv=Lp(function(t){t.setUTCSeconds(0,0)},function(t,n){t.setTime(+t+n*Ip)},function(t,n){return(n-t)/Ip},function(t){return t.getUTCMinutes()}),xv=mv,wv=mv.range,Mv=Lp(function(t){t.setUTCMinutes(0,0,0)},function(t,n){t.setTime(+t+36e5*n)},function(t,n){return(n-t)/36e5},function(t){return t.getUTCHours()}),Av=Mv,Sv=Mv.range,Tv=Lp(function(t){t.setUTCHours(0,0,0,0)},function(t,n){t.setUTCDate(t.getUTCDate()+n)},function(t,n){return(n-t)/864e5},function(t){return t.getUTCDate()-1}),Nv=Tv,kv=Tv.range;function Ev(t){return Lp(function(n){n.setUTCDate(n.getUTCDate()-(n.getUTCDay()+7-t)%7),n.setUTCHours(0,0,0,0)},function(t,n){t.setUTCDate(t.getUTCDate()+7*n)},function(t,n){return(n-t)/Yp})}var Cv=Ev(0),Pv=Ev(1),zv=Ev(2),Rv=Ev(3),Dv=Ev(4),Lv=Ev(5),qv=Ev(6),Uv=Cv.range,Ov=Pv.range,Iv=zv.range,Yv=Rv.range,Bv=Dv.range,Fv=Lv.range,jv=qv.range,Hv=Lp(function(t){t.setUTCDate(1),t.setUTCHours(0,0,0,0)},function(t,n){t.setUTCMonth(t.getUTCMonth()+n)},function(t,n){return n.getUTCMonth()-t.getUTCMonth()+12*(n.getUTCFullYear()-t.getUTCFullYear())},function(t){return t.getUTCMonth()}),Xv=Hv,Gv=Hv.range,Vv=Lp(function(t){t.setUTCMonth(0,1),t.setUTCHours(0,0,0,0)},function(t,n){t.setUTCFullYear(t.getUTCFullYear()+n)},function(t,n){return n.getUTCFullYear()-t.getUTCFullYear()},function(t){return t.getUTCFullYear()});Vv.every=function(t){return isFinite(t=Math.floor(t))&&t>0?Lp(function(n){n.setUTCFullYear(Math.floor(n.getUTCFullYear()/t)*t),n.setUTCMonth(0,1),n.setUTCHours(0,0,0,0)},function(n,e){n.setUTCFullYear(n.getUTCFullYear()+e*t)}):null};var $v=Vv,Wv=Vv.range;function Zv(t){if(0<=t.y&&t.y<100){var n=new Date(-1,t.m,t.d,t.H,t.M,t.S,t.L);return n.setFullYear(t.y),n}return new Date(t.y,t.m,t.d,t.H,t.M,t.S,t.L)}function Qv(t){if(0<=t.y&&t.y<100){var n=new Date(Date.UTC(-1,t.m,t.d,t.H,t.M,t.S,t.L));return n.setUTCFullYear(t.y),n}return new Date(Date.UTC(t.y,t.m,t.d,t.H,t.M,t.S,t.L))}function Jv(t){return{y:t,m:0,d:1,H:0,M:0,S:0,L:0}}function Kv(t){var n=t.dateTime,e=t.date,r=t.time,i=t.periods,u=t.days,o=t.shortDays,a=t.months,f=t.shortMonths,c=lg(i),s=hg(i),l=lg(u),h=hg(u),d=lg(o),p=hg(o),v=lg(a),g=hg(a),y=lg(f),_=hg(f),b={a:function(t){return o[t.getDay()]},A:function(t){return u[t.getDay()]},b:function(t){return f[t.getMonth()]},B:function(t){return a[t.getMonth()]},c:null,d:zg,e:zg,f:Ug,H:Rg,I:Dg,j:Lg,L:qg,m:Og,M:Ig,p:function(t){return i[+(t.getHours()>=12)]},Q:dy,s:py,S:Yg,u:Bg,U:Fg,V:jg,w:Hg,W:Xg,x:null,X:null,y:Gg,Y:Vg,Z:$g,\"%\":hy},m={a:function(t){return o[t.getUTCDay()]},A:function(t){return u[t.getUTCDay()]},b:function(t){return f[t.getUTCMonth()]},B:function(t){return a[t.getUTCMonth()]},c:null,d:Wg,e:Wg,f:ty,H:Zg,I:Qg,j:Jg,L:Kg,m:ny,M:ey,p:function(t){return i[+(t.getUTCHours()>=12)]},Q:dy,s:py,S:ry,u:iy,U:uy,V:oy,w:ay,W:fy,x:null,X:null,y:cy,Y:sy,Z:ly,\"%\":hy},x={a:function(t,n,e){var r=d.exec(n.slice(e));return r?(t.w=p[r[0].toLowerCase()],e+r[0].length):-1},A:function(t,n,e){var r=l.exec(n.slice(e));return r?(t.w=h[r[0].toLowerCase()],e+r[0].length):-1},b:function(t,n,e){var r=y.exec(n.slice(e));return r?(t.m=_[r[0].toLowerCase()],e+r[0].length):-1},B:function(t,n,e){var r=v.exec(n.slice(e));return r?(t.m=g[r[0].toLowerCase()],e+r[0].length):-1},c:function(t,e,r){return A(t,n,e,r)},d:wg,e:wg,f:kg,H:Ag,I:Ag,j:Mg,L:Ng,m:xg,M:Sg,p:function(t,n,e){var r=c.exec(n.slice(e));return r?(t.p=s[r[0].toLowerCase()],e+r[0].length):-1},Q:Cg,s:Pg,S:Tg,u:pg,U:vg,V:gg,w:dg,W:yg,x:function(t,n,r){return A(t,e,n,r)},X:function(t,n,e){return A(t,r,n,e)},y:bg,Y:_g,Z:mg,\"%\":Eg};function w(t,n){return function(e){var r,i,u,o=[],a=-1,f=0,c=t.length;for(e instanceof Date||(e=new Date(+e));++a<c;)37===t.charCodeAt(a)&&(o.push(t.slice(f,a)),null!=(i=ug[r=t.charAt(++a)])?r=t.charAt(++a):i=\"e\"===r?\" \":\"0\",(u=n[r])&&(r=u(e,i)),o.push(r),f=a+1);return o.push(t.slice(f,a)),o.join(\"\")}}function M(t,n){return function(e){var r,i,u=Jv(1900);if(A(u,t,e+=\"\",0)!=e.length)return null;if(\"Q\"in u)return new Date(u.Q);if(\"p\"in u&&(u.H=u.H%12+12*u.p),\"V\"in u){if(u.V<1||u.V>53)return null;\"w\"in u||(u.w=1),\"Z\"in u?(r=(i=(r=Qv(Jv(u.y))).getUTCDay())>4||0===i?Pv.ceil(r):Pv(r),r=Nv.offset(r,7*(u.V-1)),u.y=r.getUTCFullYear(),u.m=r.getUTCMonth(),u.d=r.getUTCDate()+(u.w+6)%7):(r=(i=(r=n(Jv(u.y))).getDay())>4||0===i?nv.ceil(r):nv(r),r=Qp.offset(r,7*(u.V-1)),u.y=r.getFullYear(),u.m=r.getMonth(),u.d=r.getDate()+(u.w+6)%7)}else(\"W\"in u||\"U\"in u)&&(\"w\"in u||(u.w=\"u\"in u?u.u%7:\"W\"in u?1:0),i=\"Z\"in u?Qv(Jv(u.y)).getUTCDay():n(Jv(u.y)).getDay(),u.m=0,u.d=\"W\"in u?(u.w+6)%7+7*u.W-(i+5)%7:u.w+7*u.U-(i+6)%7);return\"Z\"in u?(u.H+=u.Z/100|0,u.M+=u.Z%100,Qv(u)):n(u)}}function A(t,n,e,r){for(var i,u,o=0,a=n.length,f=e.length;o<a;){if(r>=f)return-1;if(37===(i=n.charCodeAt(o++))){if(i=n.charAt(o++),!(u=x[i in ug?n.charAt(o++):i])||(r=u(t,e,r))<0)return-1}else if(i!=e.charCodeAt(r++))return-1}return r}return b.x=w(e,b),b.X=w(r,b),b.c=w(n,b),m.x=w(e,m),m.X=w(r,m),m.c=w(n,m),{format:function(t){var n=w(t+=\"\",b);return n.toString=function(){return t},n},parse:function(t){var n=M(t+=\"\",Zv);return n.toString=function(){return t},n},utcFormat:function(t){var n=w(t+=\"\",m);return n.toString=function(){return t},n},utcParse:function(t){var n=M(t,Qv);return n.toString=function(){return t},n}}}var tg,ng,eg,rg,ig,ug={\"-\":\"\",_:\" \",0:\"0\"},og=/^\\s*\\d+/,ag=/^%/,fg=/[\\\\^$*+?|[\\]().{}]/g;function cg(t,n,e){var r=t<0?\"-\":\"\",i=(r?-t:t)+\"\",u=i.length;return r+(u<e?new Array(e-u+1).join(n)+i:i)}function sg(t){return t.replace(fg,\"\\\\$&\")}function lg(t){return new RegExp(\"^(?:\"+t.map(sg).join(\"|\")+\")\",\"i\")}function hg(t){for(var n={},e=-1,r=t.length;++e<r;)n[t[e].toLowerCase()]=e;return n}function dg(t,n,e){var r=og.exec(n.slice(e,e+1));return r?(t.w=+r[0],e+r[0].length):-1}function pg(t,n,e){var r=og.exec(n.slice(e,e+1));return r?(t.u=+r[0],e+r[0].length):-1}function vg(t,n,e){var r=og.exec(n.slice(e,e+2));return r?(t.U=+r[0],e+r[0].length):-1}function gg(t,n,e){var r=og.exec(n.slice(e,e+2));return r?(t.V=+r[0],e+r[0].length):-1}function yg(t,n,e){var r=og.exec(n.slice(e,e+2));return r?(t.W=+r[0],e+r[0].length):-1}function _g(t,n,e){var r=og.exec(n.slice(e,e+4));return r?(t.y=+r[0],e+r[0].length):-1}function bg(t,n,e){var r=og.exec(n.slice(e,e+2));return r?(t.y=+r[0]+(+r[0]>68?1900:2e3),e+r[0].length):-1}function mg(t,n,e){var r=/^(Z)|([+-]\\d\\d)(?::?(\\d\\d))?/.exec(n.slice(e,e+6));return r?(t.Z=r[1]?0:-(r[2]+(r[3]||\"00\")),e+r[0].length):-1}function xg(t,n,e){var r=og.exec(n.slice(e,e+2));return r?(t.m=r[0]-1,e+r[0].length):-1}function wg(t,n,e){var r=og.exec(n.slice(e,e+2));return r?(t.d=+r[0],e+r[0].length):-1}function Mg(t,n,e){var r=og.exec(n.slice(e,e+3));return r?(t.m=0,t.d=+r[0],e+r[0].length):-1}function Ag(t,n,e){var r=og.exec(n.slice(e,e+2));return r?(t.H=+r[0],e+r[0].length):-1}function Sg(t,n,e){var r=og.exec(n.slice(e,e+2));return r?(t.M=+r[0],e+r[0].length):-1}function Tg(t,n,e){var r=og.exec(n.slice(e,e+2));return r?(t.S=+r[0],e+r[0].length):-1}function Ng(t,n,e){var r=og.exec(n.slice(e,e+3));return r?(t.L=+r[0],e+r[0].length):-1}function kg(t,n,e){var r=og.exec(n.slice(e,e+6));return r?(t.L=Math.floor(r[0]/1e3),e+r[0].length):-1}function Eg(t,n,e){var r=ag.exec(n.slice(e,e+1));return r?e+r[0].length:-1}function Cg(t,n,e){var r=og.exec(n.slice(e));return r?(t.Q=+r[0],e+r[0].length):-1}function Pg(t,n,e){var r=og.exec(n.slice(e));return r?(t.Q=1e3*+r[0],e+r[0].length):-1}function zg(t,n){return cg(t.getDate(),n,2)}function Rg(t,n){return cg(t.getHours(),n,2)}function Dg(t,n){return cg(t.getHours()%12||12,n,2)}function Lg(t,n){return cg(1+Qp.count(_v(t),t),n,3)}function qg(t,n){return cg(t.getMilliseconds(),n,3)}function Ug(t,n){return qg(t,n)+\"000\"}function Og(t,n){return cg(t.getMonth()+1,n,2)}function Ig(t,n){return cg(t.getMinutes(),n,2)}function Yg(t,n){return cg(t.getSeconds(),n,2)}function Bg(t){var n=t.getDay();return 0===n?7:n}function Fg(t,n){return cg(tv.count(_v(t),t),n,2)}function jg(t,n){var e=t.getDay();return t=e>=4||0===e?iv(t):iv.ceil(t),cg(iv.count(_v(t),t)+(4===_v(t).getDay()),n,2)}function Hg(t){return t.getDay()}function Xg(t,n){return cg(nv.count(_v(t),t),n,2)}function Gg(t,n){return cg(t.getFullYear()%100,n,2)}function Vg(t,n){return cg(t.getFullYear()%1e4,n,4)}function $g(t){var n=t.getTimezoneOffset();return(n>0?\"-\":(n*=-1,\"+\"))+cg(n/60|0,\"0\",2)+cg(n%60,\"0\",2)}function Wg(t,n){return cg(t.getUTCDate(),n,2)}function Zg(t,n){return cg(t.getUTCHours(),n,2)}function Qg(t,n){return cg(t.getUTCHours()%12||12,n,2)}function Jg(t,n){return cg(1+Nv.count($v(t),t),n,3)}function Kg(t,n){return cg(t.getUTCMilliseconds(),n,3)}function ty(t,n){return Kg(t,n)+\"000\"}function ny(t,n){return cg(t.getUTCMonth()+1,n,2)}function ey(t,n){return cg(t.getUTCMinutes(),n,2)}function ry(t,n){return cg(t.getUTCSeconds(),n,2)}function iy(t){var n=t.getUTCDay();return 0===n?7:n}function uy(t,n){return cg(Cv.count($v(t),t),n,2)}function oy(t,n){var e=t.getUTCDay();return t=e>=4||0===e?Dv(t):Dv.ceil(t),cg(Dv.count($v(t),t)+(4===$v(t).getUTCDay()),n,2)}function ay(t){return t.getUTCDay()}function fy(t,n){return cg(Pv.count($v(t),t),n,2)}function cy(t,n){return cg(t.getUTCFullYear()%100,n,2)}function sy(t,n){return cg(t.getUTCFullYear()%1e4,n,4)}function ly(){return\"+0000\"}function hy(){return\"%\"}function dy(t){return+t}function py(t){return Math.floor(+t/1e3)}function vy(t){return tg=Kv(t),ng=tg.format,eg=tg.parse,rg=tg.utcFormat,ig=tg.utcParse,tg}vy({dateTime:\"%x, %X\",date:\"%-m/%-d/%Y\",time:\"%-I:%M:%S %p\",periods:[\"AM\",\"PM\"],days:[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"],shortDays:[\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\"],months:[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"],shortMonths:[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"]});var gy=Date.prototype.toISOString?function(t){return t.toISOString()}:rg(\"%Y-%m-%dT%H:%M:%S.%LZ\");var yy=+new Date(\"2000-01-01T00:00:00.000Z\")?function(t){var n=new Date(t);return isNaN(n)?null:n}:ig(\"%Y-%m-%dT%H:%M:%S.%LZ\"),_y=1e3,by=60*_y,my=60*by,xy=24*my,wy=7*xy,My=30*xy,Ay=365*xy;function Sy(t){return new Date(t)}function Ty(t){return t instanceof Date?+t:+new Date(+t)}function Ny(t,n,e,r,u,o,a,f,c){var s=pp(sp,Oe),l=s.invert,h=s.domain,d=c(\".%L\"),p=c(\":%S\"),v=c(\"%I:%M\"),g=c(\"%I %p\"),y=c(\"%a %d\"),_=c(\"%b %d\"),b=c(\"%B\"),m=c(\"%Y\"),x=[[a,1,_y],[a,5,5*_y],[a,15,15*_y],[a,30,30*_y],[o,1,by],[o,5,5*by],[o,15,15*by],[o,30,30*by],[u,1,my],[u,3,3*my],[u,6,6*my],[u,12,12*my],[r,1,xy],[r,2,2*xy],[e,1,wy],[n,1,My],[n,3,3*My],[t,1,Ay]];function w(i){return(a(i)<i?d:o(i)<i?p:u(i)<i?v:r(i)<i?g:n(i)<i?e(i)<i?y:_:t(i)<i?b:m)(i)}function M(n,e,r,u){if(null==n&&(n=10),\"number\"==typeof n){var o=Math.abs(r-e)/n,a=i(function(t){return t[2]}).right(x,o);a===x.length?(u=k(e/Ay,r/Ay,n),n=t):a?(u=(a=x[o/x[a-1][2]<x[a][2]/o?a-1:a])[1],n=a[0]):(u=Math.max(k(e,r,n),1),n=f)}return null==u?n:n.every(u)}return s.invert=function(t){return new Date(l(t))},s.domain=function(t){return arguments.length?h(np.call(t,Ty)):h().map(Sy)},s.ticks=function(t,n){var e,r=h(),i=r[0],u=r[r.length-1],o=u<i;return o&&(e=i,i=u,u=e),e=(e=M(t,i,u,n))?e.range(i,u+1):[],o?e.reverse():e},s.tickFormat=function(t,n){return null==n?w:c(n)},s.nice=function(t,n){var e=h();return(t=M(t,e[0],e[e.length-1],n))?h(bp(e,t)):s},s.copy=function(){return dp(s,Ny(t,n,e,r,u,o,a,f,c))},s}var ky=function(){return Ny(_v,vv,tv,Qp,$p,Xp,Fp,Up,ng).domain([new Date(2e3,0,1),new Date(2e3,0,2)])},Ey=function(){return Ny($v,Xv,Cv,Nv,Av,xv,Fp,Up,rg).domain([Date.UTC(2e3,0,1),Date.UTC(2e3,0,2)])};function Cy(t){var n=0,e=1,r=!1;function i(i){var u=(i-n)/(e-n);return t(r?Math.max(0,Math.min(1,u)):u)}return i.domain=function(t){return arguments.length?(n=+t[0],e=+t[1],i):[n,e]},i.clamp=function(t){return arguments.length?(r=!!t,i):r},i.interpolator=function(n){return arguments.length?(t=n,i):t},i.copy=function(){return Cy(t).domain([n,e]).clamp(r)},gp(i)}var Py=function(t){for(var n=t.length/6|0,e=new Array(n),r=0;r<n;)e[r]=\"#\"+t.slice(6*r,6*++r);return e},zy=Py(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\"),Ry=Py(\"7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666\"),Dy=Py(\"1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666\"),Ly=Py(\"a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928\"),qy=Py(\"fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2\"),Uy=Py(\"b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc\"),Oy=Py(\"e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999\"),Iy=Py(\"66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3\"),Yy=Py(\"8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f\"),By=function(t){return De(t[t.length-1])},Fy=new Array(3).concat(\"d8b365f5f5f55ab4ac\",\"a6611adfc27d80cdc1018571\",\"a6611adfc27df5f5f580cdc1018571\",\"8c510ad8b365f6e8c3c7eae55ab4ac01665e\",\"8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e\",\"8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e\",\"8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e\",\"5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30\",\"5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30\").map(Py),jy=By(Fy),Hy=new Array(3).concat(\"af8dc3f7f7f77fbf7b\",\"7b3294c2a5cfa6dba0008837\",\"7b3294c2a5cff7f7f7a6dba0008837\",\"762a83af8dc3e7d4e8d9f0d37fbf7b1b7837\",\"762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837\",\"762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837\",\"762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837\",\"40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b\",\"40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b\").map(Py),Xy=By(Hy),Gy=new Array(3).concat(\"e9a3c9f7f7f7a1d76a\",\"d01c8bf1b6dab8e1864dac26\",\"d01c8bf1b6daf7f7f7b8e1864dac26\",\"c51b7de9a3c9fde0efe6f5d0a1d76a4d9221\",\"c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221\",\"c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221\",\"c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221\",\"8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419\",\"8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419\").map(Py),Vy=By(Gy),$y=new Array(3).concat(\"998ec3f7f7f7f1a340\",\"5e3c99b2abd2fdb863e66101\",\"5e3c99b2abd2f7f7f7fdb863e66101\",\"542788998ec3d8daebfee0b6f1a340b35806\",\"542788998ec3d8daebf7f7f7fee0b6f1a340b35806\",\"5427888073acb2abd2d8daebfee0b6fdb863e08214b35806\",\"5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806\",\"2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08\",\"2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08\").map(Py),Wy=By($y),Zy=new Array(3).concat(\"ef8a62f7f7f767a9cf\",\"ca0020f4a58292c5de0571b0\",\"ca0020f4a582f7f7f792c5de0571b0\",\"b2182bef8a62fddbc7d1e5f067a9cf2166ac\",\"b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac\",\"b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac\",\"b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac\",\"67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061\",\"67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061\").map(Py),Qy=By(Zy),Jy=new Array(3).concat(\"ef8a62ffffff999999\",\"ca0020f4a582bababa404040\",\"ca0020f4a582ffffffbababa404040\",\"b2182bef8a62fddbc7e0e0e09999994d4d4d\",\"b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d\",\"b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d\",\"b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d\",\"67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a\",\"67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a\").map(Py),Ky=By(Jy),t_=new Array(3).concat(\"fc8d59ffffbf91bfdb\",\"d7191cfdae61abd9e92c7bb6\",\"d7191cfdae61ffffbfabd9e92c7bb6\",\"d73027fc8d59fee090e0f3f891bfdb4575b4\",\"d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4\",\"d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4\",\"d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4\",\"a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695\",\"a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695\").map(Py),n_=By(t_),e_=new Array(3).concat(\"fc8d59ffffbf91cf60\",\"d7191cfdae61a6d96a1a9641\",\"d7191cfdae61ffffbfa6d96a1a9641\",\"d73027fc8d59fee08bd9ef8b91cf601a9850\",\"d73027fc8d59fee08bffffbfd9ef8b91cf601a9850\",\"d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850\",\"d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850\",\"a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837\",\"a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837\").map(Py),r_=By(e_),i_=new Array(3).concat(\"fc8d59ffffbf99d594\",\"d7191cfdae61abdda42b83ba\",\"d7191cfdae61ffffbfabdda42b83ba\",\"d53e4ffc8d59fee08be6f59899d5943288bd\",\"d53e4ffc8d59fee08bffffbfe6f59899d5943288bd\",\"d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd\",\"d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd\",\"9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2\",\"9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2\").map(Py),u_=By(i_),o_=new Array(3).concat(\"e5f5f999d8c92ca25f\",\"edf8fbb2e2e266c2a4238b45\",\"edf8fbb2e2e266c2a42ca25f006d2c\",\"edf8fbccece699d8c966c2a42ca25f006d2c\",\"edf8fbccece699d8c966c2a441ae76238b45005824\",\"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824\",\"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b\").map(Py),a_=By(o_),f_=new Array(3).concat(\"e0ecf49ebcda8856a7\",\"edf8fbb3cde38c96c688419d\",\"edf8fbb3cde38c96c68856a7810f7c\",\"edf8fbbfd3e69ebcda8c96c68856a7810f7c\",\"edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b\",\"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b\",\"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b\").map(Py),c_=By(f_),s_=new Array(3).concat(\"e0f3dba8ddb543a2ca\",\"f0f9e8bae4bc7bccc42b8cbe\",\"f0f9e8bae4bc7bccc443a2ca0868ac\",\"f0f9e8ccebc5a8ddb57bccc443a2ca0868ac\",\"f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081\").map(Py),l_=By(s_),h_=new Array(3).concat(\"fee8c8fdbb84e34a33\",\"fef0d9fdcc8afc8d59d7301f\",\"fef0d9fdcc8afc8d59e34a33b30000\",\"fef0d9fdd49efdbb84fc8d59e34a33b30000\",\"fef0d9fdd49efdbb84fc8d59ef6548d7301f990000\",\"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000\",\"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000\").map(Py),d_=By(h_),p_=new Array(3).concat(\"ece2f0a6bddb1c9099\",\"f6eff7bdc9e167a9cf02818a\",\"f6eff7bdc9e167a9cf1c9099016c59\",\"f6eff7d0d1e6a6bddb67a9cf1c9099016c59\",\"f6eff7d0d1e6a6bddb67a9cf3690c002818a016450\",\"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450\",\"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636\").map(Py),v_=By(p_),g_=new Array(3).concat(\"ece7f2a6bddb2b8cbe\",\"f1eef6bdc9e174a9cf0570b0\",\"f1eef6bdc9e174a9cf2b8cbe045a8d\",\"f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d\",\"f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858\").map(Py),y_=By(g_),__=new Array(3).concat(\"e7e1efc994c7dd1c77\",\"f1eef6d7b5d8df65b0ce1256\",\"f1eef6d7b5d8df65b0dd1c77980043\",\"f1eef6d4b9dac994c7df65b0dd1c77980043\",\"f1eef6d4b9dac994c7df65b0e7298ace125691003f\",\"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f\",\"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f\").map(Py),b_=By(__),m_=new Array(3).concat(\"fde0ddfa9fb5c51b8a\",\"feebe2fbb4b9f768a1ae017e\",\"feebe2fbb4b9f768a1c51b8a7a0177\",\"feebe2fcc5c0fa9fb5f768a1c51b8a7a0177\",\"feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a\").map(Py),x_=By(m_),w_=new Array(3).concat(\"edf8b17fcdbb2c7fb8\",\"ffffcca1dab441b6c4225ea8\",\"ffffcca1dab441b6c42c7fb8253494\",\"ffffccc7e9b47fcdbb41b6c42c7fb8253494\",\"ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58\").map(Py),M_=By(w_),A_=new Array(3).concat(\"f7fcb9addd8e31a354\",\"ffffccc2e69978c679238443\",\"ffffccc2e69978c67931a354006837\",\"ffffccd9f0a3addd8e78c67931a354006837\",\"ffffccd9f0a3addd8e78c67941ab5d238443005a32\",\"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32\",\"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529\").map(Py),S_=By(A_),T_=new Array(3).concat(\"fff7bcfec44fd95f0e\",\"ffffd4fed98efe9929cc4c02\",\"ffffd4fed98efe9929d95f0e993404\",\"ffffd4fee391fec44ffe9929d95f0e993404\",\"ffffd4fee391fec44ffe9929ec7014cc4c028c2d04\",\"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04\",\"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506\").map(Py),N_=By(T_),k_=new Array(3).concat(\"ffeda0feb24cf03b20\",\"ffffb2fecc5cfd8d3ce31a1c\",\"ffffb2fecc5cfd8d3cf03b20bd0026\",\"ffffb2fed976feb24cfd8d3cf03b20bd0026\",\"ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026\").map(Py),E_=By(k_),C_=new Array(3).concat(\"deebf79ecae13182bd\",\"eff3ffbdd7e76baed62171b5\",\"eff3ffbdd7e76baed63182bd08519c\",\"eff3ffc6dbef9ecae16baed63182bd08519c\",\"eff3ffc6dbef9ecae16baed64292c62171b5084594\",\"f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594\",\"f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b\").map(Py),P_=By(C_),z_=new Array(3).concat(\"e5f5e0a1d99b31a354\",\"edf8e9bae4b374c476238b45\",\"edf8e9bae4b374c47631a354006d2c\",\"edf8e9c7e9c0a1d99b74c47631a354006d2c\",\"edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32\",\"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32\",\"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b\").map(Py),R_=By(z_),D_=new Array(3).concat(\"f0f0f0bdbdbd636363\",\"f7f7f7cccccc969696525252\",\"f7f7f7cccccc969696636363252525\",\"f7f7f7d9d9d9bdbdbd969696636363252525\",\"f7f7f7d9d9d9bdbdbd969696737373525252252525\",\"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525\",\"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000\").map(Py),L_=By(D_),q_=new Array(3).concat(\"efedf5bcbddc756bb1\",\"f2f0f7cbc9e29e9ac86a51a3\",\"f2f0f7cbc9e29e9ac8756bb154278f\",\"f2f0f7dadaebbcbddc9e9ac8756bb154278f\",\"f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486\",\"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486\",\"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d\").map(Py),U_=By(q_),O_=new Array(3).concat(\"fee0d2fc9272de2d26\",\"fee5d9fcae91fb6a4acb181d\",\"fee5d9fcae91fb6a4ade2d26a50f15\",\"fee5d9fcbba1fc9272fb6a4ade2d26a50f15\",\"fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d\").map(Py),I_=By(O_),Y_=new Array(3).concat(\"fee6cefdae6be6550d\",\"feeddefdbe85fd8d3cd94701\",\"feeddefdbe85fd8d3ce6550da63603\",\"feeddefdd0a2fdae6bfd8d3ce6550da63603\",\"feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704\").map(Py),B_=By(Y_),F_=vr(we(300,.5,0),we(-240,.5,1)),j_=vr(we(-100,.75,.35),we(80,1.5,.8)),H_=vr(we(260,.75,.35),we(80,1.5,.8)),X_=we(),G_=function(t){(t<0||t>1)&&(t-=Math.floor(t));var n=Math.abs(t-.5);return X_.h=360*t-100,X_.s=1.5-1.5*n,X_.l=.8-.9*n,X_+\"\"};function V_(t){var n=t.length;return function(e){return t[Math.max(0,Math.min(n-1,Math.floor(e*n)))]}}var $_=V_(Py(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\")),W_=V_(Py(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\")),Z_=V_(Py(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\")),Q_=V_(Py(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\")),J_=function(t){return function(){return t}},K_=Math.abs,tb=Math.atan2,nb=Math.cos,eb=Math.max,rb=Math.min,ib=Math.sin,ub=Math.sqrt,ob=1e-12,ab=Math.PI,fb=ab/2,cb=2*ab;function sb(t){return t>=1?fb:t<=-1?-fb:Math.asin(t)}function lb(t){return t.innerRadius}function hb(t){return t.outerRadius}function db(t){return t.startAngle}function pb(t){return t.endAngle}function vb(t){return t&&t.padAngle}function gb(t,n,e,r,i,u,o){var a=t-e,f=n-r,c=(o?u:-u)/ub(a*a+f*f),s=c*f,l=-c*a,h=t+s,d=n+l,p=e+s,v=r+l,g=(h+p)/2,y=(d+v)/2,_=p-h,b=v-d,m=_*_+b*b,x=i-u,w=h*v-p*d,M=(b<0?-1:1)*ub(eb(0,x*x*m-w*w)),A=(w*b-_*M)/m,S=(-w*_-b*M)/m,T=(w*b+_*M)/m,N=(-w*_+b*M)/m,k=A-g,E=S-y,C=T-g,P=N-y;return k*k+E*E>C*C+P*P&&(A=T,S=N),{cx:A,cy:S,x01:-s,y01:-l,x11:A*(i/x-1),y11:S*(i/x-1)}}var yb=function(){var t=lb,n=hb,e=J_(0),r=null,i=db,u=pb,o=vb,a=null;function f(){var f,c,s,l=+t.apply(this,arguments),h=+n.apply(this,arguments),d=i.apply(this,arguments)-fb,p=u.apply(this,arguments)-fb,v=K_(p-d),g=p>d;if(a||(a=f=Lu()),h<l&&(c=h,h=l,l=c),h>ob)if(v>cb-ob)a.moveTo(h*nb(d),h*ib(d)),a.arc(0,0,h,d,p,!g),l>ob&&(a.moveTo(l*nb(p),l*ib(p)),a.arc(0,0,l,p,d,g));else{var y,_,b=d,m=p,x=d,w=p,M=v,A=v,S=o.apply(this,arguments)/2,T=S>ob&&(r?+r.apply(this,arguments):ub(l*l+h*h)),N=rb(K_(h-l)/2,+e.apply(this,arguments)),k=N,E=N;if(T>ob){var C=sb(T/l*ib(S)),P=sb(T/h*ib(S));(M-=2*C)>ob?(x+=C*=g?1:-1,w-=C):(M=0,x=w=(d+p)/2),(A-=2*P)>ob?(b+=P*=g?1:-1,m-=P):(A=0,b=m=(d+p)/2)}var z=h*nb(b),R=h*ib(b),D=l*nb(w),L=l*ib(w);if(N>ob){var q=h*nb(m),U=h*ib(m),O=l*nb(x),I=l*ib(x);if(v<ab){var Y=M>ob?function(t,n,e,r,i,u,o,a){var f=e-t,c=r-n,s=o-i,l=a-u,h=(s*(n-u)-l*(t-i))/(l*f-s*c);return[t+h*f,n+h*c]}(z,R,O,I,q,U,D,L):[D,L],B=z-Y[0],F=R-Y[1],j=q-Y[0],H=U-Y[1],X=1/ib(((s=(B*j+F*H)/(ub(B*B+F*F)*ub(j*j+H*H)))>1?0:s<-1?ab:Math.acos(s))/2),G=ub(Y[0]*Y[0]+Y[1]*Y[1]);k=rb(N,(l-G)/(X-1)),E=rb(N,(h-G)/(X+1))}}A>ob?E>ob?(y=gb(O,I,z,R,h,E,g),_=gb(q,U,D,L,h,E,g),a.moveTo(y.cx+y.x01,y.cy+y.y01),E<N?a.arc(y.cx,y.cy,E,tb(y.y01,y.x01),tb(_.y01,_.x01),!g):(a.arc(y.cx,y.cy,E,tb(y.y01,y.x01),tb(y.y11,y.x11),!g),a.arc(0,0,h,tb(y.cy+y.y11,y.cx+y.x11),tb(_.cy+_.y11,_.cx+_.x11),!g),a.arc(_.cx,_.cy,E,tb(_.y11,_.x11),tb(_.y01,_.x01),!g))):(a.moveTo(z,R),a.arc(0,0,h,b,m,!g)):a.moveTo(z,R),l>ob&&M>ob?k>ob?(y=gb(D,L,q,U,l,-k,g),_=gb(z,R,O,I,l,-k,g),a.lineTo(y.cx+y.x01,y.cy+y.y01),k<N?a.arc(y.cx,y.cy,k,tb(y.y01,y.x01),tb(_.y01,_.x01),!g):(a.arc(y.cx,y.cy,k,tb(y.y01,y.x01),tb(y.y11,y.x11),!g),a.arc(0,0,l,tb(y.cy+y.y11,y.cx+y.x11),tb(_.cy+_.y11,_.cx+_.x11),g),a.arc(_.cx,_.cy,k,tb(_.y11,_.x11),tb(_.y01,_.x01),!g))):a.arc(0,0,l,w,x,g):a.lineTo(D,L)}else a.moveTo(0,0);if(a.closePath(),f)return a=null,f+\"\"||null}return f.centroid=function(){var e=(+t.apply(this,arguments)+ +n.apply(this,arguments))/2,r=(+i.apply(this,arguments)+ +u.apply(this,arguments))/2-ab/2;return[nb(r)*e,ib(r)*e]},f.innerRadius=function(n){return arguments.length?(t=\"function\"==typeof n?n:J_(+n),f):t},f.outerRadius=function(t){return arguments.length?(n=\"function\"==typeof t?t:J_(+t),f):n},f.cornerRadius=function(t){return arguments.length?(e=\"function\"==typeof t?t:J_(+t),f):e},f.padRadius=function(t){return arguments.length?(r=null==t?null:\"function\"==typeof t?t:J_(+t),f):r},f.startAngle=function(t){return arguments.length?(i=\"function\"==typeof t?t:J_(+t),f):i},f.endAngle=function(t){return arguments.length?(u=\"function\"==typeof t?t:J_(+t),f):u},f.padAngle=function(t){return arguments.length?(o=\"function\"==typeof t?t:J_(+t),f):o},f.context=function(t){return arguments.length?(a=null==t?null:t,f):a},f};function _b(t){this._context=t}_b.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._point=0},lineEnd:function(){(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break;case 1:this._point=2;default:this._context.lineTo(t,n)}}};var bb=function(t){return new _b(t)};function mb(t){return t[0]}function xb(t){return t[1]}var wb=function(){var t=mb,n=xb,e=J_(!0),r=null,i=bb,u=null;function o(o){var a,f,c,s=o.length,l=!1;for(null==r&&(u=i(c=Lu())),a=0;a<=s;++a)!(a<s&&e(f=o[a],a,o))===l&&((l=!l)?u.lineStart():u.lineEnd()),l&&u.point(+t(f,a,o),+n(f,a,o));if(c)return u=null,c+\"\"||null}return o.x=function(n){return arguments.length?(t=\"function\"==typeof n?n:J_(+n),o):t},o.y=function(t){return arguments.length?(n=\"function\"==typeof t?t:J_(+t),o):n},o.defined=function(t){return arguments.length?(e=\"function\"==typeof t?t:J_(!!t),o):e},o.curve=function(t){return arguments.length?(i=t,null!=r&&(u=i(r)),o):i},o.context=function(t){return arguments.length?(null==t?r=u=null:u=i(r=t),o):r},o},Mb=function(){var t=mb,n=null,e=J_(0),r=xb,i=J_(!0),u=null,o=bb,a=null;function f(f){var c,s,l,h,d,p=f.length,v=!1,g=new Array(p),y=new Array(p);for(null==u&&(a=o(d=Lu())),c=0;c<=p;++c){if(!(c<p&&i(h=f[c],c,f))===v)if(v=!v)s=c,a.areaStart(),a.lineStart();else{for(a.lineEnd(),a.lineStart(),l=c-1;l>=s;--l)a.point(g[l],y[l]);a.lineEnd(),a.areaEnd()}v&&(g[c]=+t(h,c,f),y[c]=+e(h,c,f),a.point(n?+n(h,c,f):g[c],r?+r(h,c,f):y[c]))}if(d)return a=null,d+\"\"||null}function c(){return wb().defined(i).curve(o).context(u)}return f.x=function(e){return arguments.length?(t=\"function\"==typeof e?e:J_(+e),n=null,f):t},f.x0=function(n){return arguments.length?(t=\"function\"==typeof n?n:J_(+n),f):t},f.x1=function(t){return arguments.length?(n=null==t?null:\"function\"==typeof t?t:J_(+t),f):n},f.y=function(t){return arguments.length?(e=\"function\"==typeof t?t:J_(+t),r=null,f):e},f.y0=function(t){return arguments.length?(e=\"function\"==typeof t?t:J_(+t),f):e},f.y1=function(t){return arguments.length?(r=null==t?null:\"function\"==typeof t?t:J_(+t),f):r},f.lineX0=f.lineY0=function(){return c().x(t).y(e)},f.lineY1=function(){return c().x(t).y(r)},f.lineX1=function(){return c().x(n).y(e)},f.defined=function(t){return arguments.length?(i=\"function\"==typeof t?t:J_(!!t),f):i},f.curve=function(t){return arguments.length?(o=t,null!=u&&(a=o(u)),f):o},f.context=function(t){return arguments.length?(null==t?u=a=null:a=o(u=t),f):u},f},Ab=function(t,n){return n<t?-1:n>t?1:n>=t?0:NaN},Sb=function(t){return t},Tb=function(){var t=Sb,n=Ab,e=null,r=J_(0),i=J_(cb),u=J_(0);function o(o){var a,f,c,s,l,h=o.length,d=0,p=new Array(h),v=new Array(h),g=+r.apply(this,arguments),y=Math.min(cb,Math.max(-cb,i.apply(this,arguments)-g)),_=Math.min(Math.abs(y)/h,u.apply(this,arguments)),b=_*(y<0?-1:1);for(a=0;a<h;++a)(l=v[p[a]=a]=+t(o[a],a,o))>0&&(d+=l);for(null!=n?p.sort(function(t,e){return n(v[t],v[e])}):null!=e&&p.sort(function(t,n){return e(o[t],o[n])}),a=0,c=d?(y-h*b)/d:0;a<h;++a,g=s)f=p[a],s=g+((l=v[f])>0?l*c:0)+b,v[f]={data:o[f],index:a,value:l,startAngle:g,endAngle:s,padAngle:_};return v}return o.value=function(n){return arguments.length?(t=\"function\"==typeof n?n:J_(+n),o):t},o.sortValues=function(t){return arguments.length?(n=t,e=null,o):n},o.sort=function(t){return arguments.length?(e=t,n=null,o):e},o.startAngle=function(t){return arguments.length?(r=\"function\"==typeof t?t:J_(+t),o):r},o.endAngle=function(t){return arguments.length?(i=\"function\"==typeof t?t:J_(+t),o):i},o.padAngle=function(t){return arguments.length?(u=\"function\"==typeof t?t:J_(+t),o):u},o},Nb=Eb(bb);function kb(t){this._curve=t}function Eb(t){function n(n){return new kb(t(n))}return n._curve=t,n}function Cb(t){var n=t.curve;return t.angle=t.x,delete t.x,t.radius=t.y,delete t.y,t.curve=function(t){return arguments.length?n(Eb(t)):n()._curve},t}kb.prototype={areaStart:function(){this._curve.areaStart()},areaEnd:function(){this._curve.areaEnd()},lineStart:function(){this._curve.lineStart()},lineEnd:function(){this._curve.lineEnd()},point:function(t,n){this._curve.point(n*Math.sin(t),n*-Math.cos(t))}};var Pb=function(){return Cb(wb().curve(Nb))},zb=function(){var t=Mb().curve(Nb),n=t.curve,e=t.lineX0,r=t.lineX1,i=t.lineY0,u=t.lineY1;return t.angle=t.x,delete t.x,t.startAngle=t.x0,delete t.x0,t.endAngle=t.x1,delete t.x1,t.radius=t.y,delete t.y,t.innerRadius=t.y0,delete t.y0,t.outerRadius=t.y1,delete t.y1,t.lineStartAngle=function(){return Cb(e())},delete t.lineX0,t.lineEndAngle=function(){return Cb(r())},delete t.lineX1,t.lineInnerRadius=function(){return Cb(i())},delete t.lineY0,t.lineOuterRadius=function(){return Cb(u())},delete t.lineY1,t.curve=function(t){return arguments.length?n(Eb(t)):n()._curve},t},Rb=function(t,n){return[(n=+n)*Math.cos(t-=Math.PI/2),n*Math.sin(t)]},Db=Array.prototype.slice;function Lb(t){return t.source}function qb(t){return t.target}function Ub(t){var n=Lb,e=qb,r=mb,i=xb,u=null;function o(){var o,a=Db.call(arguments),f=n.apply(this,a),c=e.apply(this,a);if(u||(u=o=Lu()),t(u,+r.apply(this,(a[0]=f,a)),+i.apply(this,a),+r.apply(this,(a[0]=c,a)),+i.apply(this,a)),o)return u=null,o+\"\"||null}return o.source=function(t){return arguments.length?(n=t,o):n},o.target=function(t){return arguments.length?(e=t,o):e},o.x=function(t){return arguments.length?(r=\"function\"==typeof t?t:J_(+t),o):r},o.y=function(t){return arguments.length?(i=\"function\"==typeof t?t:J_(+t),o):i},o.context=function(t){return arguments.length?(u=null==t?null:t,o):u},o}function Ob(t,n,e,r,i){t.moveTo(n,e),t.bezierCurveTo(n=(n+r)/2,e,n,i,r,i)}function Ib(t,n,e,r,i){t.moveTo(n,e),t.bezierCurveTo(n,e=(e+i)/2,r,e,r,i)}function Yb(t,n,e,r,i){var u=Rb(n,e),o=Rb(n,e=(e+i)/2),a=Rb(r,e),f=Rb(r,i);t.moveTo(u[0],u[1]),t.bezierCurveTo(o[0],o[1],a[0],a[1],f[0],f[1])}function Bb(){return Ub(Ob)}function Fb(){return Ub(Ib)}function jb(){var t=Ub(Yb);return t.angle=t.x,delete t.x,t.radius=t.y,delete t.y,t}var Hb={draw:function(t,n){var e=Math.sqrt(n/ab);t.moveTo(e,0),t.arc(0,0,e,0,cb)}},Xb={draw:function(t,n){var e=Math.sqrt(n/5)/2;t.moveTo(-3*e,-e),t.lineTo(-e,-e),t.lineTo(-e,-3*e),t.lineTo(e,-3*e),t.lineTo(e,-e),t.lineTo(3*e,-e),t.lineTo(3*e,e),t.lineTo(e,e),t.lineTo(e,3*e),t.lineTo(-e,3*e),t.lineTo(-e,e),t.lineTo(-3*e,e),t.closePath()}},Gb=Math.sqrt(1/3),Vb=2*Gb,$b={draw:function(t,n){var e=Math.sqrt(n/Vb),r=e*Gb;t.moveTo(0,-e),t.lineTo(r,0),t.lineTo(0,e),t.lineTo(-r,0),t.closePath()}},Wb=Math.sin(ab/10)/Math.sin(7*ab/10),Zb=Math.sin(cb/10)*Wb,Qb=-Math.cos(cb/10)*Wb,Jb={draw:function(t,n){var e=Math.sqrt(.8908130915292852*n),r=Zb*e,i=Qb*e;t.moveTo(0,-e),t.lineTo(r,i);for(var u=1;u<5;++u){var o=cb*u/5,a=Math.cos(o),f=Math.sin(o);t.lineTo(f*e,-a*e),t.lineTo(a*r-f*i,f*r+a*i)}t.closePath()}},Kb={draw:function(t,n){var e=Math.sqrt(n),r=-e/2;t.rect(r,r,e,e)}},tm=Math.sqrt(3),nm={draw:function(t,n){var e=-Math.sqrt(n/(3*tm));t.moveTo(0,2*e),t.lineTo(-tm*e,-e),t.lineTo(tm*e,-e),t.closePath()}},em=Math.sqrt(3)/2,rm=1/Math.sqrt(12),im=3*(rm/2+1),um={draw:function(t,n){var e=Math.sqrt(n/im),r=e/2,i=e*rm,u=r,o=e*rm+e,a=-u,f=o;t.moveTo(r,i),t.lineTo(u,o),t.lineTo(a,f),t.lineTo(-.5*r-em*i,em*r+-.5*i),t.lineTo(-.5*u-em*o,em*u+-.5*o),t.lineTo(-.5*a-em*f,em*a+-.5*f),t.lineTo(-.5*r+em*i,-.5*i-em*r),t.lineTo(-.5*u+em*o,-.5*o-em*u),t.lineTo(-.5*a+em*f,-.5*f-em*a),t.closePath()}},om=[Hb,Xb,$b,Kb,Jb,nm,um],am=function(){var t=J_(Hb),n=J_(64),e=null;function r(){var r;if(e||(e=r=Lu()),t.apply(this,arguments).draw(e,+n.apply(this,arguments)),r)return e=null,r+\"\"||null}return r.type=function(n){return arguments.length?(t=\"function\"==typeof n?n:J_(n),r):t},r.size=function(t){return arguments.length?(n=\"function\"==typeof t?t:J_(+t),r):n},r.context=function(t){return arguments.length?(e=null==t?null:t,r):e},r},fm=function(){};function cm(t,n,e){t._context.bezierCurveTo((2*t._x0+t._x1)/3,(2*t._y0+t._y1)/3,(t._x0+2*t._x1)/3,(t._y0+2*t._y1)/3,(t._x0+4*t._x1+n)/6,(t._y0+4*t._y1+e)/6)}function sm(t){this._context=t}sm.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._y0=this._y1=NaN,this._point=0},lineEnd:function(){switch(this._point){case 3:cm(this,this._x1,this._y1);case 2:this._context.lineTo(this._x1,this._y1)}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break;case 1:this._point=2;break;case 2:this._point=3,this._context.lineTo((5*this._x0+this._x1)/6,(5*this._y0+this._y1)/6);default:cm(this,t,n)}this._x0=this._x1,this._x1=t,this._y0=this._y1,this._y1=n}};var lm=function(t){return new sm(t)};function hm(t){this._context=t}hm.prototype={areaStart:fm,areaEnd:fm,lineStart:function(){this._x0=this._x1=this._x2=this._x3=this._x4=this._y0=this._y1=this._y2=this._y3=this._y4=NaN,this._point=0},lineEnd:function(){switch(this._point){case 1:this._context.moveTo(this._x2,this._y2),this._context.closePath();break;case 2:this._context.moveTo((this._x2+2*this._x3)/3,(this._y2+2*this._y3)/3),this._context.lineTo((this._x3+2*this._x2)/3,(this._y3+2*this._y2)/3),this._context.closePath();break;case 3:this.point(this._x2,this._y2),this.point(this._x3,this._y3),this.point(this._x4,this._y4)}},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1,this._x2=t,this._y2=n;break;case 1:this._point=2,this._x3=t,this._y3=n;break;case 2:this._point=3,this._x4=t,this._y4=n,this._context.moveTo((this._x0+4*this._x1+t)/6,(this._y0+4*this._y1+n)/6);break;default:cm(this,t,n)}this._x0=this._x1,this._x1=t,this._y0=this._y1,this._y1=n}};var dm=function(t){return new hm(t)};function pm(t){this._context=t}pm.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._y0=this._y1=NaN,this._point=0},lineEnd:function(){(this._line||0!==this._line&&3===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1;break;case 1:this._point=2;break;case 2:this._point=3;var e=(this._x0+4*this._x1+t)/6,r=(this._y0+4*this._y1+n)/6;this._line?this._context.lineTo(e,r):this._context.moveTo(e,r);break;case 3:this._point=4;default:cm(this,t,n)}this._x0=this._x1,this._x1=t,this._y0=this._y1,this._y1=n}};var vm=function(t){return new pm(t)};function gm(t,n){this._basis=new sm(t),this._beta=n}gm.prototype={lineStart:function(){this._x=[],this._y=[],this._basis.lineStart()},lineEnd:function(){var t=this._x,n=this._y,e=t.length-1;if(e>0)for(var r,i=t[0],u=n[0],o=t[e]-i,a=n[e]-u,f=-1;++f<=e;)r=f/e,this._basis.point(this._beta*t[f]+(1-this._beta)*(i+r*o),this._beta*n[f]+(1-this._beta)*(u+r*a));this._x=this._y=null,this._basis.lineEnd()},point:function(t,n){this._x.push(+t),this._y.push(+n)}};var ym=function t(n){function e(t){return 1===n?new sm(t):new gm(t,n)}return e.beta=function(n){return t(+n)},e}(.85);function _m(t,n,e){t._context.bezierCurveTo(t._x1+t._k*(t._x2-t._x0),t._y1+t._k*(t._y2-t._y0),t._x2+t._k*(t._x1-n),t._y2+t._k*(t._y1-e),t._x2,t._y2)}function bm(t,n){this._context=t,this._k=(1-n)/6}bm.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._point=0},lineEnd:function(){switch(this._point){case 2:this._context.lineTo(this._x2,this._y2);break;case 3:_m(this,this._x1,this._y1)}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break;case 1:this._point=2,this._x1=t,this._y1=n;break;case 2:this._point=3;default:_m(this,t,n)}this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=n}};var mm=function t(n){function e(t){return new bm(t,n)}return e.tension=function(n){return t(+n)},e}(0);function xm(t,n){this._context=t,this._k=(1-n)/6}xm.prototype={areaStart:fm,areaEnd:fm,lineStart:function(){this._x0=this._x1=this._x2=this._x3=this._x4=this._x5=this._y0=this._y1=this._y2=this._y3=this._y4=this._y5=NaN,this._point=0},lineEnd:function(){switch(this._point){case 1:this._context.moveTo(this._x3,this._y3),this._context.closePath();break;case 2:this._context.lineTo(this._x3,this._y3),this._context.closePath();break;case 3:this.point(this._x3,this._y3),this.point(this._x4,this._y4),this.point(this._x5,this._y5)}},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1,this._x3=t,this._y3=n;break;case 1:this._point=2,this._context.moveTo(this._x4=t,this._y4=n);break;case 2:this._point=3,this._x5=t,this._y5=n;break;default:_m(this,t,n)}this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=n}};var wm=function t(n){function e(t){return new xm(t,n)}return e.tension=function(n){return t(+n)},e}(0);function Mm(t,n){this._context=t,this._k=(1-n)/6}Mm.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._point=0},lineEnd:function(){(this._line||0!==this._line&&3===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1;break;case 1:this._point=2;break;case 2:this._point=3,this._line?this._context.lineTo(this._x2,this._y2):this._context.moveTo(this._x2,this._y2);break;case 3:this._point=4;default:_m(this,t,n)}this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=n}};var Am=function t(n){function e(t){return new Mm(t,n)}return e.tension=function(n){return t(+n)},e}(0);function Sm(t,n,e){var r=t._x1,i=t._y1,u=t._x2,o=t._y2;if(t._l01_a>ob){var a=2*t._l01_2a+3*t._l01_a*t._l12_a+t._l12_2a,f=3*t._l01_a*(t._l01_a+t._l12_a);r=(r*a-t._x0*t._l12_2a+t._x2*t._l01_2a)/f,i=(i*a-t._y0*t._l12_2a+t._y2*t._l01_2a)/f}if(t._l23_a>ob){var c=2*t._l23_2a+3*t._l23_a*t._l12_a+t._l12_2a,s=3*t._l23_a*(t._l23_a+t._l12_a);u=(u*c+t._x1*t._l23_2a-n*t._l12_2a)/s,o=(o*c+t._y1*t._l23_2a-e*t._l12_2a)/s}t._context.bezierCurveTo(r,i,u,o,t._x2,t._y2)}function Tm(t,n){this._context=t,this._alpha=n}Tm.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._l01_a=this._l12_a=this._l23_a=this._l01_2a=this._l12_2a=this._l23_2a=this._point=0},lineEnd:function(){switch(this._point){case 2:this._context.lineTo(this._x2,this._y2);break;case 3:this.point(this._x2,this._y2)}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){if(t=+t,n=+n,this._point){var e=this._x2-t,r=this._y2-n;this._l23_a=Math.sqrt(this._l23_2a=Math.pow(e*e+r*r,this._alpha))}switch(this._point){case 0:this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break;case 1:this._point=2;break;case 2:this._point=3;default:Sm(this,t,n)}this._l01_a=this._l12_a,this._l12_a=this._l23_a,this._l01_2a=this._l12_2a,this._l12_2a=this._l23_2a,this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=n}};var Nm=function t(n){function e(t){return n?new Tm(t,n):new bm(t,0)}return e.alpha=function(n){return t(+n)},e}(.5);function km(t,n){this._context=t,this._alpha=n}km.prototype={areaStart:fm,areaEnd:fm,lineStart:function(){this._x0=this._x1=this._x2=this._x3=this._x4=this._x5=this._y0=this._y1=this._y2=this._y3=this._y4=this._y5=NaN,this._l01_a=this._l12_a=this._l23_a=this._l01_2a=this._l12_2a=this._l23_2a=this._point=0},lineEnd:function(){switch(this._point){case 1:this._context.moveTo(this._x3,this._y3),this._context.closePath();break;case 2:this._context.lineTo(this._x3,this._y3),this._context.closePath();break;case 3:this.point(this._x3,this._y3),this.point(this._x4,this._y4),this.point(this._x5,this._y5)}},point:function(t,n){if(t=+t,n=+n,this._point){var e=this._x2-t,r=this._y2-n;this._l23_a=Math.sqrt(this._l23_2a=Math.pow(e*e+r*r,this._alpha))}switch(this._point){case 0:this._point=1,this._x3=t,this._y3=n;break;case 1:this._point=2,this._context.moveTo(this._x4=t,this._y4=n);break;case 2:this._point=3,this._x5=t,this._y5=n;break;default:Sm(this,t,n)}this._l01_a=this._l12_a,this._l12_a=this._l23_a,this._l01_2a=this._l12_2a,this._l12_2a=this._l23_2a,this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=n}};var Em=function t(n){function e(t){return n?new km(t,n):new xm(t,0)}return e.alpha=function(n){return t(+n)},e}(.5);function Cm(t,n){this._context=t,this._alpha=n}Cm.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._l01_a=this._l12_a=this._l23_a=this._l01_2a=this._l12_2a=this._l23_2a=this._point=0},lineEnd:function(){(this._line||0!==this._line&&3===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){if(t=+t,n=+n,this._point){var e=this._x2-t,r=this._y2-n;this._l23_a=Math.sqrt(this._l23_2a=Math.pow(e*e+r*r,this._alpha))}switch(this._point){case 0:this._point=1;break;case 1:this._point=2;break;case 2:this._point=3,this._line?this._context.lineTo(this._x2,this._y2):this._context.moveTo(this._x2,this._y2);break;case 3:this._point=4;default:Sm(this,t,n)}this._l01_a=this._l12_a,this._l12_a=this._l23_a,this._l01_2a=this._l12_2a,this._l12_2a=this._l23_2a,this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=n}};var Pm=function t(n){function e(t){return n?new Cm(t,n):new Mm(t,0)}return e.alpha=function(n){return t(+n)},e}(.5);function zm(t){this._context=t}zm.prototype={areaStart:fm,areaEnd:fm,lineStart:function(){this._point=0},lineEnd:function(){this._point&&this._context.closePath()},point:function(t,n){t=+t,n=+n,this._point?this._context.lineTo(t,n):(this._point=1,this._context.moveTo(t,n))}};var Rm=function(t){return new zm(t)};function Dm(t){return t<0?-1:1}function Lm(t,n,e){var r=t._x1-t._x0,i=n-t._x1,u=(t._y1-t._y0)/(r||i<0&&-0),o=(e-t._y1)/(i||r<0&&-0),a=(u*i+o*r)/(r+i);return(Dm(u)+Dm(o))*Math.min(Math.abs(u),Math.abs(o),.5*Math.abs(a))||0}function qm(t,n){var e=t._x1-t._x0;return e?(3*(t._y1-t._y0)/e-n)/2:n}function Um(t,n,e){var r=t._x0,i=t._y0,u=t._x1,o=t._y1,a=(u-r)/3;t._context.bezierCurveTo(r+a,i+a*n,u-a,o-a*e,u,o)}function Om(t){this._context=t}function Im(t){this._context=new Ym(t)}function Ym(t){this._context=t}function Bm(t){return new Om(t)}function Fm(t){return new Im(t)}function jm(t){this._context=t}function Hm(t){var n,e,r=t.length-1,i=new Array(r),u=new Array(r),o=new Array(r);for(i[0]=0,u[0]=2,o[0]=t[0]+2*t[1],n=1;n<r-1;++n)i[n]=1,u[n]=4,o[n]=4*t[n]+2*t[n+1];for(i[r-1]=2,u[r-1]=7,o[r-1]=8*t[r-1]+t[r],n=1;n<r;++n)e=i[n]/u[n-1],u[n]-=e,o[n]-=e*o[n-1];for(i[r-1]=o[r-1]/u[r-1],n=r-2;n>=0;--n)i[n]=(o[n]-i[n+1])/u[n];for(u[r-1]=(t[r]+i[r-1])/2,n=0;n<r-1;++n)u[n]=2*t[n+1]-i[n+1];return[i,u]}Om.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._y0=this._y1=this._t0=NaN,this._point=0},lineEnd:function(){switch(this._point){case 2:this._context.lineTo(this._x1,this._y1);break;case 3:Um(this,this._t0,qm(this,this._t0))}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){var e=NaN;if(n=+n,(t=+t)!==this._x1||n!==this._y1){switch(this._point){case 0:this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break;case 1:this._point=2;break;case 2:this._point=3,Um(this,qm(this,e=Lm(this,t,n)),e);break;default:Um(this,this._t0,e=Lm(this,t,n))}this._x0=this._x1,this._x1=t,this._y0=this._y1,this._y1=n,this._t0=e}}},(Im.prototype=Object.create(Om.prototype)).point=function(t,n){Om.prototype.point.call(this,n,t)},Ym.prototype={moveTo:function(t,n){this._context.moveTo(n,t)},closePath:function(){this._context.closePath()},lineTo:function(t,n){this._context.lineTo(n,t)},bezierCurveTo:function(t,n,e,r,i,u){this._context.bezierCurveTo(n,t,r,e,u,i)}},jm.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x=[],this._y=[]},lineEnd:function(){var t=this._x,n=this._y,e=t.length;if(e)if(this._line?this._context.lineTo(t[0],n[0]):this._context.moveTo(t[0],n[0]),2===e)this._context.lineTo(t[1],n[1]);else for(var r=Hm(t),i=Hm(n),u=0,o=1;o<e;++u,++o)this._context.bezierCurveTo(r[0][u],i[0][u],r[1][u],i[1][u],t[o],n[o]);(this._line||0!==this._line&&1===e)&&this._context.closePath(),this._line=1-this._line,this._x=this._y=null},point:function(t,n){this._x.push(+t),this._y.push(+n)}};var Xm=function(t){return new jm(t)};function Gm(t,n){this._context=t,this._t=n}Gm.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x=this._y=NaN,this._point=0},lineEnd:function(){0<this._t&&this._t<1&&2===this._point&&this._context.lineTo(this._x,this._y),(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line>=0&&(this._t=1-this._t,this._line=1-this._line)},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break;case 1:this._point=2;default:if(this._t<=0)this._context.lineTo(this._x,n),this._context.lineTo(t,n);else{var e=this._x*(1-this._t)+t*this._t;this._context.lineTo(e,this._y),this._context.lineTo(e,n)}}this._x=t,this._y=n}};var Vm=function(t){return new Gm(t,.5)};function $m(t){return new Gm(t,0)}function Wm(t){return new Gm(t,1)}var Zm=function(t,n){if((i=t.length)>1)for(var e,r,i,u=1,o=t[n[0]],a=o.length;u<i;++u)for(r=o,o=t[n[u]],e=0;e<a;++e)o[e][1]+=o[e][0]=isNaN(r[e][1])?r[e][0]:r[e][1]},Qm=function(t){for(var n=t.length,e=new Array(n);--n>=0;)e[n]=n;return e};function Jm(t,n){return t[n]}var Km=function(){var t=J_([]),n=Qm,e=Zm,r=Jm;function i(i){var u,o,a=t.apply(this,arguments),f=i.length,c=a.length,s=new Array(c);for(u=0;u<c;++u){for(var l,h=a[u],d=s[u]=new Array(f),p=0;p<f;++p)d[p]=l=[0,+r(i[p],h,p,i)],l.data=i[p];d.key=h}for(u=0,o=n(s);u<c;++u)s[o[u]].index=u;return e(s,o),s}return i.keys=function(n){return arguments.length?(t=\"function\"==typeof n?n:J_(Db.call(n)),i):t},i.value=function(t){return arguments.length?(r=\"function\"==typeof t?t:J_(+t),i):r},i.order=function(t){return arguments.length?(n=null==t?Qm:\"function\"==typeof t?t:J_(Db.call(t)),i):n},i.offset=function(t){return arguments.length?(e=null==t?Zm:t,i):e},i},tx=function(t,n){if((r=t.length)>0){for(var e,r,i,u=0,o=t[0].length;u<o;++u){for(i=e=0;e<r;++e)i+=t[e][u][1]||0;if(i)for(e=0;e<r;++e)t[e][u][1]/=i}Zm(t,n)}},nx=function(t,n){if((a=t.length)>1)for(var e,r,i,u,o,a,f=0,c=t[n[0]].length;f<c;++f)for(u=o=0,e=0;e<a;++e)(i=(r=t[n[e]][f])[1]-r[0])>=0?(r[0]=u,r[1]=u+=i):i<0?(r[1]=o,r[0]=o+=i):r[0]=u},ex=function(t,n){if((e=t.length)>0){for(var e,r=0,i=t[n[0]],u=i.length;r<u;++r){for(var o=0,a=0;o<e;++o)a+=t[o][r][1]||0;i[r][1]+=i[r][0]=-a/2}Zm(t,n)}},rx=function(t,n){if((i=t.length)>0&&(r=(e=t[n[0]]).length)>0){for(var e,r,i,u=0,o=1;o<r;++o){for(var a=0,f=0,c=0;a<i;++a){for(var s=t[n[a]],l=s[o][1]||0,h=(l-(s[o-1][1]||0))/2,d=0;d<a;++d){var p=t[n[d]];h+=(p[o][1]||0)-(p[o-1][1]||0)}f+=l,c+=h*l}e[o-1][1]+=e[o-1][0]=u,f&&(u-=c/f)}e[o-1][1]+=e[o-1][0]=u,Zm(t,n)}},ix=function(t){var n=t.map(ux);return Qm(t).sort(function(t,e){return n[t]-n[e]})};function ux(t){for(var n,e=0,r=-1,i=t.length;++r<i;)(n=+t[r][1])&&(e+=n);return e}var ox=function(t){return ix(t).reverse()},ax=function(t){var n,e,r=t.length,i=t.map(ux),u=Qm(t).sort(function(t,n){return i[n]-i[t]}),o=0,a=0,f=[],c=[];for(n=0;n<r;++n)e=u[n],o<a?(o+=i[e],f.push(e)):(a+=i[e],c.push(e));return c.reverse().concat(f)},fx=function(t){return Qm(t).reverse()},cx=function(t){return function(){return t}};function sx(t){return t[0]}function lx(t){return t[1]}function hx(){this._=null}function dx(t){t.U=t.C=t.L=t.R=t.P=t.N=null}function px(t,n){var e=n,r=n.R,i=e.U;i?i.L===e?i.L=r:i.R=r:t._=r,r.U=i,e.U=r,e.R=r.L,e.R&&(e.R.U=e),r.L=e}function vx(t,n){var e=n,r=n.L,i=e.U;i?i.L===e?i.L=r:i.R=r:t._=r,r.U=i,e.U=r,e.L=r.R,e.L&&(e.L.U=e),r.R=e}function gx(t){for(;t.L;)t=t.L;return t}hx.prototype={constructor:hx,insert:function(t,n){var e,r,i;if(t){if(n.P=t,n.N=t.N,t.N&&(t.N.P=n),t.N=n,t.R){for(t=t.R;t.L;)t=t.L;t.L=n}else t.R=n;e=t}else this._?(t=gx(this._),n.P=null,n.N=t,t.P=t.L=n,e=t):(n.P=n.N=null,this._=n,e=null);for(n.L=n.R=null,n.U=e,n.C=!0,t=n;e&&e.C;)e===(r=e.U).L?(i=r.R)&&i.C?(e.C=i.C=!1,r.C=!0,t=r):(t===e.R&&(px(this,e),e=(t=e).U),e.C=!1,r.C=!0,vx(this,r)):(i=r.L)&&i.C?(e.C=i.C=!1,r.C=!0,t=r):(t===e.L&&(vx(this,e),e=(t=e).U),e.C=!1,r.C=!0,px(this,r)),e=t.U;this._.C=!1},remove:function(t){t.N&&(t.N.P=t.P),t.P&&(t.P.N=t.N),t.N=t.P=null;var n,e,r,i=t.U,u=t.L,o=t.R;if(e=u?o?gx(o):u:o,i?i.L===t?i.L=e:i.R=e:this._=e,u&&o?(r=e.C,e.C=t.C,e.L=u,u.U=e,e!==o?(i=e.U,e.U=t.U,t=e.R,i.L=t,e.R=o,o.U=e):(e.U=i,i=e,t=e.R)):(r=t.C,t=e),t&&(t.U=i),!r)if(t&&t.C)t.C=!1;else{do{if(t===this._)break;if(t===i.L){if((n=i.R).C&&(n.C=!1,i.C=!0,px(this,i),n=i.R),n.L&&n.L.C||n.R&&n.R.C){n.R&&n.R.C||(n.L.C=!1,n.C=!0,vx(this,n),n=i.R),n.C=i.C,i.C=n.R.C=!1,px(this,i),t=this._;break}}else if((n=i.L).C&&(n.C=!1,i.C=!0,vx(this,i),n=i.L),n.L&&n.L.C||n.R&&n.R.C){n.L&&n.L.C||(n.R.C=!1,n.C=!0,px(this,n),n=i.L),n.C=i.C,i.C=n.L.C=!1,vx(this,i),t=this._;break}n.C=!0,t=i,i=i.U}while(!t.C);t&&(t.C=!1)}}};var yx=hx;function _x(t,n,e,r){var i=[null,null],u=Yx.push(i)-1;return i.left=t,i.right=n,e&&mx(i,t,n,e),r&&mx(i,n,t,r),Ox[t.index].halfedges.push(u),Ox[n.index].halfedges.push(u),i}function bx(t,n,e){var r=[n,e];return r.left=t,r}function mx(t,n,e,r){t[0]||t[1]?t.left===e?t[1]=r:t[0]=r:(t[0]=r,t.left=n,t.right=e)}function xx(t,n,e,r,i){var u,o=t[0],a=t[1],f=o[0],c=o[1],s=0,l=1,h=a[0]-f,d=a[1]-c;if(u=n-f,h||!(u>0)){if(u/=h,h<0){if(u<s)return;u<l&&(l=u)}else if(h>0){if(u>l)return;u>s&&(s=u)}if(u=r-f,h||!(u<0)){if(u/=h,h<0){if(u>l)return;u>s&&(s=u)}else if(h>0){if(u<s)return;u<l&&(l=u)}if(u=e-c,d||!(u>0)){if(u/=d,d<0){if(u<s)return;u<l&&(l=u)}else if(d>0){if(u>l)return;u>s&&(s=u)}if(u=i-c,d||!(u<0)){if(u/=d,d<0){if(u>l)return;u>s&&(s=u)}else if(d>0){if(u<s)return;u<l&&(l=u)}return!(s>0||l<1)||(s>0&&(t[0]=[f+s*h,c+s*d]),l<1&&(t[1]=[f+l*h,c+l*d]),!0)}}}}}function wx(t,n,e,r,i){var u=t[1];if(u)return!0;var o,a,f=t[0],c=t.left,s=t.right,l=c[0],h=c[1],d=s[0],p=s[1],v=(l+d)/2,g=(h+p)/2;if(p===h){if(v<n||v>=r)return;if(l>d){if(f){if(f[1]>=i)return}else f=[v,e];u=[v,i]}else{if(f){if(f[1]<e)return}else f=[v,i];u=[v,e]}}else if(a=g-(o=(l-d)/(p-h))*v,o<-1||o>1)if(l>d){if(f){if(f[1]>=i)return}else f=[(e-a)/o,e];u=[(i-a)/o,i]}else{if(f){if(f[1]<e)return}else f=[(i-a)/o,i];u=[(e-a)/o,e]}else if(h<p){if(f){if(f[0]>=r)return}else f=[n,o*n+a];u=[r,o*r+a]}else{if(f){if(f[0]<n)return}else f=[r,o*r+a];u=[n,o*n+a]}return t[0]=f,t[1]=u,!0}function Mx(t,n){var e=t.site,r=n.left,i=n.right;return e===i&&(i=r,r=e),i?Math.atan2(i[1]-r[1],i[0]-r[0]):(e===r?(r=n[1],i=n[0]):(r=n[0],i=n[1]),Math.atan2(r[0]-i[0],i[1]-r[1]))}function Ax(t,n){return n[+(n.left!==t.site)]}function Sx(t,n){return n[+(n.left===t.site)]}var Tx,Nx=[];function kx(t){var n=t.P,e=t.N;if(n&&e){var r=n.site,i=t.site,u=e.site;if(r!==u){var o=i[0],a=i[1],f=r[0]-o,c=r[1]-a,s=u[0]-o,l=u[1]-a,h=2*(f*l-c*s);if(!(h>=-Fx)){var d=f*f+c*c,p=s*s+l*l,v=(l*d-c*p)/h,g=(f*p-s*d)/h,y=Nx.pop()||new function(){dx(this),this.x=this.y=this.arc=this.site=this.cy=null};y.arc=t,y.site=i,y.x=v+o,y.y=(y.cy=g+a)+Math.sqrt(v*v+g*g),t.circle=y;for(var _=null,b=Ix._;b;)if(y.y<b.y||y.y===b.y&&y.x<=b.x){if(!b.L){_=b.P;break}b=b.L}else{if(!b.R){_=b;break}b=b.R}Ix.insert(_,y),_||(Tx=y)}}}}function Ex(t){var n=t.circle;n&&(n.P||(Tx=n.N),Ix.remove(n),Nx.push(n),dx(n),t.circle=null)}var Cx=[];function Px(t){var n=Cx.pop()||new function(){dx(this),this.edge=this.site=this.circle=null};return n.site=t,n}function zx(t){Ex(t),Ux.remove(t),Cx.push(t),dx(t)}function Rx(t){var n=t.circle,e=n.x,r=n.cy,i=[e,r],u=t.P,o=t.N,a=[t];zx(t);for(var f=u;f.circle&&Math.abs(e-f.circle.x)<Bx&&Math.abs(r-f.circle.cy)<Bx;)u=f.P,a.unshift(f),zx(f),f=u;a.unshift(f),Ex(f);for(var c=o;c.circle&&Math.abs(e-c.circle.x)<Bx&&Math.abs(r-c.circle.cy)<Bx;)o=c.N,a.push(c),zx(c),c=o;a.push(c),Ex(c);var s,l=a.length;for(s=1;s<l;++s)c=a[s],f=a[s-1],mx(c.edge,f.site,c.site,i);f=a[0],(c=a[l-1]).edge=_x(f.site,c.site,null,i),kx(f),kx(c)}function Dx(t){for(var n,e,r,i,u=t[0],o=t[1],a=Ux._;a;)if((r=Lx(a,o)-u)>Bx)a=a.L;else{if(!((i=u-qx(a,o))>Bx)){r>-Bx?(n=a.P,e=a):i>-Bx?(n=a,e=a.N):n=e=a;break}if(!a.R){n=a;break}a=a.R}!function(t){Ox[t.index]={site:t,halfedges:[]}}(t);var f=Px(t);if(Ux.insert(n,f),n||e){if(n===e)return Ex(n),e=Px(n.site),Ux.insert(f,e),f.edge=e.edge=_x(n.site,f.site),kx(n),void kx(e);if(e){Ex(n),Ex(e);var c=n.site,s=c[0],l=c[1],h=t[0]-s,d=t[1]-l,p=e.site,v=p[0]-s,g=p[1]-l,y=2*(h*g-d*v),_=h*h+d*d,b=v*v+g*g,m=[(g*_-d*b)/y+s,(h*b-v*_)/y+l];mx(e.edge,c,p,m),f.edge=_x(c,t,null,m),e.edge=_x(t,p,null,m),kx(n),kx(e)}else f.edge=_x(n.site,f.site)}}function Lx(t,n){var e=t.site,r=e[0],i=e[1],u=i-n;if(!u)return r;var o=t.P;if(!o)return-1/0;var a=(e=o.site)[0],f=e[1],c=f-n;if(!c)return a;var s=a-r,l=1/u-1/c,h=s/c;return l?(-h+Math.sqrt(h*h-2*l*(s*s/(-2*c)-f+c/2+i-u/2)))/l+r:(r+a)/2}function qx(t,n){var e=t.N;if(e)return Lx(e,n);var r=t.site;return r[1]===n?r[0]:1/0}var Ux,Ox,Ix,Yx,Bx=1e-6,Fx=1e-12;function jx(t,n){return n[1]-t[1]||n[0]-t[0]}function Hx(t,n){var e,r,i,u=t.sort(jx).pop();for(Yx=[],Ox=new Array(t.length),Ux=new yx,Ix=new yx;;)if(i=Tx,u&&(!i||u[1]<i.y||u[1]===i.y&&u[0]<i.x))u[0]===e&&u[1]===r||(Dx(u),e=u[0],r=u[1]),u=t.pop();else{if(!i)break;Rx(i.arc)}if(function(){for(var t,n,e,r,i=0,u=Ox.length;i<u;++i)if((t=Ox[i])&&(r=(n=t.halfedges).length)){var o=new Array(r),a=new Array(r);for(e=0;e<r;++e)o[e]=e,a[e]=Mx(t,Yx[n[e]]);for(o.sort(function(t,n){return a[n]-a[t]}),e=0;e<r;++e)a[e]=n[o[e]];for(e=0;e<r;++e)n[e]=a[e]}}(),n){var o=+n[0][0],a=+n[0][1],f=+n[1][0],c=+n[1][1];!function(t,n,e,r){for(var i,u=Yx.length;u--;)wx(i=Yx[u],t,n,e,r)&&xx(i,t,n,e,r)&&(Math.abs(i[0][0]-i[1][0])>Bx||Math.abs(i[0][1]-i[1][1])>Bx)||delete Yx[u]}(o,a,f,c),function(t,n,e,r){var i,u,o,a,f,c,s,l,h,d,p,v,g=Ox.length,y=!0;for(i=0;i<g;++i)if(u=Ox[i]){for(o=u.site,a=(f=u.halfedges).length;a--;)Yx[f[a]]||f.splice(a,1);for(a=0,c=f.length;a<c;)p=(d=Sx(u,Yx[f[a]]))[0],v=d[1],l=(s=Ax(u,Yx[f[++a%c]]))[0],h=s[1],(Math.abs(p-l)>Bx||Math.abs(v-h)>Bx)&&(f.splice(a,0,Yx.push(bx(o,d,Math.abs(p-t)<Bx&&r-v>Bx?[t,Math.abs(l-t)<Bx?h:r]:Math.abs(v-r)<Bx&&e-p>Bx?[Math.abs(h-r)<Bx?l:e,r]:Math.abs(p-e)<Bx&&v-n>Bx?[e,Math.abs(l-e)<Bx?h:n]:Math.abs(v-n)<Bx&&p-t>Bx?[Math.abs(h-n)<Bx?l:t,n]:null))-1),++c);c&&(y=!1)}if(y){var _,b,m,x=1/0;for(i=0,y=null;i<g;++i)(u=Ox[i])&&(m=(_=(o=u.site)[0]-t)*_+(b=o[1]-n)*b)<x&&(x=m,y=u);if(y){var w=[t,n],M=[t,r],A=[e,r],S=[e,n];y.halfedges.push(Yx.push(bx(o=y.site,w,M))-1,Yx.push(bx(o,M,A))-1,Yx.push(bx(o,A,S))-1,Yx.push(bx(o,S,w))-1)}}for(i=0;i<g;++i)(u=Ox[i])&&(u.halfedges.length||delete Ox[i])}(o,a,f,c)}this.edges=Yx,this.cells=Ox,Ux=Ix=Yx=Ox=null}Hx.prototype={constructor:Hx,polygons:function(){var t=this.edges;return this.cells.map(function(n){var e=n.halfedges.map(function(e){return Ax(n,t[e])});return e.data=n.site.data,e})},triangles:function(){var t=[],n=this.edges;return this.cells.forEach(function(e,r){if(u=(i=e.halfedges).length)for(var i,u,o,a,f,c,s=e.site,l=-1,h=n[i[u-1]],d=h.left===s?h.right:h.left;++l<u;)o=d,d=(h=n[i[l]]).left===s?h.right:h.left,o&&d&&r<o.index&&r<d.index&&(f=o,c=d,((a=s)[0]-c[0])*(f[1]-a[1])-(a[0]-f[0])*(c[1]-a[1])<0)&&t.push([s.data,o.data,d.data])}),t},links:function(){return this.edges.filter(function(t){return t.right}).map(function(t){return{source:t.left.data,target:t.right.data}})},find:function(t,n,e){for(var r,i,u=this,o=u._found||0,a=u.cells.length;!(i=u.cells[o]);)if(++o>=a)return null;var f=t-i.site[0],c=n-i.site[1],s=f*f+c*c;do{i=u.cells[r=o],o=null,i.halfedges.forEach(function(e){var r=u.edges[e],a=r.left;if(a!==i.site&&a||(a=r.right)){var f=t-a[0],c=n-a[1],l=f*f+c*c;l<s&&(s=l,o=a.index)}})}while(null!==o);return u._found=r,null==e||s<=e*e?i.site:null}};var Xx=function(){var t=sx,n=lx,e=null;function r(r){return new Hx(r.map(function(e,i){var u=[Math.round(t(e,i,r)/Bx)*Bx,Math.round(n(e,i,r)/Bx)*Bx];return u.index=i,u.data=e,u}),e)}return r.polygons=function(t){return r(t).polygons()},r.links=function(t){return r(t).links()},r.triangles=function(t){return r(t).triangles()},r.x=function(n){return arguments.length?(t=\"function\"==typeof n?n:cx(+n),r):t},r.y=function(t){return arguments.length?(n=\"function\"==typeof t?t:cx(+t),r):n},r.extent=function(t){return arguments.length?(e=null==t?null:[[+t[0][0],+t[0][1]],[+t[1][0],+t[1][1]]],r):e&&[[e[0][0],e[0][1]],[e[1][0],e[1][1]]]},r.size=function(t){return arguments.length?(e=null==t?null:[[0,0],[+t[0],+t[1]]],r):e&&[e[1][0]-e[0][0],e[1][1]-e[0][1]]},r},Gx=function(t){return function(){return t}};function Vx(t,n,e){this.k=t,this.x=n,this.y=e}Vx.prototype={constructor:Vx,scale:function(t){return 1===t?this:new Vx(this.k*t,this.x,this.y)},translate:function(t,n){return 0===t&0===n?this:new Vx(this.k,this.x+this.k*t,this.y+this.k*n)},apply:function(t){return[t[0]*this.k+this.x,t[1]*this.k+this.y]},applyX:function(t){return t*this.k+this.x},applyY:function(t){return t*this.k+this.y},invert:function(t){return[(t[0]-this.x)/this.k,(t[1]-this.y)/this.k]},invertX:function(t){return(t-this.x)/this.k},invertY:function(t){return(t-this.y)/this.k},rescaleX:function(t){return t.copy().domain(t.range().map(this.invertX,this).map(t.invert,t))},rescaleY:function(t){return t.copy().domain(t.range().map(this.invertY,this).map(t.invert,t))},toString:function(){return\"translate(\"+this.x+\",\"+this.y+\") scale(\"+this.k+\")\"}};var $x=new Vx(1,0,0);function Wx(t){return t.__zoom||$x}function Zx(){Vt.stopImmediatePropagation()}Wx.prototype=Vx.prototype;var Qx=function(){Vt.preventDefault(),Vt.stopImmediatePropagation()};function Jx(){return!Vt.button}function Kx(){var t,n,e=this;return e instanceof SVGElement?(t=(e=e.ownerSVGElement||e).width.baseVal.value,n=e.height.baseVal.value):(t=e.clientWidth,n=e.clientHeight),[[0,0],[t,n]]}function tw(){return this.__zoom||$x}function nw(){return-Vt.deltaY*(Vt.deltaMode?120:1)/500}function ew(){return\"ontouchstart\"in this}function rw(t,n,e){var r=t.invertX(n[0][0])-e[0][0],i=t.invertX(n[1][0])-e[1][0],u=t.invertY(n[0][1])-e[0][1],o=t.invertY(n[1][1])-e[1][1];return t.translate(i>r?(r+i)/2:Math.min(0,r)||Math.max(0,i),o>u?(u+o)/2:Math.min(0,u)||Math.max(0,o))}var iw=function(){var t,n,e=Jx,r=Kx,i=rw,u=nw,o=ew,a=[0,1/0],f=[[-1/0,-1/0],[1/0,1/0]],c=250,s=rr,l=[],h=ht(\"start\",\"zoom\",\"end\"),d=500,p=150,v=0;function g(t){t.property(\"__zoom\",tw).on(\"wheel.zoom\",M).on(\"mousedown.zoom\",A).on(\"dblclick.zoom\",S).filter(o).on(\"touchstart.zoom\",T).on(\"touchmove.zoom\",N).on(\"touchend.zoom touchcancel.zoom\",k).style(\"touch-action\",\"none\").style(\"-webkit-tap-highlight-color\",\"rgba(0,0,0,0)\")}function y(t,n){return(n=Math.max(a[0],Math.min(a[1],n)))===t.k?t:new Vx(n,t.x,t.y)}function _(t,n,e){var r=n[0]-e[0]*t.k,i=n[1]-e[1]*t.k;return r===t.x&&i===t.y?t:new Vx(t.k,r,i)}function b(t){return[(+t[0][0]+ +t[1][0])/2,(+t[0][1]+ +t[1][1])/2]}function m(t,n,e){t.on(\"start.zoom\",function(){x(this,arguments).start()}).on(\"interrupt.zoom end.zoom\",function(){x(this,arguments).end()}).tween(\"zoom\",function(){var t=arguments,i=x(this,t),u=r.apply(this,t),o=e||b(u),a=Math.max(u[1][0]-u[0][0],u[1][1]-u[0][1]),f=this.__zoom,c=\"function\"==typeof n?n.apply(this,t):n,l=s(f.invert(o).concat(a/f.k),c.invert(o).concat(a/c.k));return function(t){if(1===t)t=c;else{var n=l(t),e=a/n[2];t=new Vx(e,o[0]-n[0]*e,o[1]-n[1]*e)}i.zoom(null,t)}})}function x(t,n){for(var e,r=0,i=l.length;r<i;++r)if((e=l[r]).that===t)return e;return new w(t,n)}function w(t,n){this.that=t,this.args=n,this.index=-1,this.active=0,this.extent=r.apply(t,n)}function M(){if(e.apply(this,arguments)){var t=x(this,arguments),n=this.__zoom,r=Math.max(a[0],Math.min(a[1],n.k*Math.pow(2,u.apply(this,arguments)))),o=hn(this);if(t.wheel)t.mouse[0][0]===o[0]&&t.mouse[0][1]===o[1]||(t.mouse[1]=n.invert(t.mouse[0]=o)),clearTimeout(t.wheel);else{if(n.k===r)return;t.mouse=[o,n.invert(o)],Wr(this),t.start()}Qx(),t.wheel=setTimeout(function(){t.wheel=null,t.end()},p),t.zoom(\"mouse\",i(_(y(n,r),t.mouse[0],t.mouse[1]),t.extent,f))}}function A(){if(!n&&e.apply(this,arguments)){var t=x(this,arguments),r=un(Vt.view).on(\"mousemove.zoom\",function(){if(Qx(),!t.moved){var n=Vt.clientX-o,e=Vt.clientY-a;t.moved=n*n+e*e>v}t.zoom(\"mouse\",i(_(t.that.__zoom,t.mouse[0]=hn(t.that),t.mouse[1]),t.extent,f))},!0).on(\"mouseup.zoom\",function(){r.on(\"mousemove.zoom mouseup.zoom\",null),bn(Vt.view,t.moved),Qx(),t.end()},!0),u=hn(this),o=Vt.clientX,a=Vt.clientY;_n(Vt.view),Zx(),t.mouse=[u,this.__zoom.invert(u)],Wr(this),t.start()}}function S(){if(e.apply(this,arguments)){var t=this.__zoom,n=hn(this),u=t.invert(n),o=t.k*(Vt.shiftKey?.5:2),a=i(_(y(t,o),n,u),r.apply(this,arguments),f);Qx(),c>0?un(this).transition().duration(c).call(m,a,n):un(this).call(g.transform,a)}}function T(){if(e.apply(this,arguments)){var n,r,i,u,o=x(this,arguments),a=Vt.changedTouches,f=a.length;for(Zx(),r=0;r<f;++r)i=a[r],u=[u=pn(this,a,i.identifier),this.__zoom.invert(u),i.identifier],o.touch0?o.touch1||(o.touch1=u):(o.touch0=u,n=!0);if(t&&(t=clearTimeout(t),!o.touch1))return o.end(),void((u=un(this).on(\"dblclick.zoom\"))&&u.apply(this,arguments));n&&(t=setTimeout(function(){t=null},d),Wr(this),o.start())}}function N(){var n,e,r,u,o=x(this,arguments),a=Vt.changedTouches,c=a.length;for(Qx(),t&&(t=clearTimeout(t)),n=0;n<c;++n)e=a[n],r=pn(this,a,e.identifier),o.touch0&&o.touch0[2]===e.identifier?o.touch0[0]=r:o.touch1&&o.touch1[2]===e.identifier&&(o.touch1[0]=r);if(e=o.that.__zoom,o.touch1){var s=o.touch0[0],l=o.touch0[1],h=o.touch1[0],d=o.touch1[1],p=(p=h[0]-s[0])*p+(p=h[1]-s[1])*p,v=(v=d[0]-l[0])*v+(v=d[1]-l[1])*v;e=y(e,Math.sqrt(p/v)),r=[(s[0]+h[0])/2,(s[1]+h[1])/2],u=[(l[0]+d[0])/2,(l[1]+d[1])/2]}else{if(!o.touch0)return;r=o.touch0[0],u=o.touch0[1]}o.zoom(\"touch\",i(_(e,r,u),o.extent,f))}function k(){var t,e,r=x(this,arguments),i=Vt.changedTouches,u=i.length;for(Zx(),n&&clearTimeout(n),n=setTimeout(function(){n=null},d),t=0;t<u;++t)e=i[t],r.touch0&&r.touch0[2]===e.identifier?delete r.touch0:r.touch1&&r.touch1[2]===e.identifier&&delete r.touch1;r.touch1&&!r.touch0&&(r.touch0=r.touch1,delete r.touch1),r.touch0?r.touch0[1]=this.__zoom.invert(r.touch0[0]):r.end()}return g.transform=function(t,n){var e=t.selection?t.selection():t;e.property(\"__zoom\",tw),t!==e?m(t,n):e.interrupt().each(function(){x(this,arguments).start().zoom(null,\"function\"==typeof n?n.apply(this,arguments):n).end()})},g.scaleBy=function(t,n){g.scaleTo(t,function(){return this.__zoom.k*(\"function\"==typeof n?n.apply(this,arguments):n)})},g.scaleTo=function(t,n){g.transform(t,function(){var t=r.apply(this,arguments),e=this.__zoom,u=b(t),o=e.invert(u),a=\"function\"==typeof n?n.apply(this,arguments):n;return i(_(y(e,a),u,o),t,f)})},g.translateBy=function(t,n,e){g.transform(t,function(){return i(this.__zoom.translate(\"function\"==typeof n?n.apply(this,arguments):n,\"function\"==typeof e?e.apply(this,arguments):e),r.apply(this,arguments),f)})},g.translateTo=function(t,n,e){g.transform(t,function(){var t=r.apply(this,arguments),u=this.__zoom,o=b(t);return i($x.translate(o[0],o[1]).scale(u.k).translate(\"function\"==typeof n?-n.apply(this,arguments):-n,\"function\"==typeof e?-e.apply(this,arguments):-e),t,f)})},w.prototype={start:function(){return 1==++this.active&&(this.index=l.push(this)-1,this.emit(\"start\")),this},zoom:function(t,n){return this.mouse&&\"mouse\"!==t&&(this.mouse[1]=n.invert(this.mouse[0])),this.touch0&&\"touch\"!==t&&(this.touch0[1]=n.invert(this.touch0[0])),this.touch1&&\"touch\"!==t&&(this.touch1[1]=n.invert(this.touch1[0])),this.that.__zoom=n,this.emit(\"zoom\"),this},end:function(){return 0==--this.active&&(l.splice(this.index,1),this.index=-1,this.emit(\"end\")),this},emit:function(t){Jt(new function(t,n,e){this.target=t,this.type=n,this.transform=e}(g,t,this.that.__zoom),h.apply,h,[t,this.that,this.args])}},g.wheelDelta=function(t){return arguments.length?(u=\"function\"==typeof t?t:Gx(+t),g):u},g.filter=function(t){return arguments.length?(e=\"function\"==typeof t?t:Gx(!!t),g):e},g.touchable=function(t){return arguments.length?(o=\"function\"==typeof t?t:Gx(!!t),g):o},g.extent=function(t){return arguments.length?(r=\"function\"==typeof t?t:Gx([[+t[0][0],+t[0][1]],[+t[1][0],+t[1][1]]]),g):r},g.scaleExtent=function(t){return arguments.length?(a[0]=+t[0],a[1]=+t[1],g):[a[0],a[1]]},g.translateExtent=function(t){return arguments.length?(f[0][0]=+t[0][0],f[1][0]=+t[1][0],f[0][1]=+t[0][1],f[1][1]=+t[1][1],g):[[f[0][0],f[0][1]],[f[1][0],f[1][1]]]},g.constrain=function(t){return arguments.length?(i=t,g):i},g.duration=function(t){return arguments.length?(c=+t,g):c},g.interpolate=function(t){return arguments.length?(s=t,g):s},g.on=function(){var t=h.on.apply(h,arguments);return t===h?g:t},g.clickDistance=function(t){return arguments.length?(v=(t=+t)*t,g):Math.sqrt(v)},g};e.d(n,\"version\",function(){return\"5.0.0\"}),e.d(n,\"bisect\",function(){return f}),e.d(n,\"bisectRight\",function(){return o}),e.d(n,\"bisectLeft\",function(){return a}),e.d(n,\"ascending\",function(){return r}),e.d(n,\"bisector\",function(){return i}),e.d(n,\"cross\",function(){return l}),e.d(n,\"descending\",function(){return h}),e.d(n,\"deviation\",function(){return v}),e.d(n,\"extent\",function(){return g}),e.d(n,\"histogram\",function(){return C}),e.d(n,\"thresholdFreedmanDiaconis\",function(){return z}),e.d(n,\"thresholdScott\",function(){return R}),e.d(n,\"thresholdSturges\",function(){return E}),e.d(n,\"max\",function(){return D}),e.d(n,\"mean\",function(){return L}),e.d(n,\"median\",function(){return q}),e.d(n,\"merge\",function(){return U}),e.d(n,\"min\",function(){return O}),e.d(n,\"pairs\",function(){return c}),e.d(n,\"permute\",function(){return I}),e.d(n,\"quantile\",function(){return P}),e.d(n,\"range\",function(){return w}),e.d(n,\"scan\",function(){return Y}),e.d(n,\"shuffle\",function(){return B}),e.d(n,\"sum\",function(){return F}),e.d(n,\"ticks\",function(){return T}),e.d(n,\"tickIncrement\",function(){return N}),e.d(n,\"tickStep\",function(){return k}),e.d(n,\"transpose\",function(){return j}),e.d(n,\"variance\",function(){return p}),e.d(n,\"zip\",function(){return X}),e.d(n,\"axisTop\",function(){return rt}),e.d(n,\"axisRight\",function(){return it}),e.d(n,\"axisBottom\",function(){return ut}),e.d(n,\"axisLeft\",function(){return ot}),e.d(n,\"brush\",function(){return bu}),e.d(n,\"brushX\",function(){return yu}),e.d(n,\"brushY\",function(){return _u}),e.d(n,\"brushSelection\",function(){return gu}),e.d(n,\"chord\",function(){return Nu}),e.d(n,\"ribbon\",function(){return Bu}),e.d(n,\"nest\",function(){return Xu}),e.d(n,\"set\",function(){return Ku}),e.d(n,\"map\",function(){return Hu}),e.d(n,\"keys\",function(){return to}),e.d(n,\"values\",function(){return no}),e.d(n,\"entries\",function(){return eo}),e.d(n,\"color\",function(){return Fn}),e.d(n,\"rgb\",function(){return Gn}),e.d(n,\"hsl\",function(){return Wn}),e.d(n,\"lab\",function(){return fe}),e.d(n,\"hcl\",function(){return pe}),e.d(n,\"cubehelix\",function(){return we}),e.d(n,\"contours\",function(){return ho}),e.d(n,\"contourDensity\",function(){return _o}),e.d(n,\"dispatch\",function(){return ht}),e.d(n,\"drag\",function(){return Tn}),e.d(n,\"dragDisable\",function(){return _n}),e.d(n,\"dragEnable\",function(){return bn}),e.d(n,\"dsvFormat\",function(){return So}),e.d(n,\"csvParse\",function(){return No}),e.d(n,\"csvParseRows\",function(){return ko}),e.d(n,\"csvFormat\",function(){return Eo}),e.d(n,\"csvFormatRows\",function(){return Co}),e.d(n,\"tsvParse\",function(){return zo}),e.d(n,\"tsvParseRows\",function(){return Ro}),e.d(n,\"tsvFormat\",function(){return Do}),e.d(n,\"tsvFormatRows\",function(){return Lo}),e.d(n,\"easeLinear\",function(){return ii}),e.d(n,\"easeQuad\",function(){return ai}),e.d(n,\"easeQuadIn\",function(){return ui}),e.d(n,\"easeQuadOut\",function(){return oi}),e.d(n,\"easeQuadInOut\",function(){return ai}),e.d(n,\"easeCubic\",function(){return si}),e.d(n,\"easeCubicIn\",function(){return fi}),e.d(n,\"easeCubicOut\",function(){return ci}),e.d(n,\"easeCubicInOut\",function(){return si}),e.d(n,\"easePoly\",function(){return di}),e.d(n,\"easePolyIn\",function(){return li}),e.d(n,\"easePolyOut\",function(){return hi}),e.d(n,\"easePolyInOut\",function(){return di}),e.d(n,\"easeSin\",function(){return _i}),e.d(n,\"easeSinIn\",function(){return gi}),e.d(n,\"easeSinOut\",function(){return yi}),e.d(n,\"easeSinInOut\",function(){return _i}),e.d(n,\"easeExp\",function(){return xi}),e.d(n,\"easeExpIn\",function(){return bi}),e.d(n,\"easeExpOut\",function(){return mi}),e.d(n,\"easeExpInOut\",function(){return xi}),e.d(n,\"easeCircle\",function(){return Ai}),e.d(n,\"easeCircleIn\",function(){return wi}),e.d(n,\"easeCircleOut\",function(){return Mi}),e.d(n,\"easeCircleInOut\",function(){return Ai}),e.d(n,\"easeBounce\",function(){return qi}),e.d(n,\"easeBounceIn\",function(){return Li}),e.d(n,\"easeBounceOut\",function(){return qi}),e.d(n,\"easeBounceInOut\",function(){return Ui}),e.d(n,\"easeBack\",function(){return Yi}),e.d(n,\"easeBackIn\",function(){return Oi}),e.d(n,\"easeBackOut\",function(){return Ii}),e.d(n,\"easeBackInOut\",function(){return Yi}),e.d(n,\"easeElastic\",function(){return ji}),e.d(n,\"easeElasticIn\",function(){return Fi}),e.d(n,\"easeElasticOut\",function(){return ji}),e.d(n,\"easeElasticInOut\",function(){return Hi}),e.d(n,\"blob\",function(){return Uo}),e.d(n,\"buffer\",function(){return Io}),e.d(n,\"dsv\",function(){return jo}),e.d(n,\"csv\",function(){return Ho}),e.d(n,\"tsv\",function(){return Xo}),e.d(n,\"image\",function(){return Go}),e.d(n,\"json\",function(){return $o}),e.d(n,\"text\",function(){return Bo}),e.d(n,\"xml\",function(){return Zo}),e.d(n,\"html\",function(){return Qo}),e.d(n,\"svg\",function(){return Jo}),e.d(n,\"forceCenter\",function(){return Ko}),e.d(n,\"forceCollide\",function(){return ha}),e.d(n,\"forceLink\",function(){return va}),e.d(n,\"forceManyBody\",function(){return wa}),e.d(n,\"forceRadial\",function(){return Ma}),e.d(n,\"forceSimulation\",function(){return xa}),e.d(n,\"forceX\",function(){return Aa}),e.d(n,\"forceY\",function(){return Sa}),e.d(n,\"formatDefaultLocale\",function(){return Ia}),e.d(n,\"format\",function(){return Da}),e.d(n,\"formatPrefix\",function(){return La}),e.d(n,\"formatLocale\",function(){return Oa}),e.d(n,\"formatSpecifier\",function(){return Pa}),e.d(n,\"precisionFixed\",function(){return Ya}),e.d(n,\"precisionPrefix\",function(){return Ba}),e.d(n,\"precisionRound\",function(){return Fa}),e.d(n,\"geoArea\",function(){return Lf}),e.d(n,\"geoBounds\",function(){return Nc}),e.d(n,\"geoCentroid\",function(){return Ic}),e.d(n,\"geoCircle\",function(){return Zc}),e.d(n,\"geoClipAntimeridian\",function(){return as}),e.d(n,\"geoClipCircle\",function(){return fs}),e.d(n,\"geoClipExtent\",function(){return gs}),e.d(n,\"geoClipRectangle\",function(){return hs}),e.d(n,\"geoContains\",function(){return Ds}),e.d(n,\"geoDistance\",function(){return Ss}),e.d(n,\"geoGraticule\",function(){return Us}),e.d(n,\"geoGraticule10\",function(){return Os}),e.d(n,\"geoInterpolate\",function(){return js}),e.d(n,\"geoLength\",function(){return ws}),e.d(n,\"geoPath\",function(){return Bl}),e.d(n,\"geoAlbers\",function(){return oh}),e.d(n,\"geoAlbersUsa\",function(){return ah}),e.d(n,\"geoAzimuthalEqualArea\",function(){return lh}),e.d(n,\"geoAzimuthalEqualAreaRaw\",function(){return sh}),e.d(n,\"geoAzimuthalEquidistant\",function(){return dh}),e.d(n,\"geoAzimuthalEquidistantRaw\",function(){return hh}),e.d(n,\"geoConicConformal\",function(){return bh}),e.d(n,\"geoConicConformalRaw\",function(){return _h}),e.d(n,\"geoConicEqualArea\",function(){return uh}),e.d(n,\"geoConicEqualAreaRaw\",function(){return ih}),e.d(n,\"geoConicEquidistant\",function(){return Mh}),e.d(n,\"geoConicEquidistantRaw\",function(){return wh}),e.d(n,\"geoEquirectangular\",function(){return xh}),e.d(n,\"geoEquirectangularRaw\",function(){return mh}),e.d(n,\"geoGnomonic\",function(){return Sh}),e.d(n,\"geoGnomonicRaw\",function(){return Ah}),e.d(n,\"geoIdentity\",function(){return Nh}),e.d(n,\"geoProjection\",function(){return nh}),e.d(n,\"geoProjectionMutator\",function(){return eh}),e.d(n,\"geoMercator\",function(){return vh}),e.d(n,\"geoMercatorRaw\",function(){return ph}),e.d(n,\"geoNaturalEarth1\",function(){return Eh}),e.d(n,\"geoNaturalEarth1Raw\",function(){return kh}),e.d(n,\"geoOrthographic\",function(){return Ph}),e.d(n,\"geoOrthographicRaw\",function(){return Ch}),e.d(n,\"geoStereographic\",function(){return Rh}),e.d(n,\"geoStereographicRaw\",function(){return zh}),e.d(n,\"geoTransverseMercator\",function(){return Lh}),e.d(n,\"geoTransverseMercatorRaw\",function(){return Dh}),e.d(n,\"geoRotation\",function(){return Vc}),e.d(n,\"geoStream\",function(){return Nf}),e.d(n,\"geoTransform\",function(){return Fl}),e.d(n,\"cluster\",function(){return Ih}),e.d(n,\"hierarchy\",function(){return Bh}),e.d(n,\"pack\",function(){return ld}),e.d(n,\"packSiblings\",function(){return od}),e.d(n,\"packEnclose\",function(){return Vh}),e.d(n,\"partition\",function(){return yd}),e.d(n,\"stratify\",function(){return Md}),e.d(n,\"tree\",function(){return Cd}),e.d(n,\"treemap\",function(){return Ld}),e.d(n,\"treemapBinary\",function(){return qd}),e.d(n,\"treemapDice\",function(){return gd}),e.d(n,\"treemapSlice\",function(){return Pd}),e.d(n,\"treemapSliceDice\",function(){return Ud}),e.d(n,\"treemapSquarify\",function(){return Dd}),e.d(n,\"treemapResquarify\",function(){return Od}),e.d(n,\"interpolate\",function(){return Ve}),e.d(n,\"interpolateArray\",function(){return qe}),e.d(n,\"interpolateBasis\",function(){return Se}),e.d(n,\"interpolateBasisClosed\",function(){return Te}),e.d(n,\"interpolateDate\",function(){return Ue}),e.d(n,\"interpolateNumber\",function(){return Oe}),e.d(n,\"interpolateObject\",function(){return Ie}),e.d(n,\"interpolateRound\",function(){return $e}),e.d(n,\"interpolateString\",function(){return Ge}),e.d(n,\"interpolateTransformCss\",function(){return Ke}),e.d(n,\"interpolateTransformSvg\",function(){return tr}),e.d(n,\"interpolateZoom\",function(){return rr}),e.d(n,\"interpolateRgb\",function(){return ze}),e.d(n,\"interpolateRgbBasis\",function(){return De}),e.d(n,\"interpolateRgbBasisClosed\",function(){return Le}),e.d(n,\"interpolateHsl\",function(){return ur}),e.d(n,\"interpolateHslLong\",function(){return or}),e.d(n,\"interpolateLab\",function(){return ar}),e.d(n,\"interpolateHcl\",function(){return cr}),e.d(n,\"interpolateHclLong\",function(){return sr}),e.d(n,\"interpolateCubehelix\",function(){return pr}),e.d(n,\"interpolateCubehelixLong\",function(){return vr}),e.d(n,\"quantize\",function(){return gr}),e.d(n,\"path\",function(){return Lu}),e.d(n,\"polygonArea\",function(){return Id}),e.d(n,\"polygonCentroid\",function(){return Yd}),e.d(n,\"polygonHull\",function(){return Hd}),e.d(n,\"polygonContains\",function(){return Xd}),e.d(n,\"polygonLength\",function(){return Gd}),e.d(n,\"quadtree\",function(){return oa}),e.d(n,\"randomUniform\",function(){return $d}),e.d(n,\"randomNormal\",function(){return Wd}),e.d(n,\"randomLogNormal\",function(){return Zd}),e.d(n,\"randomBates\",function(){return Jd}),e.d(n,\"randomIrwinHall\",function(){return Qd}),e.d(n,\"randomExponential\",function(){return Kd}),e.d(n,\"scaleBand\",function(){return up}),e.d(n,\"scalePoint\",function(){return op}),e.d(n,\"scaleIdentity\",function(){return _p}),e.d(n,\"scaleLinear\",function(){return yp}),e.d(n,\"scaleLog\",function(){return Tp}),e.d(n,\"scaleOrdinal\",function(){return ip}),e.d(n,\"scaleImplicit\",function(){return rp}),e.d(n,\"scalePow\",function(){return kp}),e.d(n,\"scaleSqrt\",function(){return Ep}),e.d(n,\"scaleQuantile\",function(){return Cp}),e.d(n,\"scaleQuantize\",function(){return Pp}),e.d(n,\"scaleThreshold\",function(){return zp}),e.d(n,\"scaleTime\",function(){return ky}),e.d(n,\"scaleUtc\",function(){return Ey}),e.d(n,\"scaleSequential\",function(){return Cy}),e.d(n,\"schemeCategory10\",function(){return zy}),e.d(n,\"schemeAccent\",function(){return Ry}),e.d(n,\"schemeDark2\",function(){return Dy}),e.d(n,\"schemePaired\",function(){return Ly}),e.d(n,\"schemePastel1\",function(){return qy}),e.d(n,\"schemePastel2\",function(){return Uy}),e.d(n,\"schemeSet1\",function(){return Oy}),e.d(n,\"schemeSet2\",function(){return Iy}),e.d(n,\"schemeSet3\",function(){return Yy}),e.d(n,\"interpolateBrBG\",function(){return jy}),e.d(n,\"schemeBrBG\",function(){return Fy}),e.d(n,\"interpolatePRGn\",function(){return Xy}),e.d(n,\"schemePRGn\",function(){return Hy}),e.d(n,\"interpolatePiYG\",function(){return Vy}),e.d(n,\"schemePiYG\",function(){return Gy}),e.d(n,\"interpolatePuOr\",function(){return Wy}),e.d(n,\"schemePuOr\",function(){return $y}),e.d(n,\"interpolateRdBu\",function(){return Qy}),e.d(n,\"schemeRdBu\",function(){return Zy}),e.d(n,\"interpolateRdGy\",function(){return Ky}),e.d(n,\"schemeRdGy\",function(){return Jy}),e.d(n,\"interpolateRdYlBu\",function(){return n_}),e.d(n,\"schemeRdYlBu\",function(){return t_}),e.d(n,\"interpolateRdYlGn\",function(){return r_}),e.d(n,\"schemeRdYlGn\",function(){return e_}),e.d(n,\"interpolateSpectral\",function(){return u_}),e.d(n,\"schemeSpectral\",function(){return i_}),e.d(n,\"interpolateBuGn\",function(){return a_}),e.d(n,\"schemeBuGn\",function(){return o_}),e.d(n,\"interpolateBuPu\",function(){return c_}),e.d(n,\"schemeBuPu\",function(){return f_}),e.d(n,\"interpolateGnBu\",function(){return l_}),e.d(n,\"schemeGnBu\",function(){return s_}),e.d(n,\"interpolateOrRd\",function(){return d_}),e.d(n,\"schemeOrRd\",function(){return h_}),e.d(n,\"interpolatePuBuGn\",function(){return v_}),e.d(n,\"schemePuBuGn\",function(){return p_}),e.d(n,\"interpolatePuBu\",function(){return y_}),e.d(n,\"schemePuBu\",function(){return g_}),e.d(n,\"interpolatePuRd\",function(){return b_}),e.d(n,\"schemePuRd\",function(){return __}),e.d(n,\"interpolateRdPu\",function(){return x_}),e.d(n,\"schemeRdPu\",function(){return m_}),e.d(n,\"interpolateYlGnBu\",function(){return M_}),e.d(n,\"schemeYlGnBu\",function(){return w_}),e.d(n,\"interpolateYlGn\",function(){return S_}),e.d(n,\"schemeYlGn\",function(){return A_}),e.d(n,\"interpolateYlOrBr\",function(){return N_}),e.d(n,\"schemeYlOrBr\",function(){return T_}),e.d(n,\"interpolateYlOrRd\",function(){return E_}),e.d(n,\"schemeYlOrRd\",function(){return k_}),e.d(n,\"interpolateBlues\",function(){return P_}),e.d(n,\"schemeBlues\",function(){return C_}),e.d(n,\"interpolateGreens\",function(){return R_}),e.d(n,\"schemeGreens\",function(){return z_}),e.d(n,\"interpolateGreys\",function(){return L_}),e.d(n,\"schemeGreys\",function(){return D_}),e.d(n,\"interpolatePurples\",function(){return U_}),e.d(n,\"schemePurples\",function(){return q_}),e.d(n,\"interpolateReds\",function(){return I_}),e.d(n,\"schemeReds\",function(){return O_}),e.d(n,\"interpolateOranges\",function(){return B_}),e.d(n,\"schemeOranges\",function(){return Y_}),e.d(n,\"interpolateCubehelixDefault\",function(){return F_}),e.d(n,\"interpolateRainbow\",function(){return G_}),e.d(n,\"interpolateWarm\",function(){return j_}),e.d(n,\"interpolateCool\",function(){return H_}),e.d(n,\"interpolateViridis\",function(){return $_}),e.d(n,\"interpolateMagma\",function(){return W_}),e.d(n,\"interpolateInferno\",function(){return Z_}),e.d(n,\"interpolatePlasma\",function(){return Q_}),e.d(n,\"create\",function(){return on}),e.d(n,\"creator\",function(){return gt}),e.d(n,\"local\",function(){return fn}),e.d(n,\"matcher\",function(){return At}),e.d(n,\"mouse\",function(){return hn}),e.d(n,\"namespace\",function(){return vt}),e.d(n,\"namespaces\",function(){return pt}),e.d(n,\"clientPoint\",function(){return ln}),e.d(n,\"select\",function(){return un}),e.d(n,\"selectAll\",function(){return dn}),e.d(n,\"selection\",function(){return rn}),e.d(n,\"selector\",function(){return _t}),e.d(n,\"selectorAll\",function(){return mt}),e.d(n,\"style\",function(){return zt}),e.d(n,\"touch\",function(){return pn}),e.d(n,\"touches\",function(){return vn}),e.d(n,\"window\",function(){return Pt}),e.d(n,\"event\",function(){return Vt}),e.d(n,\"customEvent\",function(){return Jt}),e.d(n,\"arc\",function(){return yb}),e.d(n,\"area\",function(){return Mb}),e.d(n,\"line\",function(){return wb}),e.d(n,\"pie\",function(){return Tb}),e.d(n,\"areaRadial\",function(){return zb}),e.d(n,\"radialArea\",function(){return zb}),e.d(n,\"lineRadial\",function(){return Pb}),e.d(n,\"radialLine\",function(){return Pb}),e.d(n,\"pointRadial\",function(){return Rb}),e.d(n,\"linkHorizontal\",function(){return Bb}),e.d(n,\"linkVertical\",function(){return Fb}),e.d(n,\"linkRadial\",function(){return jb}),e.d(n,\"symbol\",function(){return am}),e.d(n,\"symbols\",function(){return om}),e.d(n,\"symbolCircle\",function(){return Hb}),e.d(n,\"symbolCross\",function(){return Xb}),e.d(n,\"symbolDiamond\",function(){return $b}),e.d(n,\"symbolSquare\",function(){return Kb}),e.d(n,\"symbolStar\",function(){return Jb}),e.d(n,\"symbolTriangle\",function(){return nm}),e.d(n,\"symbolWye\",function(){return um}),e.d(n,\"curveBasisClosed\",function(){return dm}),e.d(n,\"curveBasisOpen\",function(){return vm}),e.d(n,\"curveBasis\",function(){return lm}),e.d(n,\"curveBundle\",function(){return ym}),e.d(n,\"curveCardinalClosed\",function(){return wm}),e.d(n,\"curveCardinalOpen\",function(){return Am}),e.d(n,\"curveCardinal\",function(){return mm}),e.d(n,\"curveCatmullRomClosed\",function(){return Em}),e.d(n,\"curveCatmullRomOpen\",function(){return Pm}),e.d(n,\"curveCatmullRom\",function(){return Nm}),e.d(n,\"curveLinearClosed\",function(){return Rm}),e.d(n,\"curveLinear\",function(){return bb}),e.d(n,\"curveMonotoneX\",function(){return Bm}),e.d(n,\"curveMonotoneY\",function(){return Fm}),e.d(n,\"curveNatural\",function(){return Xm}),e.d(n,\"curveStep\",function(){return Vm}),e.d(n,\"curveStepAfter\",function(){return Wm}),e.d(n,\"curveStepBefore\",function(){return $m}),e.d(n,\"stack\",function(){return Km}),e.d(n,\"stackOffsetExpand\",function(){return tx}),e.d(n,\"stackOffsetDiverging\",function(){return nx}),e.d(n,\"stackOffsetNone\",function(){return Zm}),e.d(n,\"stackOffsetSilhouette\",function(){return ex}),e.d(n,\"stackOffsetWiggle\",function(){return rx}),e.d(n,\"stackOrderAscending\",function(){return ix}),e.d(n,\"stackOrderDescending\",function(){return ox}),e.d(n,\"stackOrderInsideOut\",function(){return ax}),e.d(n,\"stackOrderNone\",function(){return Qm}),e.d(n,\"stackOrderReverse\",function(){return fx}),e.d(n,\"timeInterval\",function(){return Lp}),e.d(n,\"timeMillisecond\",function(){return Up}),e.d(n,\"timeMilliseconds\",function(){return Op}),e.d(n,\"utcMillisecond\",function(){return Up}),e.d(n,\"utcMilliseconds\",function(){return Op}),e.d(n,\"timeSecond\",function(){return Fp}),e.d(n,\"timeSeconds\",function(){return jp}),e.d(n,\"utcSecond\",function(){return Fp}),e.d(n,\"utcSeconds\",function(){return jp}),e.d(n,\"timeMinute\",function(){return Xp}),e.d(n,\"timeMinutes\",function(){return Gp}),e.d(n,\"timeHour\",function(){return $p}),e.d(n,\"timeHours\",function(){return Wp}),e.d(n,\"timeDay\",function(){return Qp}),e.d(n,\"timeDays\",function(){return Jp}),e.d(n,\"timeWeek\",function(){return tv}),e.d(n,\"timeWeeks\",function(){return av}),e.d(n,\"timeSunday\",function(){return tv}),e.d(n,\"timeSundays\",function(){return av}),e.d(n,\"timeMonday\",function(){return nv}),e.d(n,\"timeMondays\",function(){return fv}),e.d(n,\"timeTuesday\",function(){return ev}),e.d(n,\"timeTuesdays\",function(){return cv}),e.d(n,\"timeWednesday\",function(){return rv}),e.d(n,\"timeWednesdays\",function(){return sv}),e.d(n,\"timeThursday\",function(){return iv}),e.d(n,\"timeThursdays\",function(){return lv}),e.d(n,\"timeFriday\",function(){return uv}),e.d(n,\"timeFridays\",function(){return hv}),e.d(n,\"timeSaturday\",function(){return ov}),e.d(n,\"timeSaturdays\",function(){return dv}),e.d(n,\"timeMonth\",function(){return vv}),e.d(n,\"timeMonths\",function(){return gv}),e.d(n,\"timeYear\",function(){return _v}),e.d(n,\"timeYears\",function(){return bv}),e.d(n,\"utcMinute\",function(){return xv}),e.d(n,\"utcMinutes\",function(){return wv}),e.d(n,\"utcHour\",function(){return Av}),e.d(n,\"utcHours\",function(){return Sv}),e.d(n,\"utcDay\",function(){return Nv}),e.d(n,\"utcDays\",function(){return kv}),e.d(n,\"utcWeek\",function(){return Cv}),e.d(n,\"utcWeeks\",function(){return Uv}),e.d(n,\"utcSunday\",function(){return Cv}),e.d(n,\"utcSundays\",function(){return Uv}),e.d(n,\"utcMonday\",function(){return Pv}),e.d(n,\"utcMondays\",function(){return Ov}),e.d(n,\"utcTuesday\",function(){return zv}),e.d(n,\"utcTuesdays\",function(){return Iv}),e.d(n,\"utcWednesday\",function(){return Rv}),e.d(n,\"utcWednesdays\",function(){return Yv}),e.d(n,\"utcThursday\",function(){return Dv}),e.d(n,\"utcThursdays\",function(){return Bv}),e.d(n,\"utcFriday\",function(){return Lv}),e.d(n,\"utcFridays\",function(){return Fv}),e.d(n,\"utcSaturday\",function(){return qv}),e.d(n,\"utcSaturdays\",function(){return jv}),e.d(n,\"utcMonth\",function(){return Xv}),e.d(n,\"utcMonths\",function(){return Gv}),e.d(n,\"utcYear\",function(){return $v}),e.d(n,\"utcYears\",function(){return Wv}),e.d(n,\"timeFormatDefaultLocale\",function(){return vy}),e.d(n,\"timeFormat\",function(){return ng}),e.d(n,\"timeParse\",function(){return eg}),e.d(n,\"utcFormat\",function(){return rg}),e.d(n,\"utcParse\",function(){return ig}),e.d(n,\"timeFormatLocale\",function(){return Kv}),e.d(n,\"isoFormat\",function(){return gy}),e.d(n,\"isoParse\",function(){return yy}),e.d(n,\"now\",function(){return Tr}),e.d(n,\"timer\",function(){return Er}),e.d(n,\"timerFlush\",function(){return Cr}),e.d(n,\"timeout\",function(){return Dr}),e.d(n,\"interval\",function(){return Lr}),e.d(n,\"transition\",function(){return ni}),e.d(n,\"active\",function(){return $i}),e.d(n,\"interrupt\",function(){return Wr}),e.d(n,\"voronoi\",function(){return Xx}),e.d(n,\"zoom\",function(){return iw}),e.d(n,\"zoomTransform\",function(){return Wx}),e.d(n,\"zoomIdentity\",function(){return $x})}]);","extractedComments":[]}