{"map":"{\"version\":3,\"sources\":[\"webpack/bootstrap\",\"/Users/houda/Documents/WebstormProjects/egoNahr/dist/scripts/jsonConversion.js\",\"/Users/houda/Documents/WebstormProjects/egoNahr/dist/scripts/actorManagement.js\",\"/Users/houda/Documents/WebstormProjects/egoNahr/dist/scripts/main.js\"],\"names\":[\"installedModules\",\"__webpack_require__\",\"moduleId\",\"exports\",\"module\",\"i\",\"l\",\"modules\",\"call\",\"m\",\"c\",\"d\",\"name\",\"getter\",\"o\",\"Object\",\"defineProperty\",\"configurable\",\"enumerable\",\"get\",\"r\",\"value\",\"n\",\"__esModule\",\"object\",\"property\",\"prototype\",\"hasOwnProperty\",\"p\",\"s\",\"_exports\",\"NAME_LABEL\",\"MARRIAGE_LABEL\",\"BAPTISM_LABEL\",\"OFFSPRING_LABEL\",\"Node\",\"id\",\"fullName\",\"firstParent\",\"secondParent\",\"spouse\",\"offSpringList\",\"this\",\"ID\",\"includes\",\"isActor\",\"Tie\",\"source\",\"target\",\"tieType\",\"tieStartYear\",\"tieEndYear\",\"nodeList\",\"tieList\",\"parseJSON\",\"actorJSON\",\"actorFullName\",\"json\",\"element\",\"checkLabelExistence\",\"data\",\"text\",\"getFullNameFromJSON\",\"firstParentID\",\"parents\",\"firstParentName\",\"thisFirstParent\",\"pushActorToList\",\"getFirstParentFromJSON\",\"secondParentID\",\"secondParentName\",\"thisSecondParent\",\"getSecondParentFromJSON\",\"actorSpouse\",\"spouseID\",\"spouseName\",\"thisSpouse\",\"getSpouseID\",\"rawOffspringArray\",\"offsprings\",\"length\",\"thisChildID\",\"thisChild\",\"thisChildName\",\"push\",\"getOffspringList\",\"centralActor\",\"actor\",\"reciprocateRelationships\",\"label\",\"search\",\"listToPushTo\",\"filter\",\"e\",\"relativeIDToString\",\"relative\",\"nameKey\",\"myArray\",\"getActorData\",\"getJSON\",\"createParentsUnionNode\",\"nodes\",\"ties\",\"parentsMarriageNode\",\"myActorData\",\"http\",\"XMLHttpRequest\",\"params\",\"open\",\"setRequestHeader\",\"onreadystatechange\",\"readyState\",\"status\",\"JSON\",\"parse\",\"responseText\",\"send\",\"maxRecursiveDepth\",\"jsonConversion\",\"actors\",\"objects\",\"ActorNode\",\"depth\",\"treeDepth\",\"recursiveDepth\",\"assignOriginParentNodeToChild\",\"originParent\",\"pushTieToList\",\"tie\",\"index\",\"isEquivalent\",\"newDepth\",\"map\",\"x\",\"indexOf\",\"buildUnionNode\",\"actorSpouseID\",\"parentUnionNode\",\"a\",\"b\",\"aProps\",\"getOwnPropertyNames\",\"bProps\",\"propName\",\"getCentralActor\",\"thisGrandChild\",\"j\",\"buildNodeList\",\"centralNode\",\"finalActorList\",\"traverseGraph\",\"toUnionTie\",\"fromUnionTie\",\"thisNode\",\"thisTie\",\"actorID\",\"res\",\"split\",\"list\",\"assignTreeDepthsToUnionNodes\",\"console\",\"log\",\"correctCoupleTies\",\"arraySort\",\"arraySortByTwoColumns\",\"aSource\",\"bSource\",\"aTarget\",\"bTarget\",\"simulation\",\"actorManagement\",\"svg\",\"d3\",\"select\",\"width\",\"attr\",\"height\",\"scaleOrdinal\",\"schemeCategory20\",\"dragstarted\",\"event\",\"active\",\"alphaTarget\",\"restart\",\"fx\",\"fy\",\"y\",\"dragged\",\"dragended\",\"graph\",\"forceSimulation\",\"force\",\"forceLink\",\"distance\",\"strength\",\"forceManyBody\",\"forceCenter\",\"link\",\"append\",\"selectAll\",\"links\",\"enter\",\"node\",\"drag\",\"on\",\"drawGraph\"],\"mappings\":\"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\",\"sourcesContent\":[\" \\t// The module cache\\n \\tvar installedModules = {};\\n\\n \\t// The require function\\n \\tfunction __webpack_require__(moduleId) {\\n\\n \\t\\t// Check if module is in cache\\n \\t\\tif(installedModules[moduleId]) {\\n \\t\\t\\treturn installedModules[moduleId].exports;\\n \\t\\t}\\n \\t\\t// Create a new module (and put it into the cache)\\n \\t\\tvar module = installedModules[moduleId] = {\\n \\t\\t\\ti: moduleId,\\n \\t\\t\\tl: false,\\n \\t\\t\\texports: {}\\n \\t\\t};\\n\\n \\t\\t// Execute the module function\\n \\t\\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\\n\\n \\t\\t// Flag the module as loaded\\n \\t\\tmodule.l = true;\\n\\n \\t\\t// Return the exports of the module\\n \\t\\treturn module.exports;\\n \\t}\\n\\n\\n \\t// expose the modules object (__webpack_modules__)\\n \\t__webpack_require__.m = modules;\\n\\n \\t// expose the module cache\\n \\t__webpack_require__.c = installedModules;\\n\\n \\t// define getter function for harmony exports\\n \\t__webpack_require__.d = function(exports, name, getter) {\\n \\t\\tif(!__webpack_require__.o(exports, name)) {\\n \\t\\t\\tObject.defineProperty(exports, name, {\\n \\t\\t\\t\\tconfigurable: false,\\n \\t\\t\\t\\tenumerable: true,\\n \\t\\t\\t\\tget: getter\\n \\t\\t\\t});\\n \\t\\t}\\n \\t};\\n\\n \\t// define __esModule on exports\\n \\t__webpack_require__.r = function(exports) {\\n \\t\\tObject.defineProperty(exports, '__esModule', { value: true });\\n \\t};\\n\\n \\t// getDefaultExport function for compatibility with non-harmony modules\\n \\t__webpack_require__.n = function(module) {\\n \\t\\tvar getter = module && module.__esModule ?\\n \\t\\t\\tfunction getDefault() { return module['default']; } :\\n \\t\\t\\tfunction getModuleExports() { return module; };\\n \\t\\t__webpack_require__.d(getter, 'a', getter);\\n \\t\\treturn getter;\\n \\t};\\n\\n \\t// Object.prototype.hasOwnProperty.call\\n \\t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\\n\\n \\t// __webpack_public_path__\\n \\t__webpack_require__.p = \\\"\\\";\\n\\n\\n \\t// Load entry module and return exports\\n \\treturn __webpack_require__(__webpack_require__.s = 2);\\n\",\"\\\"use strict\\\";\\n\\nvar _exports = module.exports = {};\\n\\nvar NAME_LABEL = \\\"Name\\\";\\nvar MARRIAGE_LABEL = \\\"Marriage\\\";\\nvar BAPTISM_LABEL = \\\"Baptism\\\";\\nvar FUNERAL_LABEL = \\\"Funeral\\\";\\nvar OFFSPRING_LABEL = \\\"Offspring\\\";\\n\\nvar Node = function Node(id, fullName, firstParent, secondParent, spouse, offSpringList) {\\n    this.ID = \\\"\\\" + id;\\n    this.fullName = fullName;\\n    this.firstParent = firstParent;\\n    this.secondParent = secondParent;\\n    this.offSpringList = offSpringList;\\n    this.spouse = spouse;\\n    if (this.ID.includes(\\\"+\\\")) {\\n        this.isActor = false;\\n    } else this.isActor = true;\\n};\\n\\nvar Tie = function Tie(source, target, tieType, tieStartYear, tieEndYear) {\\n    this.source = source;\\n    this.target = target;\\n    this.tieType = tieType;\\n    this.tieStartYear = tieStartYear;\\n    this.tieEndYear = tieEndYear;\\n};\\n\\nvar nodeList = [];\\nvar tieList = [];\\n\\nfunction getJSON(id) {\\n    var myActorData;\\n    var http = new XMLHttpRequest();\\n    var url = \\\"https://projectcornelia.be/source_browser/public/router.php\\\";\\n    var params = \\\"q=\\\" + id + \\\"&s=ALL-SOURCES&w=search-by-option\\\";\\n\\n    // TODO: now synchronous call. to be fixed\\n    http.open(\\\"POST\\\", url, false);\\n\\n    //Send the proper header information along with the request\\n    http.setRequestHeader(\\\"Content-type\\\", \\\"application/x-www-form-urlencoded\\\");\\n\\n    http.onreadystatechange = function () {\\n        //Call a function when the state changes.\\n        if (http.readyState == 4 && http.status == 200) {\\n            myActorData = JSON.parse(http.responseText);\\n        }\\n    };\\n    http.send(params);\\n    return myActorData;\\n}\\n\\nfunction parseJSON(id, actorJSON) {\\n    var myActorData;\\n\\n    // TODO: convert to date object\\n\\n    var actorFullName = getFullNameFromJSON(actorJSON);\\n    if (!actorFullName) {\\n        return null;\\n    }\\n\\n    var firstParent = getFirstParentFromJSON(actorJSON);\\n    var secondParent = getSecondParentFromJSON(actorJSON);\\n\\n    // var firstGodParent = getFirstGodParentFromJSON(actorJSON);\\n    // var secondGodParent = getSecondGodParentFromJSON(actorJSON);\\n    //\\n    // var actorBaptismDate = getBaptismDate(actorJSON);\\n    // var actorBaptismPlace = getBaptismPlace(actorJSON);\\n    // var actorBaptismSource = getBaptismSource(actorJSON);\\n    //\\n    // var actorFuneralDate = getFuneralDate(actorJSON);\\n\\n    var actorSpouse = getSpouseID(actorJSON);\\n\\n    var offSpringList = getOffspringList(actorJSON);\\n\\n    var centralActor = new Node(id, actorFullName, firstParent, secondParent, actorSpouse, offSpringList);\\n\\n    reciprocateRelationships(centralActor);\\n\\n    // if (firstParent || secondParent) {\\n    //     createParentsUnionNode(centralActor, nodeList, tieList);\\n    // }\\n    //\\n    // if (offSpringList || actorSpouse) {\\n    //     createCentralActorUnionNode(centralActor, nodeList, tieList);\\n    // }\\n\\n\\n    pushActorToList(centralActor, nodeList);\\n\\n    return centralActor;\\n}\\n\\nfunction reciprocateRelationships(actor) {\\n    if (actor.spouse) {\\n        actor.spouse.spouse = actor;\\n    }\\n    if (actor.firstParent) {\\n        if (!actor.firstParent.offSpringList) actor.firstParent.offSpringList = [];\\n        actor.firstParent.offSpringList.push(actor);\\n    }\\n    if (actor.secondParent) {\\n        if (!actor.secondParent.offSpringList) actor.secondParent.offSpringList = [];\\n        actor.secondParent.offSpringList.push(actor);\\n    }\\n\\n    // if (actor.offSpringList[0]) {\\n    //     for (var i = 0; i < offSpringList.length; i++) {\\n    //         if (!actor.offSpringList[i].firstParent) {\\n    //             actor.offSpringList[i].firstParent = actor;\\n    //         }\\n    //         else if (actor.offSpringList[i].firstParent && !actor.offSpringList[i].secondParent && (actor.offSpringList[i].firstParent.ID != actor.ID)) {\\n    //             actor.offSpringList[i].secondParent = actor;\\n    //         }\\n    //     }\\n    // }\\n}\\n\\nfunction getFullNameFromJSON(json) {\\n    var element = checkLabelExistence(NAME_LABEL, json);\\n    if (!element || !element.data || !element.data[0] || !element.data[0][0]) {\\n        return null;\\n    }\\n\\n    var fullName = element.data[0][0].text;\\n    if (fullName) {\\n        return fullName;\\n    }\\n}\\n\\nfunction getFirstParentFromJSON(json) {\\n    var element = checkLabelExistence(BAPTISM_LABEL, json);\\n    if (!element) return null;\\n    var firstParentID = element.data.parents.data[0][\\\"query-value\\\"];\\n    var firstParentName = element.data.parents.data[0][\\\"query-text\\\"];\\n    if (firstParentID) {\\n        var thisFirstParent = new Node(firstParentID, firstParentName);\\n        pushActorToList(thisFirstParent, nodeList);\\n        return thisFirstParent;\\n    }\\n}\\n\\nfunction getSecondParentFromJSON(json) {\\n    var element = checkLabelExistence(BAPTISM_LABEL, json);\\n    if (!element) return null;\\n    var secondParentID = element.data.parents.data[2][\\\"query-value\\\"];\\n    var secondParentName = element.data.parents.data[2][\\\"query-text\\\"];\\n    if (secondParentID) {\\n        var thisSecondParent = new Node(secondParentID, secondParentName);\\n        pushActorToList(thisSecondParent, nodeList);\\n        return thisSecondParent;\\n    }\\n}\\n\\nfunction getFirstGodParentFromJSON(json) {\\n    var element = checkLabelExistence(BAPTISM_LABEL, json);\\n    if (!element) return null;\\n    var firstGodParentID = element.data.godparents.data[0][\\\"query-text\\\"];\\n    if (firstGodParentID) {\\n        return firstGodParentID;\\n    }\\n}\\n\\nfunction getSecondGodParentFromJSON(json) {\\n    var element = checkLabelExistence(BAPTISM_LABEL, json);\\n    if (!element) return null;\\n    var secondGodParentID = element.data.godparents.data[2][\\\"query-text\\\"];\\n    if (secondGodParentID) {\\n        return secondGodParentID;\\n    }\\n}\\n\\nfunction getBaptismPlace(json) {\\n    var element = checkLabelExistence(BAPTISM_LABEL, json);\\n    if (!element) return null;\\n\\n    var baptismPlace = element.value;\\n    if (baptismPlace) {\\n        return baptismPlace;\\n    }\\n}\\n\\nfunction getBaptismDate(json) {\\n    var element = checkLabelExistence(BAPTISM_LABEL, json);\\n    if (!element) return null;\\n\\n    var baptismDate = element.data.place.data[0].text;\\n    if (baptismDate) {\\n        return baptismDate;\\n    }\\n}\\n\\nfunction getBaptismSource(json) {\\n    var element = checkLabelExistence(BAPTISM_LABEL, json);\\n    if (!element) return null;\\n\\n    var baptismSource = element.data.source.data[0].text;\\n    if (baptismSource) {\\n        return baptismSource;\\n    }\\n}\\n\\nfunction getSpouseID(json) {\\n    var element = checkLabelExistence(MARRIAGE_LABEL, json);\\n    if (!element) return null;\\n    var spouseID = element.data[0].data.spouse.data[0][\\\"query-value\\\"];\\n    var spouseName = element.data[0].data.spouse.data[0][\\\"query-text\\\"];\\n\\n    if (spouseID) {\\n        var thisSpouse = new Node(spouseID, spouseName);\\n        pushActorToList(thisSpouse, nodeList);\\n        return thisSpouse;\\n    }\\n}\\n\\nfunction getFuneralDate(json) {\\n    var element = checkLabelExistence(FUNERAL_LABEL, json);\\n    if (!element) return null;\\n\\n    var funeralDate = element.value;\\n    if (funeralDate) {\\n        return funeralDate;\\n    }\\n}\\n\\nfunction getOffspringList(json) {\\n    var element = checkLabelExistence(OFFSPRING_LABEL, json);\\n    if (!element) return null;\\n\\n    var rawOffspringArray = element.data.offsprings.data;\\n\\n    if (rawOffspringArray) {\\n        var offSpringNameList = [];\\n        var offSpringList = [];\\n        for (var i = 0; i < rawOffspringArray.length; i++) {\\n            if (rawOffspringArray[i][\\\"query-type\\\"] === \\\"actor\\\") {\\n                var thisChildID = rawOffspringArray[i][\\\"query-value\\\"];\\n                var thisChild = new Node(thisChildID);\\n                if (rawOffspringArray[i + 2][\\\"query-type\\\"] === \\\"year\\\") {\\n                    var thisChildName = rawOffspringArray[i][\\\"query-text\\\"];\\n                    thisChild.fullName = thisChildName;\\n                }\\n                offSpringList.push(thisChild);\\n                pushActorToList(thisChild, nodeList);\\n            }\\n        }\\n        return offSpringList;\\n    }\\n}\\n\\nfunction getActorData(id) {\\n    var myActorJSON = _exports.getJSON(id);\\n    var myActorObject = parseJSON(id, myActorJSON);\\n\\n    return myActorObject;\\n}\\n\\nfunction checkLabelExistence(label, json) {\\n    var element = _exports.search(label, json);\\n    if (!element || !element.data) {\\n        return null;\\n    } else {\\n        return element;\\n    }\\n}\\n\\nfunction search(nameKey, myArray) {\\n    for (var i = 0; i < myArray.length; i++) {\\n        if (myArray[i].label === nameKey) {\\n            return myArray[i];\\n        }\\n    }\\n    return null;\\n}\\n\\nfunction pushActorToList(actor, listToPushTo) {\\n    var isActorInList = listToPushTo.filter(function (e) {\\n        return e.ID === actor.ID;\\n    });\\n    if (isActorInList.length === 0) {\\n\\n        listToPushTo.push(actor);\\n    } else {\\n        return;\\n    }\\n}\\n\\nfunction relativeIDToString(relative) {\\n    var relativeID = null;\\n    if (relative) relativeID = relative.ID;else relativeID = \\\"\\\";\\n    return relativeID;\\n}\\n\\nfunction createParentsUnionNode(actor, nodes, ties) {\\n    var firstParentToMarriageTie, secondParentToMarriageTie;\\n\\n    if (actor.firstParent || actor.secondParent) {\\n\\n        var firstParentID = relativeIDToString(actor.firstParent);\\n        var secondParentID = relativeIDToString(actor.secondParent);\\n\\n        var parentsMarriageNode = new Node(firstParentID + \\\"+\\\" + secondParentID);\\n        pushActorToList(parentsMarriageNode, nodes);\\n\\n        // if (firstParentID.length > 0) {\\n        //     firstParentToMarriageTie = new Tie(firstParentID, parentsMarriageNode.ID);\\n        // }\\n        // if (secondParentID.length > 0) {\\n        //     secondParentToMarriageTie = new Tie(secondParentID, parentsMarriageNode.ID);\\n        // }\\n\\n        var marriageToCentralActorTie = new Tie(parentsMarriageNode.ID, actor.ID);\\n    }\\n    // ties.push(firstParentToMarriageTie, secondParentToMarriageTie, marriageToCentralActorTie);\\n}\\n\\nfunction createCentralActorUnionNode(actor) {\\n\\n    var actorSpouseID = relativeIDToString(actor.spouse);\\n    var actorMarriageNode = new Node(actor.ID + \\\"+\\\" + actorSpouseID);\\n    pushActorToList(actorMarriageNode, nodeList);\\n    var actorToMarriageTie = new Tie(actor.ID, actorMarriageNode.ID);\\n    tieList.push(actorToMarriageTie);\\n\\n    if (actor.spouse) {\\n        var spouseToMarriageTie = new Tie(actor.spouse.ID, actorMarriageNode.ID);\\n        tieList.push(spouseToMarriageTie);\\n    }\\n\\n    if (actor.offSpringList) {\\n        for (var i = 0; i < actor.offSpringList.length; i++) {\\n            var marriageToOffspringTie = new Tie(actorMarriageNode.ID, actor.offSpringList[i].ID);\\n            tieList.push(marriageToOffspringTie);\\n        }\\n    }\\n}\\n\\n_exports.search = search;\\n_exports.checkLabelExistence = checkLabelExistence;\\n_exports.getActorData = getActorData;\\n_exports.createParentsUnionNode = createParentsUnionNode;\\n_exports.getJSON = getJSON;\\n_exports.Node = Node;\\n_exports.Tie = Tie;\\n_exports.nodeList = nodeList;\\n_exports.tieList = tieList;\\n\\n// export {exports};\\n//# sourceMappingURL=jsonConversion.js.map\",\"\\\"use strict\\\";\\n\\nvar _exports = module.exports = {};\\n\\nvar jsonConversion = require('./jsonConversion.js');\\n\\nvar data = {\\n    actors: [],\\n    ties: [],\\n    objects: []\\n};\\nvar maxRecursiveDepth;\\nvar listOfActors = [];\\nvar MARRIAGE_LABEL = \\\"Marriage\\\";\\nvar OFFSPRING_LABEL = \\\"Offspring\\\";\\n\\nvar ActorNode = function ActorNode(id, depth, treeDepth) {\\n    this.ID = \\\"\\\" + id;\\n    this.recursiveDepth = depth;\\n    this.treeDepth = treeDepth;\\n    if (this.ID.includes(\\\"+\\\")) {\\n        this.isActor = false;\\n    } else this.isActor = true;\\n};\\n\\nfunction getCentralActor(id) {\\n    var thisChild = {},\\n        thisGrandChild = {};\\n    var centralActor = jsonConversion.getActorData(id);\\n    if (centralActor.offSpringList) {\\n        for (var i = 0; i < centralActor.offSpringList.length; i++) {\\n            thisChild = jsonConversion.getActorData(centralActor.offSpringList[i].ID);\\n            assignOriginParentNodeToChild(thisChild, centralActor);\\n            if (thisChild.offSpringList) {\\n                for (var j = 0; j < thisChild.offSpringList.length; j++) {\\n                    thisGrandChild = jsonConversion.getActorData(thisChild.offSpringList[j].ID);\\n                    assignOriginParentNodeToChild(thisGrandChild, thisChild);\\n                    thisChild.offSpringList[j] = thisGrandChild;\\n                }\\n            }\\n            assignOriginParentNodeToChild(thisChild, centralActor);\\n            centralActor.offSpringList[i] = thisChild;\\n        }\\n    }\\n    return centralActor;\\n}\\n\\nfunction assignOriginParentNodeToChild(actor, originParent) {\\n    if (actor.firstParent.ID = originParent.ID) {\\n        actor.firstParent = originParent;\\n    } else if (actor.secondParent.ID = originParent.ID) {\\n        actor.secondParent = originParent;\\n    }\\n}\\n\\nfunction buildNodeList(actor) {\\n\\n    var recursiveDepth = 0;\\n    maxRecursiveDepth = 2;\\n\\n    var treeDepth = 0;\\n\\n    var centralNode = new ActorNode(actor.ID, recursiveDepth, treeDepth);\\n\\n    var finalActorList = traverseGraph(actor, data, recursiveDepth, treeDepth);\\n    pushActorToList(centralNode, data.actors, recursiveDepth);\\n    pushActorToList(actor, data.objects, recursiveDepth);\\n\\n    data.actors = assignTreeDepthsToUnionNodes(data.actors);\\n    correctCoupleTies(data);\\n    return finalActorList;\\n}\\n\\nfunction traverseGraph(actor, data, recursiveDepth, treeDepth) {\\n    if (recursiveDepth >= maxRecursiveDepth) {\\n        return data;\\n    }\\n    if (recursiveDepth < maxRecursiveDepth) {\\n        if (actor.offSpringList) {\\n            treeDepth++;\\n            var parentUnionNode = buildUnionNode(actor, recursiveDepth);\\n            for (var i = 0; i < actor.offSpringList.length; i++) {\\n                var thisChild = actor.offSpringList[i];\\n                var toUnionTie = new jsonConversion.Tie(actor.ID, parentUnionNode.ID, OFFSPRING_LABEL);\\n                var fromUnionTie = new jsonConversion.Tie(parentUnionNode.ID, thisChild.ID, OFFSPRING_LABEL);\\n\\n                toUnionTie = pushTieToList(toUnionTie, data.ties);\\n                fromUnionTie = pushTieToList(fromUnionTie, data.ties);\\n                recursiveDepth++;\\n                data = traverseGraph(thisChild, data, recursiveDepth, treeDepth);\\n\\n                var thisNode = new ActorNode(thisChild.ID);\\n                thisNode.recursiveDepth = recursiveDepth;\\n                thisNode.treeDepth = treeDepth;\\n\\n                thisNode = pushActorToList(thisNode, data.actors, recursiveDepth);\\n                thisChild = pushActorToList(thisChild, data.objects, recursiveDepth);\\n\\n                // listOfActors.push(thisChild);\\n                recursiveDepth--;\\n            }\\n            treeDepth--;\\n        }\\n    }\\n\\n    if (actor.spouse) {\\n        // no change to treeDepth because spouse is on same level\\n        var thisSpouse = actor.spouse;\\n        var thisTie = new jsonConversion.Tie(actor.ID, thisSpouse.ID, MARRIAGE_LABEL);\\n        thisTie = pushTieToList(thisTie, data.ties);\\n        recursiveDepth++;\\n        data = traverseGraph(thisSpouse, data, recursiveDepth, treeDepth);\\n        var thisNode = new ActorNode(thisSpouse.ID, recursiveDepth, treeDepth);\\n        thisNode.treeDepth = treeDepth;\\n        thisNode = pushActorToList(thisNode, data.actors, recursiveDepth);\\n        thisSpouse = pushActorToList(thisSpouse, data.objects, recursiveDepth);\\n\\n        recursiveDepth--;\\n    }\\n\\n    if (actor.firstParent) {\\n        treeDepth--;\\n        var parentUnionNode = buildUnionNode(actor.firstParent, recursiveDepth);\\n        var thisFirstParent = actor.firstParent;\\n        var toUnionTie = new jsonConversion.Tie(thisFirstParent.ID, parentUnionNode.ID, OFFSPRING_LABEL);\\n        var fromUnionTie = new jsonConversion.Tie(parentUnionNode.ID, actor.ID, OFFSPRING_LABEL);\\n        toUnionTie = pushTieToList(toUnionTie, data.ties);\\n        fromUnionTie = pushTieToList(fromUnionTie, data.ties);\\n        recursiveDepth++;\\n        data = traverseGraph(thisFirstParent, data, recursiveDepth, treeDepth);\\n        var thisNode = new ActorNode(thisFirstParent.ID, recursiveDepth, treeDepth);\\n        thisNode = pushActorToList(thisNode, data.actors, recursiveDepth);\\n        thisFirstParent = pushActorToList(thisFirstParent, data.objects, recursiveDepth);\\n        treeDepth++;\\n\\n        recursiveDepth--;\\n    }\\n\\n    if (actor.secondParent) {\\n        treeDepth--;\\n        var parentUnionNode = buildUnionNode(actor.secondParent, recursiveDepth);\\n        var thisSecondParent = actor.secondParent;\\n        var toUnionTie = new jsonConversion.Tie(thisSecondParent.ID, parentUnionNode.ID, OFFSPRING_LABEL);\\n        var fromUnionTie = new jsonConversion.Tie(parentUnionNode.ID, actor.ID, OFFSPRING_LABEL);\\n        toUnionTie = pushTieToList(toUnionTie, data.ties);\\n        fromUnionTie = pushTieToList(fromUnionTie, data.ties);\\n        recursiveDepth++;\\n        data = traverseGraph(thisSecondParent, data, recursiveDepth, treeDepth);\\n        var thisNode = new ActorNode(thisSecondParent.ID, recursiveDepth, treeDepth);\\n        thisNode.treeDepth = treeDepth;\\n        thisNode = pushActorToList(thisNode, data.actors, recursiveDepth);\\n        thisSecondParent = pushActorToList(thisSecondParent, data.objects, recursiveDepth);\\n        treeDepth++;\\n        recursiveDepth--;\\n    }\\n\\n    return data;\\n}\\n\\nfunction assignTreeDepthsToUnionNodes(nodeList) {\\n\\n    for (var i = 0; i < nodeList.length; i++) {\\n        if (!nodeList[i].isActor) {\\n            var actorID = nodeList[i].ID;\\n            // treeDepth = average depth of before+ and +after\\n            var res = actorID.split(\\\"+\\\");\\n            var firstParent = findActorNodeByID(res[0], nodeList);\\n            nodeList[i].treeDepth = firstParent.treeDepth + 0.5;\\n        }\\n    }\\n    return nodeList;\\n}\\n\\nfunction correctCoupleTies(data) {\\n    for (var i = 0; i < data.actors; i++) {\\n        console.log(data.actors[i]);\\n    }\\n    debugger;\\n}\\n\\nfunction pushTieToList(tie, listToPushTo) {\\n\\n    var index = -1;\\n    for (var i = 0; i < listToPushTo.length; i++) {\\n        if (isEquivalent(tie, listToPushTo[i])) {\\n            index = i;\\n            break;\\n        }\\n    }\\n\\n    if (index < 0) {\\n        listToPushTo.push(tie);\\n    } else return;\\n}\\n\\nfunction pushActorToList(actor, listToPushTo, newDepth) {\\n    var index = listToPushTo.map(function (x) {\\n        return x.ID;\\n    }).indexOf(actor.ID);\\n\\n    if (index < 0) {\\n        actor.recursiveDepth = newDepth;\\n        listToPushTo.push(actor);\\n    } else {\\n\\n        if (listToPushTo[index].recursiveDepth > newDepth) {\\n            listToPushTo[index].recursiveDepth = newDepth;\\n            return actor;\\n        } else if (listToPushTo[index].recursiveDepth < newDepth) {\\n            actor.recursiveDepth = listToPushTo[index].recursiveDepth;\\n            return actor;\\n        } else if (!listToPushTo[index].recursiveDepth) {\\n            listToPushTo[index].recursiveDepth = newDepth;\\n            return actor;\\n        }\\n    }\\n    return actor;\\n}\\n\\n// function buildUnionNode(parent, child) {\\n//     var thisUnionNode;\\n//     console.log(child)\\n//     // if (!actor.offSpringList[i].firstParent) {\\n//\\n//     // if parent\\n//     if (child.firstParent || child.secondParent) {\\n//         thisUnionNode = new ActorNode(child.firstParent.ID + \\\"x\\\" + child.secondParent.ID);\\n//     }\\n//     return thisUnionNode;\\n// }\\n\\nfunction buildUnionNode(actor, recursiveDepth) {\\n\\n    var actorSpouseID = \\\"\\\";\\n    if (actor.spouse) actorSpouseID = actor.spouse.ID;\\n    var parentUnionNode = new ActorNode(actor.ID + \\\"+\\\" + actorSpouseID);\\n    parentUnionNode = pushActorToList(parentUnionNode, data.actors, recursiveDepth + 0.5);\\n\\n    return parentUnionNode;\\n}\\n\\nfunction findActorNodeByID(id, list) {\\n\\n    var index = list.map(function (x) {\\n        return x.ID;\\n    }).indexOf(id);\\n\\n    return list[index];\\n}\\n\\nfunction arraySort(a, b) {\\n    return a.ID > b.ID ? 1 : b.ID > a.ID ? -1 : 0;\\n}\\n\\nfunction arraySortByTwoColumns(a, b) {\\n    var aSource = a.source;\\n    var bSource = b.source;\\n    var aTarget = a.target;\\n    var bTarget = b.target;\\n\\n    if (aSource == bSource) {\\n        return aTarget < bTarget ? -1 : aTarget > bTarget ? 1 : 0;\\n    } else {\\n        return aSource < bSource ? -1 : 1;\\n    }\\n};\\n\\nfunction isEquivalent(a, b) {\\n    var aProps = Object.getOwnPropertyNames(a);\\n    var bProps = Object.getOwnPropertyNames(b);\\n\\n    if (aProps.length != bProps.length) {\\n        return false;\\n    }\\n\\n    for (var i = 0; i < aProps.length; i++) {\\n        var propName = aProps[i];\\n\\n        if (a[propName] !== b[propName]) {\\n            return false;\\n        }\\n    }\\n\\n    return true;\\n}\\n\\n_exports.getCentralActor = getCentralActor;\\n_exports.buildNodeList = buildNodeList;\\n_exports.arraySort = arraySort;\\n_exports.arraySortByTwoColumns = arraySortByTwoColumns;\\n_exports.data = data;\\n//# sourceMappingURL=actorManagement.js.map\",\"'use strict';\\n\\nvar jsonConversion = require('./jsonConversion.js');\\nvar actorManagement = require('./actorManagement.js');\\n\\n//  var ActorFinal = function (id, fullName, baptismDate, birthYear, birthPlace, deathYear, gender, occupation, firstAppearance, firstParent, secondParent, spouse, firstGodParent, secondGodParent, offSpringList) {\\n//     this.ID = id;\\n//     this.firstName = firstName;\\n//     this.lastName = lastName;\\n//     this.fullName = fullName;\\n//     this.baptismDate = baptismDate;\\n//     this.birthYear = birthYear;\\n//     this.birthPlace = birthPlace;\\n//     this.deathYear = deathYear;\\n//     this.gender = gender;\\n//     this.occupation = occupation;\\n//     this.firstAppearance = firstAppearance;\\n//     this.firstParent = firstParent;\\n//     this.secondParent = secondParent;\\n//     this.firstGodParent = firstGodParent;\\n//     this.secondGodParent = secondGodParent;\\n//     this.offSpringList = offSpringList;\\n//\\n//     this.spouse = spouse;\\n// };\\n\\n\\nvar simulation;\\nvar svg = d3.select(\\\"svg\\\"),\\n    width = +svg.attr(\\\"width\\\"),\\n    height = +svg.attr(\\\"height\\\");\\n\\nvar color = d3.scaleOrdinal(d3.schemeCategory20);\\n\\nfunction drawGraph(data) {\\n\\n    var graph = {};\\n    graph[\\\"nodes\\\"] = data.actors;\\n    graph[\\\"links\\\"] = data.ties;\\n\\n    // ORIGINAL -- GO BACK TO\\n\\n    // simulation = d3.forceSimulation()\\n    //     .force(\\\"link\\\", d3.forceLink().id(function (d) {\\n    //         return \\\"\\\" + d.ID;\\n    //     }))\\n    //     .force(\\\"charge\\\", d3.forceManyBody().strength(-400))\\n    //     .force(\\\"center\\\", d3.forceCenter(width / 2, height / 2))\\n    //     .force(\\\"distanceMin\\\", 100);\\n\\n\\n    simulation = d3.forceSimulation().force(\\\"link\\\", d3.forceLink().id(function (d) {\\n        return d.ID;\\n    }).distance(100).strength(1)).force(\\\"charge\\\", d3.forceManyBody().strength(-400)).force(\\\"center\\\", d3.forceCenter(width / 2, height / 2));\\n\\n    // graph.nodes.filter(function (d) {\\n    //     if (d.ID === 0) {\\n    //         d.fy = height / 2;\\n    //     }\\n    // });\\n\\n    var link = svg.append(\\\"g\\\").attr(\\\"class\\\", \\\"links\\\").selectAll(\\\"line\\\").data(graph.links).enter().append(\\\"line\\\");\\n\\n    var node = svg.append(\\\"g\\\").attr(\\\"class\\\", \\\"nodes\\\").selectAll(\\\"g\\\").data(graph.nodes).enter().append(\\\"g\\\").attr(\\\"height\\\", 300).attr(\\\"fx\\\", function (d) {\\n        // if (d.isActor) {\\n        d.fx = 500 + d.treeDepth * 200;\\n        // }\\n    });\\n\\n    var rectangle = node.append(\\\"rect\\\").attr(\\\"width\\\", function (d) {\\n        if (d.isActor) {\\n            return 60;\\n        } else return 0;\\n    }).attr(\\\"height\\\", 6).attr(\\\"x\\\", -15).attr(\\\"y\\\", -3).attr('fill', 'white').attr('stroke', 'black').call(d3.drag().on(\\\"start\\\", dragstarted).on(\\\"drag\\\", dragged).on(\\\"end\\\", dragended));\\n\\n    var labels = node.append(\\\"text\\\").text(function (d) {\\n        if (d.isActor) {\\n            var actorData = data.objects.filter(function (x) {\\n                return x.ID === d.ID;\\n            });\\n\\n            return actorData[0].fullName;\\n        }\\n        // else return d.ID;\\n    }).attr('x', -10).attr('y', -5);\\n\\n    simulation.nodes(graph.nodes).on(\\\"tick\\\", ticked);\\n\\n    simulation.force(\\\"link\\\").links(graph.links);\\n\\n    function ticked() {\\n        link.attr(\\\"x1\\\", function (d) {\\n            return d.source.x;\\n        }).attr(\\\"y1\\\", function (d) {\\n            return d.source.y;\\n        }).attr(\\\"x2\\\", function (d) {\\n            return d.target.x;\\n        }).attr(\\\"y2\\\", function (d) {\\n            return d.target.y;\\n        });\\n\\n        node.attr(\\\"transform\\\", function (d) {\\n            return \\\"translate(\\\" + d.x + \\\",\\\" + d.y + \\\")\\\";\\n        });\\n    }\\n}\\n\\nfunction dragstarted(d) {\\n    if (!d3.event.active) simulation.alphaTarget(0.3).restart();\\n    d.fx = d.x;\\n    d.fy = d.y;\\n}\\n\\nfunction dragged(d) {\\n    d.fx = d3.event.x;\\n    d.fy = d3.event.y;\\n}\\n\\nfunction dragended(d) {\\n    if (!d3.event.active) simulation.alphaTarget(0);\\n    d.fx = null;\\n    d.fy = null;\\n}\\n\\n// getActors(4);\\n// getActors(42);\\n// getActors(480);\\n\\nvar centralActor = actorManagement.getCentralActor(\\\"490\\\");\\n\\nconsole.log(actorManagement.buildNodeList(centralActor));\\n\\ndrawGraph(actorManagement.data);\\n//# sourceMappingURL=main.js.map\"]}","code":"!function(t){var e={};function r(n){if(e[n])return e[n].exports;var a=e[n]={i:n,l:!1,exports:{}};return t[n].call(a.exports,a,a.exports,r),a.l=!0,a.exports}r.m=t,r.c=e,r.d=function(t,e,n){r.o(t,e)||Object.defineProperty(t,e,{configurable:!1,enumerable:!0,get:n})},r.r=function(t){Object.defineProperty(t,\"__esModule\",{value:!0})},r.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return r.d(e,\"a\",e),e},r.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},r.p=\"\",r(r.s=2)}([function(t,e,r){\"use strict\";var n=t.exports={},a=\"Name\",i=\"Marriage\",s=\"Baptism\",o=\"Offspring\",u=function(t,e,r,n,a,i){this.ID=\"\"+t,this.fullName=e,this.firstParent=r,this.secondParent=n,this.offSpringList=i,this.spouse=a,this.ID.includes(\"+\")?this.isActor=!1:this.isActor=!0},f=function(t,e,r,n,a){this.source=t,this.target=e,this.tieType=r,this.tieStartYear=n,this.tieEndYear=a},c=[],p=[];function l(t,e){var r=function(t){var e=d(a,t);if(!(e&&e.data&&e.data[0]&&e.data[0][0]))return null;var r=e.data[0][0].text;if(r)return r}(e);if(!r)return null;var n=function(t){var e=d(s,t);if(!e)return null;var r=e.data.parents.data[0][\"query-value\"],n=e.data.parents.data[0][\"query-text\"];if(r){var a=new u(r,n);return v(a,c),a}}(e),f=function(t){var e=d(s,t);if(!e)return null;var r=e.data.parents.data[2][\"query-value\"],n=e.data.parents.data[2][\"query-text\"];if(r){var a=new u(r,n);return v(a,c),a}}(e),p=function(t){var e=d(i,t);if(!e)return null;var r=e.data[0].data.spouse.data[0][\"query-value\"],n=e.data[0].data.spouse.data[0][\"query-text\"];if(r){var a=new u(r,n);return v(a,c),a}}(e),l=function(t){var e=d(o,t);if(!e)return null;var r=e.data.offsprings.data;if(r){for(var n=[],a=0;a<r.length;a++)if(\"actor\"===r[a][\"query-type\"]){var i=r[a][\"query-value\"],s=new u(i);if(\"year\"===r[a+2][\"query-type\"]){var f=r[a][\"query-text\"];s.fullName=f}n.push(s),v(s,c)}return n}}(e),h=new u(t,r,n,f,p,l);return function(t){t.spouse&&(t.spouse.spouse=t);t.firstParent&&(t.firstParent.offSpringList||(t.firstParent.offSpringList=[]),t.firstParent.offSpringList.push(t));t.secondParent&&(t.secondParent.offSpringList||(t.secondParent.offSpringList=[]),t.secondParent.offSpringList.push(t))}(h),v(h,c),h}function d(t,e){var r=n.search(t,e);return r&&r.data?r:null}function v(t,e){0===e.filter(function(e){return e.ID===t.ID}).length&&e.push(t)}function h(t){return t?t.ID:\"\"}n.search=function(t,e){for(var r=0;r<e.length;r++)if(e[r].label===t)return e[r];return null},n.checkLabelExistence=d,n.getActorData=function(t){return l(t,n.getJSON(t))},n.createParentsUnionNode=function(t,e,r){if(t.firstParent||t.secondParent){var n=h(t.firstParent),a=h(t.secondParent),i=new u(n+\"+\"+a);v(i,e),new f(i.ID,t.ID)}},n.getJSON=function(t){var e,r=new XMLHttpRequest,n=\"q=\"+t+\"&s=ALL-SOURCES&w=search-by-option\";return r.open(\"POST\",\"https://projectcornelia.be/source_browser/public/router.php\",!1),r.setRequestHeader(\"Content-type\",\"application/x-www-form-urlencoded\"),r.onreadystatechange=function(){4==r.readyState&&200==r.status&&(e=JSON.parse(r.responseText))},r.send(n),e},n.Node=u,n.Tie=f,n.nodeList=c,n.tieList=p},function(t,e,r){\"use strict\";var n,a=t.exports={},i=r(0),s={actors:[],ties:[],objects:[]},o=\"Marriage\",u=\"Offspring\",f=function(t,e,r){this.ID=\"\"+t,this.recursiveDepth=e,this.treeDepth=r,this.ID.includes(\"+\")?this.isActor=!1:this.isActor=!0};function c(t,e){(t.firstParent.ID=e.ID)?t.firstParent=e:(t.secondParent.ID=e.ID)&&(t.secondParent=e)}function p(t,e){for(var r=-1,n=0;n<e.length;n++)if(v(t,e[n])){r=n;break}r<0&&e.push(t)}function l(t,e,r){var n=e.map(function(t){return t.ID}).indexOf(t.ID);if(n<0)t.recursiveDepth=r,e.push(t);else{if(e[n].recursiveDepth>r)return e[n].recursiveDepth=r,t;if(e[n].recursiveDepth<r)return t.recursiveDepth=e[n].recursiveDepth,t;if(!e[n].recursiveDepth)return e[n].recursiveDepth=r,t}return t}function d(t,e){var r=\"\";t.spouse&&(r=t.spouse.ID);var n=new f(t.ID+\"+\"+r);return n=l(n,s.actors,e+.5)}function v(t,e){var r=Object.getOwnPropertyNames(t),n=Object.getOwnPropertyNames(e);if(r.length!=n.length)return!1;for(var a=0;a<r.length;a++){var i=r[a];if(t[i]!==e[i])return!1}return!0}a.getCentralActor=function(t){var e={},r={},n=i.getActorData(t);if(n.offSpringList)for(var a=0;a<n.offSpringList.length;a++){if(c(e=i.getActorData(n.offSpringList[a].ID),n),e.offSpringList)for(var s=0;s<e.offSpringList.length;s++)c(r=i.getActorData(e.offSpringList[s].ID),e),e.offSpringList[s]=r;c(e,n),n.offSpringList[a]=e}return n},a.buildNodeList=function(t){n=2;var e=new f(t.ID,0,0),r=function t(e,r,a,s){if(a>=n)return r;if(a<n&&e.offSpringList){s++;for(var c=d(e,a),v=0;v<e.offSpringList.length;v++){var h=e.offSpringList[v],g=new i.Tie(e.ID,c.ID,u),D=new i.Tie(c.ID,h.ID,u);g=p(g,r.ties),D=p(D,r.ties),r=t(h,r,++a,s);var I=new f(h.ID);I.recursiveDepth=a,I.treeDepth=s,I=l(I,r.actors,a),h=l(h,r.objects,a),a--}s--}if(e.spouse){var y=e.spouse,w=new i.Tie(e.ID,y.ID,o);w=p(w,r.ties),r=t(y,r,++a,s);var I=new f(y.ID,a,s);I.treeDepth=s,I=l(I,r.actors,a),y=l(y,r.objects,a),a--}if(e.firstParent){s--;var c=d(e.firstParent,a),x=e.firstParent,g=new i.Tie(x.ID,c.ID,u),D=new i.Tie(c.ID,e.ID,u);g=p(g,r.ties),D=p(D,r.ties),r=t(x,r,++a,s);var I=new f(x.ID,a,s);I=l(I,r.actors,a),x=l(x,r.objects,a),s++,a--}if(e.secondParent){s--;var c=d(e.secondParent,a),P=e.secondParent,g=new i.Tie(P.ID,c.ID,u),D=new i.Tie(c.ID,e.ID,u);g=p(g,r.ties),D=p(D,r.ties),r=t(P,r,++a,s);var I=new f(P.ID,a,s);I.treeDepth=s,I=l(I,r.actors,a),P=l(P,r.objects,a),s++,a--}return r}(t,s,0,0);return l(e,s.actors,0),l(t,s.objects,0),s.actors=function(t){for(var e=0;e<t.length;e++)if(!t[e].isActor){var r=t[e].ID,n=r.split(\"+\"),a=(i=n[0],o=(s=t).map(function(t){return t.ID}).indexOf(i),s[o]);t[e].treeDepth=a.treeDepth+.5}var i,s,o;return t}(s.actors),function(t){for(var e=0;e<t.actors;e++)console.log(t.actors[e])}(s),r},a.arraySort=function(t,e){return t.ID>e.ID?1:e.ID>t.ID?-1:0},a.arraySortByTwoColumns=function(t,e){var r=t.source,n=e.source,a=t.target,i=e.target;return r==n?a<i?-1:a>i?1:0:r<n?-1:1},a.data=s},function(t,e,r){\"use strict\";r(0);var n,a=r(1),i=d3.select(\"svg\"),s=+i.attr(\"width\"),o=+i.attr(\"height\");d3.scaleOrdinal(d3.schemeCategory20);function u(t){d3.event.active||n.alphaTarget(.3).restart(),t.fx=t.x,t.fy=t.y}function f(t){t.fx=d3.event.x,t.fy=d3.event.y}function c(t){d3.event.active||n.alphaTarget(0),t.fx=null,t.fy=null}var p=a.getCentralActor(\"490\");console.log(a.buildNodeList(p)),function(t){var e={};e.nodes=t.actors,e.links=t.ties,n=d3.forceSimulation().force(\"link\",d3.forceLink().id(function(t){return t.ID}).distance(100).strength(1)).force(\"charge\",d3.forceManyBody().strength(-400)).force(\"center\",d3.forceCenter(s/2,o/2));var r=i.append(\"g\").attr(\"class\",\"links\").selectAll(\"line\").data(e.links).enter().append(\"line\"),a=i.append(\"g\").attr(\"class\",\"nodes\").selectAll(\"g\").data(e.nodes).enter().append(\"g\").attr(\"height\",300).attr(\"fx\",function(t){t.fx=500+200*t.treeDepth});a.append(\"rect\").attr(\"width\",function(t){return t.isActor?60:0}).attr(\"height\",6).attr(\"x\",-15).attr(\"y\",-3).attr(\"fill\",\"white\").attr(\"stroke\",\"black\").call(d3.drag().on(\"start\",u).on(\"drag\",f).on(\"end\",c)),a.append(\"text\").text(function(e){if(e.isActor)return t.objects.filter(function(t){return t.ID===e.ID})[0].fullName}).attr(\"x\",-10).attr(\"y\",-5),n.nodes(e.nodes).on(\"tick\",function(){r.attr(\"x1\",function(t){return t.source.x}).attr(\"y1\",function(t){return t.source.y}).attr(\"x2\",function(t){return t.target.x}).attr(\"y2\",function(t){return t.target.y}),a.attr(\"transform\",function(t){return\"translate(\"+t.x+\",\"+t.y+\")\"})}),n.force(\"link\").links(e.links)}(a.data)}]);","extractedComments":[]}