{"version":3,"sources":["../../scripts/jsonConversion.js"],"names":["exports","module","NAME_LABEL","MARRIAGE_LABEL","BAPTISM_LABEL","FUNERAL_LABEL","OFFSPRING_LABEL","Node","id","fullName","firstParent","secondParent","spouse","offSpringList","ID","includes","isActor","Tie","source","target","tieType","tieStartYear","tieEndYear","nodeList","tieList","getJSON","myActorData","http","XMLHttpRequest","url","params","open","setRequestHeader","onreadystatechange","readyState","status","JSON","parse","responseText","send","parseJSON","actorJSON","console","log","actorFullName","getFullNameFromJSON","getFirstParentFromJSON","getSecondParentFromJSON","actorSpouse","getSpouseID","getOffspringList","centralActor","createParentsUnionNode","createCentralActorUnionNode","pushActorToList","json","element","checkLabelExistence","data","text","firstParentID","parents","firstParentName","thisFirstParent","secondParentID","secondParentName","thisSecondParent","getFirstGodParentFromJSON","firstGodParentID","godparents","getSecondGodParentFromJSON","secondGodParentID","getBaptismPlace","baptismPlace","value","getBaptismDate","baptismDate","place","getBaptismSource","baptismSource","spouseID","spouseName","thisSpouse","getFuneralDate","funeralDate","rawOffspringArray","offsprings","offSpringNameList","i","length","thisChildID","thisChild","thisChildName","push","getActorData","myActorJSON","myActorObject","label","search","nameKey","myArray","actor","isActorInList","filter","e","relativeIDToString","relative","relativeID","firstParentToMarriageTie","secondParentToMarriageTie","parentsMarriageNode","marriageToCentralActorTie","actorSpouseID","actorMarriageNode","actorToMarriageTie","spouseToMarriageTie","marriageToOffspringTie"],"mappings":"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","file":"jsonConversion.js","sourcesContent":["var exports = module.exports = {};\n\nvar NAME_LABEL = \"Name\";\nvar MARRIAGE_LABEL = \"Marriage\";\nvar BAPTISM_LABEL = \"Baptism\";\nvar FUNERAL_LABEL = \"Funeral\";\nvar OFFSPRING_LABEL = \"Offspring\";\n\n\nvar Node = function (id, fullName, firstParent, secondParent, spouse, offSpringList) {\n    this.ID = \"\" + id;\n    this.fullName = fullName;\n    this.firstParent = firstParent;\n    this.secondParent = secondParent;\n    this.offSpringList = offSpringList;\n    this.spouse = spouse;\n    if (this.ID.includes(\"+\")) {\n        this.isActor = false;\n    }\n    else this.isActor = true;\n};\n\n\n\nvar Tie = function (source, target, tieType, tieStartYear, tieEndYear) {\n    this.source = source;\n    this.target = target;\n    this.tieType = tieType;\n    this.tieStartYear = tieStartYear;\n    this.tieEndYear = tieEndYear;\n};\n\nvar nodeList = [];\nvar tieList = [];\n\n\n\n\n\n\nfunction getJSON(id) {\n    var myActorData;\n    var http = new XMLHttpRequest();\n    var url = \"https://projectcornelia.be/source_browser/public/router.php\";\n    var params = \"q=\" + id + \"&s=ALL-SOURCES&w=search-by-option\";\n\n    // TODO: now synchronous call. to be fixed\n    http.open(\"POST\", url, false);\n\n//Send the proper header information along with the request\n    http.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n\n    http.onreadystatechange = function () {//Call a function when the state changes.\n        if (http.readyState == 4 && http.status == 200) {\n            myActorData = JSON.parse(http.responseText);\n        }\n    };\n    http.send(params);\n    return (myActorData);\n\n}\n\nfunction parseJSON(id, actorJSON) {\n    var myActorData;\n    console.log(actorJSON);\n\n    // TODO: convert to date object\n\n    var actorFullName = getFullNameFromJSON(actorJSON);\n\n    var firstParent = getFirstParentFromJSON(actorJSON);\n    var secondParent = getSecondParentFromJSON(actorJSON);\n\n    // var firstGodParent = getFirstGodParentFromJSON(actorJSON);\n    // var secondGodParent = getSecondGodParentFromJSON(actorJSON);\n    //\n    // var actorBaptismDate = getBaptismDate(actorJSON);\n    // var actorBaptismPlace = getBaptismPlace(actorJSON);\n    // var actorBaptismSource = getBaptismSource(actorJSON);\n    //\n    // var actorFuneralDate = getFuneralDate(actorJSON);\n\n    var actorSpouse = getSpouseID(actorJSON);\n\n    var offSpringList = getOffspringList(actorJSON);\n\n    var centralActor = new Node(id, actorFullName, firstParent, secondParent, actorSpouse, offSpringList)\n\n    if (firstParent || secondParent) {\n        createParentsUnionNode(centralActor);\n    }\n\n    if (offSpringList || actorSpouse) {\n        createCentralActorUnionNode(centralActor);\n    }\n\n\n    pushActorToList(centralActor);\n\n\n    return centralActor;\n\n}\n\nfunction getFullNameFromJSON(json) {\n    var element = checkLabelExistence(NAME_LABEL, json);\n    console.log(element);\n    if (!element) return null;\n    var fullName = element.data[0][0].text;\n    if (fullName) {\n        return (fullName);\n    }\n}\n\nfunction getFirstParentFromJSON(json) {\n    var element = checkLabelExistence(BAPTISM_LABEL, json);\n    if (!element) return null;\n    var firstParentID = element.data.parents.data[0][\"query-value\"];\n    var firstParentName = element.data.parents.data[0][\"query-text\"];\n    if (firstParentID) {\n        var thisFirstParent = new Node(firstParentID, firstParentName);\n        pushActorToList(thisFirstParent);\n        return (thisFirstParent);\n    }\n}\n\nfunction getSecondParentFromJSON(json) {\n    var element = checkLabelExistence(BAPTISM_LABEL, json);\n    if (!element) return null;\n    var secondParentID = element.data.parents.data[2][\"query-value\"];\n    var secondParentName = element.data.parents.data[2][\"query-text\"];\n    if (secondParentID) {\n        var thisSecondParent = new Node(secondParentID, secondParentName);\n        pushActorToList(thisSecondParent);\n        return (thisSecondParent);\n    }\n}\n\nfunction getFirstGodParentFromJSON(json) {\n    var element = checkLabelExistence(BAPTISM_LABEL, json);\n    if (!element) return null;\n    var firstGodParentID = element.data.godparents.data[0][\"query-text\"];\n    if (firstGodParentID) {\n        return (firstGodParentID);\n    }\n}\n\nfunction getSecondGodParentFromJSON(json) {\n    var element = checkLabelExistence(BAPTISM_LABEL, json);\n    if (!element) return null;\n    var secondGodParentID = element.data.godparents.data[2][\"query-text\"];\n    if (secondGodParentID) {\n        return (secondGodParentID);\n    }\n}\n\nfunction getBaptismPlace(json) {\n    var element = checkLabelExistence(BAPTISM_LABEL, json);\n    if (!element) return null;\n\n    var baptismPlace = element.value;\n    if (baptismPlace) {\n        return (baptismPlace);\n    }\n}\n\nfunction getBaptismDate(json) {\n    var element = checkLabelExistence(BAPTISM_LABEL, json);\n    if (!element) return null;\n\n    var baptismDate = element.data.place.data[0].text;\n    if (baptismDate) {\n        return (baptismDate);\n    }\n}\n\nfunction getBaptismSource(json) {\n    var element = checkLabelExistence(BAPTISM_LABEL, json);\n    if (!element) return null;\n\n    var baptismSource = element.data.source.data[0].text;\n    if (baptismSource) {\n        return (baptismSource);\n    }\n}\n\nfunction getSpouseID(json) {\n    var element = checkLabelExistence(MARRIAGE_LABEL, json);\n    if (!element) return null;\n    var spouseID = element.data[0].data.spouse.data[0][\"query-value\"];\n    var spouseName = element.data[0].data.spouse.data[0][\"query-text\"];\n\n    if (spouseID) {\n        var thisSpouse = new Node(spouseID, spouseName);\n        pushActorToList(thisSpouse);\n        return (thisSpouse);\n    }\n}\n\nfunction getFuneralDate(json) {\n    var element = checkLabelExistence(FUNERAL_LABEL, json);\n    if (!element) return null;\n\n    var funeralDate = element.value;\n    if (funeralDate) {\n        return (funeralDate);\n    }\n}\n\nfunction getOffspringList(json) {\n    var element = checkLabelExistence(OFFSPRING_LABEL, json);\n    if (!element) return null;\n\n    var rawOffspringArray = element.data.offsprings.data;\n\n    if (rawOffspringArray) {\n        var offSpringNameList = [];\n        var offSpringList = [];\n        for (var i = 0; i < rawOffspringArray.length; i++) {\n            if (rawOffspringArray[i][\"query-type\"] === \"actor\") {\n                var thisChildID = rawOffspringArray[i][\"query-value\"];\n                var thisChild = new Node(thisChildID);\n                if (rawOffspringArray[i + 2][\"query-type\"] === \"year\") {\n                    var thisChildName = rawOffspringArray[i][\"query-text\"];\n                    thisChild.fullName = thisChildName\n                }\n                offSpringList.push(thisChild);\n                pushActorToList(thisChild);\n            }\n        }\n        return (offSpringList);\n    }\n}\n\n\nfunction getActorData(id) {\n    var myActorJSON = exports.getJSON(id);\n    console.log(myActorJSON);\n    var myActorObject = parseJSON(id, myActorJSON);\n\n    return myActorObject;\n}\n\nfunction checkLabelExistence(label, json) {\n    var element = exports.search(label, json);\n    if (!element || !element.data) {\n        return null;\n    } else {\n        return element;\n    }\n}\n\nfunction search(nameKey, myArray) {\n    for (var i = 0; i < myArray.length; i++) {\n        if (myArray[i].label === nameKey) {\n            return myArray[i];\n        }\n    }\n    return null;\n}\n\n\nfunction pushActorToList(actor) {\n    var isActorInList = nodeList.filter(function (e) {\n        return e.ID === actor.ID\n    });\n    if (isActorInList.length === 0) {\n\n        nodeList.push(actor);\n    }\n    else {\n        return;\n    }\n}\n\n\nfunction relativeIDToString(relative) {\n    var relativeID = null;\n    if (relative)\n        relativeID = relative.ID;\n    else relativeID = \"\";\n    return relativeID;\n\n}\n\n\n\nfunction createParentsUnionNode(actor) {\n    var firstParentToMarriageTie, secondParentToMarriageTie;\n\n    var firstParentID = relativeIDToString(actor.firstParent);\n    var secondParentID = relativeIDToString(actor.secondParent);\n\n    var parentsMarriageNode = new Node(firstParentID + \"+\" + secondParentID);\n    pushActorToList(parentsMarriageNode);\n\n    if (firstParentID.length > 0) {\n        firstParentToMarriageTie = new Tie(firstParentID, parentsMarriageNode.ID);\n    }\n    if (secondParentID.length > 0) {\n        secondParentToMarriageTie = new Tie(secondParentID, parentsMarriageNode.ID);\n    }\n\n    var marriageToCentralActorTie = new Tie(parentsMarriageNode.ID, actor.ID);\n\n    tieList.push(firstParentToMarriageTie, secondParentToMarriageTie, marriageToCentralActorTie);\n}\n\n\nfunction createCentralActorUnionNode(actor) {\n\n    var actorSpouseID = relativeIDToString(actor.spouse);\n    var actorMarriageNode = new Node(actor.ID + \"+\" + actorSpouseID);\n    pushActorToList(actorMarriageNode);\n    var actorToMarriageTie = new Tie(actor.ID, actorMarriageNode.ID);\n    tieList.push(actorToMarriageTie);\n\n    if (actor.spouse) {\n        var spouseToMarriageTie = new Tie(actor.spouse.ID, actorMarriageNode.ID);\n        tieList.push(spouseToMarriageTie);\n    }\n\n    if (actor.offSpringList) {\n        for (var i = 0; i < actor.offSpringList.length; i++) {\n            var marriageToOffspringTie = new Tie(actorMarriageNode.ID, actor.offSpringList[i].ID);\n            tieList.push(marriageToOffspringTie);\n        }\n\n\n    }\n}\n\n\n\nexports.search = search;\nexports.checkLabelExistence = checkLabelExistence;\nexports.getActorData = getActorData;\nexports.getJSON = getJSON;\nexports.Node = Node;\nexports.nodeList = nodeList;\nexports.tieList = tieList;\n\n// export {exports};"]}