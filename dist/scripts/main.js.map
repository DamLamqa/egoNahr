{"version":3,"sources":["../../scripts/main.js"],"names":["jsonConversion","require","CENTRAL_DEPTH_LEVEL","simulation","svg","d3","select","width","attr","height","color","scaleOrdinal","schemeCategory20","getCentralActor","id","thisChild","thisGrandChild","centralActor","getActorData","offSpringList","i","length","ID","j","assignOriginParentNodeToChild","console","log","actor","originParent","firstParent","secondParent","drawGraph","nodes","links","graph","forceSimulation","force","forceLink","d","forceManyBody","strength","forceCenter","link","append","selectAll","data","enter","node","rectangle","isActor","call","drag","on","dragstarted","dragged","dragended","labels","text","fullName","ticked","source","x","y","target","event","active","alphaTarget","restart","fx","fy","traverseGraph","getActors","depth","checkNode","a","traversed","nodeList","tieList"],"mappings":"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","file":"main.js","sourcesContent":["\nconst jsonConversion = require('./jsonConversion.js');\n\n\nvar CENTRAL_DEPTH_LEVEL = 0;\n\n//  var ActorFinal = function (id, fullName, baptismDate, birthYear, birthPlace, deathYear, gender, occupation, firstAppearance, firstParent, secondParent, spouse, firstGodParent, secondGodParent, offSpringList) {\n//     this.ID = id;\n//     this.firstName = firstName;\n//     this.lastName = lastName;\n//     this.fullName = fullName;\n//     this.baptismDate = baptismDate;\n//     this.birthYear = birthYear;\n//     this.birthPlace = birthPlace;\n//     this.deathYear = deathYear;\n//     this.gender = gender;\n//     this.occupation = occupation;\n//     this.firstAppearance = firstAppearance;\n//     this.firstParent = firstParent;\n//     this.secondParent = secondParent;\n//     this.firstGodParent = firstGodParent;\n//     this.secondGodParent = secondGodParent;\n//     this.offSpringList = offSpringList;\n//\n//     this.spouse = spouse;\n// };\n\n\n\nvar simulation;\nvar svg = d3.select(\"svg\"),\n    width = +svg.attr(\"width\"),\n    height = +svg.attr(\"height\");\n\nvar color = d3.scaleOrdinal(d3.schemeCategory20);\n\n\n\n\n\nfunction getCentralActor(id) {\n    var thisChild = {},\n        thisGrandChild = {};\n    var centralActor = jsonConversion.getActorData(id);\n    if (centralActor.offSpringList) {\n        for (var i = 0; i < centralActor.offSpringList.length; i++) {\n            thisChild = jsonConversion.getActorData(centralActor.offSpringList[i].ID);\n\n            if (thisChild.offSpringList) {\n                for (var j = 0; j < thisChild.offSpringList.length; j++) {\n                    thisGrandChild = jsonConversion.getActorData(thisChild.offSpringList[j].ID);\n                    assignOriginParentNodeToChild(thisGrandChild, thisChild);\n                    thisChild.offSpringList[j] = thisGrandChild;\n                }\n            }\n            assignOriginParentNodeToChild(thisChild, centralActor);\n            centralActor.offSpringList[i] = thisChild;\n        }\n    }\n\n\n    console.log(centralActor);\n}\n\nfunction assignOriginParentNodeToChild(actor, originParent) {\n\n    if (actor.firstParent.ID = originParent.ID) {\n        actor.firstParent = originParent;\n    }\n    else if (actor.secondParent.ID = originParent.ID) {\n        actor.secondParent = originParent;\n    }\n\n}\n\n\n\nfunction drawGraph(nodes, links) {\n\n    var graph = {};\n    graph[\"nodes\"] = nodes;\n    graph[\"links\"] = links;\n\n    simulation = d3.forceSimulation()\n        .force(\"link\", d3.forceLink().id(function (d) {\n            return \"\" + d.ID;\n        }))\n        .force(\"charge\", d3.forceManyBody().strength(-250))\n        .force(\"center\", d3.forceCenter(width / 2, height / 2));\n\n\n    // graph.nodes.filter(function (d) {\n    //     if (d.type === \"root\") {\n    //         d.fx = 100;\n    //     }\n    //     else if (d.type === \"leaf\") {\n    //         d.fx = 500;\n    //     }\n    //\n    // });\n\n    var link = svg.append(\"g\")\n        .attr(\"class\", \"links\")\n        .selectAll(\"line\")\n        .data(graph.links)\n        .enter().append(\"line\");\n\n    var node = svg.append(\"g\")\n        .attr(\"class\", \"nodes\")\n        .selectAll(\"g\")\n        .data(graph.nodes)\n        .enter().append(\"g\");\n\n\n    var rectangle = node.append(\"rect\")\n        .attr(\"width\", function (d) {\n            if (d.isActor) {\n                return 60;\n            }\n            else return 0;\n        })\n        .attr(\"height\", 6)\n        .attr(\"x\", -15)\n        .attr(\"y\", -3)\n        .attr('fill', 'white')\n        .attr('stroke', 'black')\n        .call(d3.drag()\n            .on(\"start\", dragstarted)\n            .on(\"drag\", dragged)\n            .on(\"end\", dragended));\n\n    var labels = node.append(\"text\")\n        .text(function (d) {\n            if (d.isActor)\n                return d.fullName;\n        })\n        .attr('x', -10)\n        .attr('y', -10);\n\n\n    simulation\n        .nodes(graph.nodes)\n        .on(\"tick\", ticked);\n\n    simulation.force(\"link\")\n        .links(graph.links);\n\n    function ticked() {\n        link\n            .attr(\"x1\", function (d) {\n                return d.source.x;\n            })\n            .attr(\"y1\", function (d) {\n                return d.source.y;\n            })\n            .attr(\"x2\", function (d) {\n                return d.target.x;\n            })\n            .attr(\"y2\", function (d) {\n                return d.target.y;\n            });\n\n        node\n            .attr(\"transform\", function (d) {\n                return \"translate(\" + d.x + \",\" + d.y + \")\";\n            })\n    }\n}\n\nfunction dragstarted(d) {\n    if (!d3.event.active) simulation.alphaTarget(0.3).restart();\n    d.fx = d.x;\n    d.fy = d.y;\n\n}\n\nfunction dragged(d) {\n    d.fx = d3.event.x;\n    d.fy = d3.event.y;\n}\n\nfunction dragended(d) {\n    if (!d3.event.active) simulation.alphaTarget(0);\n    d.fx = null;\n    d.fy = null;\n}\n\nfunction traverseGraph(actor) {\n    console.log(actor);\n\n    if (actor.offSpringList) {\n        for (var i = 0; i < actor.offSpringList.length; i++) {\n            getActors(actor.offSpringList[i].ID);\n            if (actor.offSpringList[i].offSpringList) {\n                for (var j = 0; j < actor.offSpringList[i].offSpringList[j]; j++)\n                    (actor.offSpringList[i].offSpringList[j].depth = CENTRAL_DEPTH_LEVEL - 2);\n            }\n            actor.offSpringList[i].depth = CENTRAL_DEPTH_LEVEL - 1;\n\n            // console.log(getActors(actor.offSpringList[i].ID));\n\n        }\n    }\n    actor.depth = CENTRAL_DEPTH_LEVEL;\n\n    if (actor.firstParent) {\n        // getActors(actor.firstParent.ID);\n    }\n\n\n}\n\nfunction checkNode(a) {\n\n    if (a.offSpringList) {\n        // checkNode(a.offSpringList)\n    }\n    a.traversed = true;\n\n}\n\n\n// getActors(4);\n// getActors(42);\n// getActors(480);\n\nvar centralActor = getCentralActor(\"490\");\n\n// traverseGraph(centralActor);\n\n\nconsole.log(jsonConversion.nodeList);\ndrawGraph(jsonConversion.nodeList, jsonConversion.tieList);\n\n"]}